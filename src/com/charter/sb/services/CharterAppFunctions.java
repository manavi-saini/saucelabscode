package com.charter.sb.services;

import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import java.util.regex.Pattern;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.UnhandledAlertException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.Select;










import com.charter.sb.beans.RunManagerInfo;
import com.charter.sb.controllers.Initialization;
import com.charter.sb.resources.MB_PageObjects;
import com.charter.sb.utils.CommonFunctions;
import com.charter.sb.utils.ReportingFunctions;
import com.charter.sb.utils.RunManager;
import com.google.common.collect.Iterables;

public class CharterAppFunctions extends Initialization {
	public String intCounter;
	public String strStatus;
	public String strEnvironment1=null;
	public  boolean blnFlag;
	public  boolean loginStatusV1;
	public  boolean loginStatusV2;
	String accountNumber;
	String securityCode;
	public  boolean status; 
	public  boolean status1;
	ReportingFunctions repfn=new ReportingFunctions();
	RunManager runmgr=new RunManager();
	CommonFunctions cnf=new CommonFunctions();
	MB_PageObjects mbo = new MB_PageObjects();
	String first_Name;
	String last_Name ;
	
	Random rg=new Random();
	int randomInt = rg.nextInt(10000);
	String Random_int_validation;
	String First_name_validation;
	String SecurityCode;
	String forwardStatus;
	public  boolean voiceService = true;
	public  boolean directoryListing = true;
	//String Browser=m1.get("BROWSER").toString();
	
	public synchronized boolean FnLaunchCharterApp(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		boolean blnFlag=false;
		
		String AppEnvironment=m1.get("Env").toString();
		System.out.println("inside fn launch:"+ AppEnvironment);

		try{
			
			String appUrl=m1.get("AppURL").toString();
			
			String s[]=appUrl.split("//");
			String s1=s[0];
			String s2=s[1];
			String s3[]=s2.split("@");
			String s4=s3[1];
			String AppUrl=s1+"//"+s4;
			
			runManagerInfoObj.setAppUrl(AppUrl);
			String url=driver.getCurrentUrl();
			if(url.contains("spectrumbusiness.net")){
				repfn.FnUpdateTestStepResHTML("Verify Browser get launched or not", "Browser: "+runManagerInfoObj.getStrBrowser()+" is launched","PASS",runManagerInfoObj);
				if (cnf.FnExplicitWait("XPATH", mbo.LoginWindow,driver))
				{	
					blnFlag=true;
					
					repfn.FnUpdateTestStepResHTML("Verify URL get launched or not","Required URL get launched sucessfully:"+url, "PASS",runManagerInfoObj);
					 
				}else
				{
				repfn.FnUpdateTestStepResHTML("Verify URL get launched or not","Required URL not get launched", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Browser get launched or not", "Browser: "+runManagerInfoObj.getStrBrowser()+" is not launched","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			
				
			
		}catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Login to Charter application", "Login operation not performed","FAIL",runManagerInfoObj);
			blnFlag=false;
		}		
		m1.put("STEPSTATUS", blnFlag);
		System.out.println( "launch flag: "+blnFlag);
		return blnFlag;

	}
	public synchronized boolean AlertAccept(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		 try
		 {
			 Alert alert = driver.switchTo().alert();
			 Thread.sleep(4000);
			 alert.accept();
			 repfn.FnUpdateTestStepResHTML("Verify if alertpopup is displayed and it has to be handled", "Alert popup is displayed and it can be handled", "PASS",runManagerInfoObj);
			 repfn.FnUpdateTestStepResHTML("Verify if alert popup is accepted ", "Alert popup is accepted", "PASS",runManagerInfoObj);
			 blnFlag=true;
		 }
		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify if Alert popup is displayed and it has to be handled", "Alert popup is not displayed and does not have to be handled", "PASS",runManagerInfoObj);
			 blnFlag=false;
		 }
		 return blnFlag;
	}
	public synchronized boolean UserLogin(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
	{
		
		try
		{
			driver.manage().window().maximize();
			String strUserName=runManagerInfoObj.getStrTestCaseUser();
			String strPwd=runManagerInfoObj.getStrTestCasePwd();
			
		
			if(driver.getTitle().toString().contains("SpectrumBusiness.net - Sign In") )
			{

				repfn.FnUpdateTestStepResHTML("Verify login home Page get loaded or not ", "Login home page is launched","PASS",runManagerInfoObj);					

				if(runManagerInfoObj.getStrTestCaseUser()=="SkipLogin")
				{
					repfn.FnUpdateTestStepResHTML("Login required or not", "Login not required as script user is:"+runManagerInfoObj.getStrTestCaseUser(),"PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
				if(cnf.FnExplicitWait("XPATH", mbo.UserName,driver)){
					WebElement userName=driver.findElement(By.xpath(mbo.UserName));
					repfn.FnUpdateTestStepResHTML("Enter username field is present or not", "Username field is present","PASS",runManagerInfoObj);
					userName.sendKeys(strUserName);
					repfn.FnUpdateTestStepResHTML("Enter User ID: " +strUserName, "User ID is entered","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("UserName is entered or not" +strUserName, "User ID is not entered as field not present","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				if(cnf.FnExplicitWait("XPATH", mbo.Password,driver))
				{

					WebElement Password=driver.findElement(By.xpath(mbo.Password));
					repfn.FnUpdateTestStepResHTML("Enter Password field is present or not", "Enter password field is present","PASS",runManagerInfoObj);
					Password.sendKeys(strPwd);
					repfn.FnUpdateTestStepResHTML("Enter Password", "Password is entered","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Enter Password field is present or not", "Password is not entered as field not present","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				//Click on Sign in Button
				if(cnf.FnExplicitWait("XPATH", mbo.SignInBtn,driver)){
					repfn.FnUpdateTestStepResHTML("SignIn Button is displayed", "SignIn Button is displayed","PASS",runManagerInfoObj);

					WebElement login=driver.findElement(By.xpath(mbo.SignInBtn));
					if(cnf.JSClick(login,driver)){

						repfn.FnUpdateTestStepResHTML("Click on SignIn Button", "SignIn Button is Clicked","PASS",runManagerInfoObj);
						blnFlag = true;


					}else{
						repfn.FnUpdateTestStepResHTML("Click on SignIn Button", "SignIn Button is not Clicked","FAIL",runManagerInfoObj);	
						blnFlag = false;
					}
				}else{
					repfn.FnUpdateTestStepResHTML("SignIn Button is displayed", "SignIn Button is not displayed","FAIL",runManagerInfoObj);	
					blnFlag = false;
				}

				
				if(strUserName.equalsIgnoreCase("anders1")){
					cnf.FnExplicitWait("XPATH", mbo.PageVerification_V1,driver);
					WebElement overViewPage=driver.findElement(By.xpath(mbo.PageVerification_V1));
					if(overViewPage.getAttribute("textContent").equalsIgnoreCase("Overview")){
						blnFlag = true;
						System.out.println("passed");
					}	
				}
				else if(cnf.FnExplicitWait("XPATH", mbo.Home_OverviewLabel,driver))
					{
						blnFlag = true;
						repfn.FnUpdateTestStepResHTML("Veriy whether login is success or not", "User loged in succesfully for V2 user", "PASS",runManagerInfoObj);
						
					}
					
				else if(cnf.FnExplicitWait("XPATH", mbo.Invalid_credentials,driver)||cnf.FnExplicitWait("XPATH", mbo.Invalid_credentials_weakpwd,driver)){
						
					WebElement Errormsg=driver.findElement(By.xpath(mbo.Invalid_credentials));
					String errorMsg=Errormsg.getText();
					if(errorMsg.equalsIgnoreCase("We're sorry, we're unable to process your request at this time. Please try again.")){
					repfn.FnUpdateTestStepResHTML("Veriy whether login is success or not", "Login Failed due to login server issue as message displayed \""+errorMsg+" \"", "FAIL",runManagerInfoObj);	
							blnFlag= false;
							
							}
					else{
						repfn.FnUpdateTestStepResHTML("Veriy whether login is success or not", "Login Failed due to invalid credentials", "FAIL",runManagerInfoObj);	
						blnFlag= false;
					}
				}
				else
					{
					if(cnf.FnExplicitWait("XPATH", mbo. v1_overview,driver)) {
					
					blnFlag = true;

					repfn.FnUpdateTestStepResHTML("Veriy whether login is success or not", "User loged in succesfully for V1 user", "PASS",runManagerInfoObj);
					}
					}
			
			}	
			}else
			{   
				repfn.FnUpdateTestStepResHTML("Verify login home Page get loaded or not", "Login home page is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
					
}catch(Exception e)
		{
			blnFlag	=false;
			repfn.FnUpdateTestStepResHTML("Login to Charter.net ", "Login is not performed due to exception","FAIL",runManagerInfoObj);

		}
		return blnFlag;
	}
	
	public synchronized boolean FnOverviewPage(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		try{
			Thread.sleep(5000);
			if(cnf.FnExplicitWait("XPATH", mbo.Home_OverviewLabel,driver))
			{
				System.out.println("Inside overviewpage method: "+driver);
				repfn.FnUpdateTestStepResHTML("Verify whether User is in Overview Page or not","User is navigated to overview page","PASS",runManagerInfoObj);

				blnFlag=true;

			}else
			{
				repfn.FnUpdateTestStepResHTML("Verify whether User is in Overview Page or not","User is not in overview page","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify whether User is navigated to Overview Page or not","User is not navigated to overview page due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
			m1.put("STEPSTATUS", blnFlag);
			return blnFlag;
		
	}
	public synchronized boolean CommonLogout(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
		 try
		 {
			 
			 if(cnf.isAlertPresent()){
					driver.switchTo().alert();
					String ErrMsg=driver.switchTo().alert().getText();
					driver.switchTo().alert().accept();
					driver.switchTo().defaultContent();
					Thread.sleep(5000);

				}else{
					System.out.println("No alert present");                                              
				}
			 
			 if(runManagerInfoObj.getStrTestCaseUser()=="SkipLogin"){
				 //do nothing
				 blnFlag=true;
			 }
			 else{
			 if(cnf.FnExplicitWait("XPATH",mbo.headerDropdown,driver))
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if the Logged user Drop down link is displayed", "Logged user Dropdown link is displayed","PASS",runManagerInfoObj); 
				 WebElement HeaderDropdownLogin=driver.findElement(By.xpath(mbo.headerDropdown));					 
				 if(cnf.JSClick(HeaderDropdownLogin,driver)){
					 
					 repfn.FnUpdateTestStepResHTML("Verify Click on the Logged user dropdown link", "Logged in user dropdown is clicked","PASS",runManagerInfoObj); 
					 if(cnf.FnExplicitWait("XPATH",mbo.LogoutHeader,driver)){	
						 WebElement LogoutHeader=driver.findElement(By.xpath(mbo.LogoutHeader));
						 if(cnf.JSClick(LogoutHeader,driver)){
							 repfn.FnUpdateTestStepResHTML("Check Whether Sign out button is displayed and clicked in the Drop down", "Sign out button is displayed and clicked","PASS",runManagerInfoObj); 
							 Thread.sleep(5000);
							 if(cnf.FnExplicitWait("XPATH", mbo.LoginWindow,driver)){
								 repfn.FnUpdateTestStepResHTML("Check Whether Sign out performed sucessfully or not", "Sign out is performed sucessfully as login window getting displayed & user is navigated to login home pagw","PASS",runManagerInfoObj); 
								 blnFlag=true;
							 }else{
								 repfn.FnUpdateTestStepResHTML("Check Whether Sign out performed sucessfully or not", "Sign out is not performed sucessfully as login window is not getting displayed","FAIL",runManagerInfoObj); 
								 blnFlag=false;
							 }
							// driver.close();
							 driver.quit();
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Check Whether Sign out button is displayed and clicked in the Drop down", "Sign out button is not displayed and clicked","FAIL",runManagerInfoObj); 
							 blnFlag=false;
						 }
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Check Whether Sign out button is displayed in the Drop down", "Sign out button is not displayed","FAIL",runManagerInfoObj); 
						 blnFlag=false;
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Click on the Logged user dropdown link", "Logged in user dropdown is not clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }

			 }
			
			 else
			 {
				 if(cnf.FnExplicitWait("XPATH", mbo.LoginWindow,driver)){
					 blnFlag=true;
					
					
					 
				 }else{
					 blnFlag=false; 
				 repfn.FnUpdateTestStepResHTML("Logout of Spectrum Business.net ", "Logout is not performed due to some issue","FAIL",runManagerInfoObj);
			 }

		 }
		 }
		 }
		 catch(Exception e)
		 {
			 blnFlag = false;
			 repfn.FnUpdateTestStepResHTML("Logout of Spectrum Business.net ", "Logout is not performed due to exception","FAIL",runManagerInfoObj);
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	
	
	
	
	public synchronized boolean FN_CancelButtonClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{

			driver.manage().window().setSize(new Dimension(100, 100));
			driver.manage().window().maximize();
			
			Thread.sleep(5000);
			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_CancelBtn,driver)){
				repfn.FnUpdateTestStepResHTML("Verify if the Cancel button is displayed in the Contact details window ","Cancel button is displayed","PASS",runManagerInfoObj);
				WebElement Cancelbtn=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));

				if(cnf.JSClick(Cancelbtn,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked ","Cancel button is clicked","PASS",runManagerInfoObj);
					blnFlag=FN_CancellationDone(driver,runManagerInfoObj);
					Thread.sleep(1000);
				}else{
					repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked ","Cancel button is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Cancel button is present ","Cancel button is not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked ","Cancel button is not clicked due to some exception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	public synchronized boolean FN_CancellationDone(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try{
			if(cnf.FnExplicitWait("Xpath", mbo.Confirmationpopup_Block,driver)) {
				repfn.FnUpdateTestStepResHTML("Verify if the Cancel Confirmation Pop up is displayed on clicking Cancel "," Cancel Confirmation Pop up is displayed","PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.ConfirmCancel,driver)){
					WebElement Confirmbtn=driver.findElement(By.xpath(mbo.ConfirmCancel));
					repfn.FnUpdateTestStepResHTML("Verify if the Confirm button is displayed in the Pop Up","Confirm button is displayed","PASS",runManagerInfoObj);
					if(cnf.JSClick(Confirmbtn,driver)){
						repfn.FnUpdateTestStepResHTML("Verify confirm button is clicked "," Confirm button is clicked","PASS",runManagerInfoObj);
						
							repfn.FnUpdateTestStepResHTML("Verify if cancel changes have been confirmed", "Cancel changes have been confirmed", "PASS",runManagerInfoObj);
							blnFlag=true;
							//driver.navigate().refresh();
						
						
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify confirm button is clicked "," Confirm button is not clicked","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if the Confirm button is displayed in the Pop Up","Confirm button is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if the Cancel Confirmation Pop up is displayed on clicking Cancel "," Cancel Confirmation Pop up is not  displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify confirm button is clicked "," confirm button is not clicked due to some exception","FAIL",runManagerInfoObj);


			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	public synchronized boolean FnNavigateBack_Payment_WG(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{


			driver.navigate().to("https://wg.dev2-spectrumbusiness.net/wg/payment-options.html");

			if(cnf.isAlertPresent()){
				driver.switchTo().alert();
				String ErrMsg=driver.switchTo().alert().getText();
				System.out.println(ErrMsg);
				driver.switchTo().alert().accept();
				driver.switchTo().defaultContent();
				Thread.sleep(5000);

			}else{
				System.out.println("No alert present");                                              
			}

			Thread.sleep(6000);
			
			if(cnf.FnExplicitWait("Xpath",mbo.Q2Wall_AccountPastDueLabel,driver)){
				repfn.FnUpdateTestStepResHTML("Verify User is navigated back to Notification page ","User is navigated back to Notification page","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify User is navigated back to Notification page ","User is not navigated back to Notification page","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Login to Charter-Wall of Garden application", "Login to Charter-Wall of Garden not performed","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}		
		m1.put("STEPSTATUS", blnFlag);
		System.out.println( "launch flag: "+blnFlag);
		return blnFlag;
	}
	
	
	public synchronized boolean LoginUser(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		
		boolean blnFlag=false;
		boolean blnFlag1=false;
		try
		{
			String strUserName1=m1.get("NewLogin").toString();
			String strPwd1=m1.get("AppPwd").toString();
			System.out.println("User Id: "+m1.get("NewLogin").toString());
			System.out.println("Password: "+m1.get("AppPwd").toString());
			System.out.println("user id: "+strUserName1);
			System.out.println("pwd: "+strPwd1);
			String Appurl=driver.getCurrentUrl();
			if(driver.getTitle().toString().contains("Sign In"))
			{

				repfn.FnUpdateTestStepResHTML("Launch url: "+Appurl, "Home page is launched","PASS",runManagerInfoObj);					

				if(cnf.FnExplicitWait("XPATH", mbo.UserName,driver)){
					WebElement userName=driver.findElement(By.xpath(mbo.UserName));
					repfn.FnUpdateTestStepResHTML("Enter Username field is present or not", "Username field is present","PASS",runManagerInfoObj);
					userName.sendKeys(strUserName1);
					repfn.FnUpdateTestStepResHTML("Enter User ID: " +strUserName1, "User ID is entered","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("UserName is entered or not" +strUserName1, "User ID is not entered as field not present","FAIL",runManagerInfoObj);
					blnFlag=false;
				}


				if(cnf.FnExplicitWait("XPATH", mbo.Password,driver))
				{
					WebElement Password=driver.findElement(By.xpath(mbo.Password));
					repfn.FnUpdateTestStepResHTML("Enter Password field is present or not", "Enter password field is present","PASS",runManagerInfoObj);
					Password.sendKeys(strPwd1);
					repfn.FnUpdateTestStepResHTML("Enter Password", "Password is entered","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Enter Password field is present or not", "Password is not entered as field not present","FAIL",runManagerInfoObj);
					blnFlag=false;
				}

				//Click on Sign in Button
				if(cnf.FnExplicitWait("XPATH", mbo.SignInBtn,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Login button is displayed", "Login Button is displayed","PASS",runManagerInfoObj);

					WebElement login=driver.findElement(By.xpath(mbo.SignInBtn));
					if(cnf.JSClick(login,driver)){
						cnf.JSClick(login,driver);
						repfn.FnUpdateTestStepResHTML("Verify Click on Login Button", "Login Button is Clicked","PASS",runManagerInfoObj);
						blnFlag = true;

					}else{
						repfn.FnUpdateTestStepResHTML("Verify Click on Login Button", "Login Button is not Clicked","FAIL",runManagerInfoObj);	
						blnFlag = false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Login Button is displayed", "Login Button is not displayed","FAIL",runManagerInfoObj);	
					blnFlag = false;
				}
				Thread.sleep(5000);
				if(strUserName1.equalsIgnoreCase("anders1")){
					cnf.FnExplicitWait("XPATH", mbo.PageVerification_V1,driver);
					WebElement overViewPage=driver.findElement(By.xpath(mbo.PageVerification_V1));
					if(overViewPage.getAttribute("textContent").equalsIgnoreCase("Overview")){
						blnFlag1 = true;
						System.out.println("passed");
					}	
				}
				else{
					if(cnf.FnExplicitWait("XPATH", mbo.Home_OverviewLabel,driver))
					{
						blnFlag1 = true;
					}
					else{
						blnFlag1 = false;
					}
				}

				if(blnFlag1){
					blnFlag = true;
					repfn.FnUpdateTestStepResHTML("Veriy whether login is success or not", "User logged in succesfully", "PASS",runManagerInfoObj);
				}
				else if (cnf.FnExplicitWait("XPATH", mbo. v1_overview,driver)) {
					blnFlag = true;
					repfn.FnUpdateTestStepResHTML("Veriy whether login is success or not", "User logged in succesfully", "PASS",runManagerInfoObj);
				}
				else
				{
					blnFlag= false;
					if(cnf.FnExplicitWait("XPATH", mbo.Invalid_credentials,driver)){
						repfn.FnUpdateTestStepResHTML("Veriy whether login is success or not", "Login Failed due to invalid credentials", "FAIL",runManagerInfoObj);	
					}
					else{
						repfn.FnUpdateTestStepResHTML("Veriy whether login is success or not", "Login Failed", "FAIL",runManagerInfoObj);	
					}				
				}

			}
			else
			{   
				repfn.FnUpdateTestStepResHTML("Launch Charter.net url: "+Appurl, "Home page is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
		}
		catch(Exception e)
		{
			blnFlag	=false;
			repfn.FnUpdateTestStepResHTML("Login to Charter.net ", "Login is not performed due to exception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());	

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	



	



	public void FnFeedback(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
	{
		System.out.println("inside feedback");

		try{

			if(cnf.FnExplicitWaitFeedback("XPATH",".//a[.='No, thanks']",driver))
			{
				WebElement element=driver.findElement(By.xpath("//a[.='No, thanks']"));
				cnf.JSClick(element,driver);
				repfn.FnUpdateTestStepResHTML("Verify FeedBack Popup","FeedBack Popup is displayed and clicked on No Thanks", "PASS",runManagerInfoObj);

			}
		}catch(Exception e)
		{	
			System.out.println("no feedback popup");
		}
	}

	public synchronized boolean FnRedirectToHomePage(WebDriver driver,RunManagerInfo runManagerInfoObj){
		System.out.println("Returning to home screen");
		boolean blnFlag=false;
		
		String Appurl = m1.get("AppURL").toString();
		try{
			System.out.println("inside try");

			
			System.out.println("App url: " + Appurl);
			driver.navigate().to(Appurl);


			if(driver.getTitle().toString().contains("SpectrumBusiness.net - Sign In") )
			{
				blnFlag =true;
				repfn.FnUpdateTestStepResHTML("Redirect to charter home url", "Home page is launched","PASS",runManagerInfoObj);	
			}
			else{
				blnFlag =false;
				repfn.FnUpdateTestStepResHTML("Redirect to charter home url", "Home page launch failed","FAIL",runManagerInfoObj);	
			}

		}
		catch(Exception ex){
			repfn.FnUpdateTestStepResHTML("Redirect to charter home url", "Exception occured while redirecting to home url","FAIL",runManagerInfoObj);
			blnFlag=false;
		}		
		m1.put("STEPSTATUS", blnFlag);
		System.out.println( "launch flag: "+blnFlag);
		return blnFlag;
	}

	public synchronized boolean FnlogoutGeneric(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try{


			repfn.FnUpdateTestStepResHTML("Perfom logout operation to execute the test case with new user ", "Performing Logout  ", "PASS",runManagerInfoObj);
			if(cnf.FnExplicitWait("XPATH", mbo.Invalid_credentials,driver)){
				repfn.FnUpdateTestStepResHTML("Check Whether user is login already to perform logout operation ", "User is not login already to perform logout operation so directly redirecting to home page","PASS",runManagerInfoObj); 

			}
			else{
				blnFlag=LogoutOnUserChange(driver,runManagerInfoObj);
			}
			Thread.sleep(3000);
			if(cnf.FnExplicitWait("XPATH", mbo.LoginWindow,driver)){
			repfn.FnUpdateTestStepResHTML("Check Whether user is in Home Page", "User is in Home Page","PASS",runManagerInfoObj); 
			blnFlag=true;
			}

		}
		catch (WebDriverException we)

		{
			we.printStackTrace();
			blnFlag=false;
		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean FnlogoutGeneric_DevWG(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		
		try{

			repfn.FnUpdateTestStepResHTML("Perform Logout Operation to execute the test case with new user", "Performing Logout ", "PASS",runManagerInfoObj);

			blnFlag = LogoutOnUserChange_WG(driver,runManagerInfoObj);

			if(blnFlag){
				repfn.FnUpdateTestStepResHTML("Verify User is logged out successfully", "User is logged out successfully", "PASS",runManagerInfoObj);
				blnFlag=FnVerifySignInLinkAndClick(driver,runManagerInfoObj);
				
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify User is logged out successfully", "User is not logged out successfully", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			
		}
		catch (WebDriverException we)

		{
			we.printStackTrace();
			blnFlag=false;
		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean LogoutOnUserChange(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			if(cnf.FnExplicitWait("XPATH",mbo.headerDropdown,driver)){
				repfn.FnUpdateTestStepResHTML("Check whether Header drop-down is displayed", "Header drop-down is displayed","PASS",runManagerInfoObj); 
				WebElement HeaderDropdownLogin=driver.findElement(By.xpath(mbo.headerDropdown));
				if(cnf.JSClick(HeaderDropdownLogin,driver)){
					repfn.FnUpdateTestStepResHTML("Check whether Header drop-down is clicked", "Header drop-down is clicked","PASS",runManagerInfoObj); 
					
					if(cnf.FnExplicitWait("XPATH",mbo.LogoutHeader,driver)){
						repfn.FnUpdateTestStepResHTML("Check whether Sign Out link is displayed", "Sign Out link is displayed","PASS",runManagerInfoObj); 
						WebElement LogoutHeader=driver.findElement(By.xpath(mbo.LogoutHeader));
						if(cnf.JSClick(LogoutHeader,driver)){
							repfn.FnUpdateTestStepResHTML("Check whether Sign Out link is clicked", "Sign Out link is clicked","PASS",runManagerInfoObj);
							blnFlag	=true;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Check whether Sign Out link is clicked", "Sign Out link is not clicked","FAIL",runManagerInfoObj);
							blnFlag	=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Check whether Sign Out link is displayed", "Sign Out link is not displayed","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Check whether Header drop-down is clicked", "Header drop-down is not clicked","FAIL",runManagerInfoObj); 
					blnFlag	=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Header drop-down is displayed", "Header drop-down is not displayed","FAIL",runManagerInfoObj); 
				blnFlag	=false;
			}
		}
		catch(Exception e)
		{
			blnFlag	=false;
			repfn.FnUpdateTestStepResHTML("Verify User is able to logout on user change", "User is not able to logout on user change due to exception","FAIL",runManagerInfoObj);	
		}

		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	
	public synchronized boolean LogoutOnUserChange_WG(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		String popup = null;
		try
		{
			if(cnf.FnExplicitWait("XPATH",mbo.Q2_Arrow,driver)){
				repfn.FnUpdateTestStepResHTML("Check whether Header drop-down is displayed", "Header drop-down is displayed","PASS",runManagerInfoObj); 
				WebElement Q2Wall_HeaderDropdown=driver.findElement(By.xpath(mbo.Q2_Arrow));
				if(cnf.JSClick(Q2Wall_HeaderDropdown,driver)){
					repfn.FnUpdateTestStepResHTML("Check whether Header drop-down is clicked", "Header drop-down is clicked","PASS",runManagerInfoObj); 
					
					if(cnf.FnExplicitWait("XPATH",mbo.Q2_SignOutLink,driver)){
						repfn.FnUpdateTestStepResHTML("Check whether Sign Out link is displayed", "Sign Out link is displayed","PASS",runManagerInfoObj); 
						WebElement LogoutHeader=driver.findElement(By.xpath(mbo.Q2_SignOutLink));
						if(cnf.JSClick(LogoutHeader,driver)){
							repfn.FnUpdateTestStepResHTML("Check whether Sign Out link is clicked", "Sign Out link is clicked","PASS",runManagerInfoObj); 
							
							
							Thread.sleep(3000);
							
							if(cnf.isAlertPresent()){
								driver.switchTo().alert();
								String ErrMsg=driver.switchTo().alert().getText();
								System.out.println(ErrMsg);
								driver.switchTo().alert().dismiss();
								driver.switchTo().defaultContent();
								Thread.sleep(5000);

							}else{
								System.out.println("No alert present"); 
								popup=m1.get("TOOLS_PATH").toString()+"//Chromepopup_new.exe";
								Runtime.getRuntime().exec(popup);
							}
							blnFlag	=true;
							Thread.sleep(3000);
						}
						else{
							repfn.FnUpdateTestStepResHTML("Check whether Sign Out link is clicked", "Sign Out link is not clicked","FAIL",runManagerInfoObj);
							blnFlag	=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Check whether Sign Out link is displayed", "Sign Out link is not displayed","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Check whether Header drop-down is clicked", "Header drop-down is not clicked","FAIL",runManagerInfoObj); 
					blnFlag	=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Header drop-down is displayed", "Header drop-down is not displayed","FAIL",runManagerInfoObj); 
				blnFlag	=false;
			}


		}
		catch(Exception e)
		{
			blnFlag	=false;
			repfn.FnUpdateTestStepResHTML("Login to Spectrum Business.net ", "Login is not performed due to exception","FAIL",runManagerInfoObj);	
		}
		
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean fn_NavigateBack(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{

			TimeUnit.SECONDS.sleep(10);
			if(!driver.getTitle().toString().contains("Overview"))
			{
				
				String StgAppurl=m1.get("AppURL").toString().trim();
				driver.get(StgAppurl+"smb/overview.html#/");
				
				Thread.sleep(15000);
				System.out.println(StgAppurl.trim()+"/smb/overview.html#/");
				if(cnf.isAlertPresent()){
					driver.switchTo().alert();
					String ErrMsg=driver.switchTo().alert().getText();
					System.out.println(ErrMsg);
					//repfn.FnUpdateTestStepResHTML("verify .... ",".......","PASS/WARNING");// update the reporting function based on your requirement
					driver.switchTo().alert().accept();
					driver.switchTo().defaultContent();
					Thread.sleep(5000);

				}else{
					System.out.println("No alert present");                                              
				}
				
			}


			if(driver.getTitle().toString().contains("Overview"))
			{
				blnFlag=true;
				System.out.println("User is in Overview page");
				repfn.FnUpdateTestStepResHTML("Verify whether User is taken to Overview page", "User is taken to Overview page", "PASS",runManagerInfoObj);
			}	

			else
			{
				blnFlag=false;
				System.out.println("User is not taken to Overview page");
				repfn.FnUpdateTestStepResHTML("Verify whether User is taken to Overview page", "User is not taken to Overview page", "FAIL",runManagerInfoObj);
			}
		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean Q2_fn_NavigateBack(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{

			TimeUnit.SECONDS.sleep(10);
			if(!driver.getTitle().toString().contains("Account"))
			{
				
				String StgAppurl=m1.get("AppURL").toString().trim();
				driver.navigate().to(StgAppurl+"wg/payment-options.html#/");
				
				Thread.sleep(15000);
				System.out.println(StgAppurl.trim()+"/wg/payment-options.html#/");
				if(cnf.isAlertPresent()){
					driver.switchTo().alert();
					String ErrMsg=driver.switchTo().alert().getText();
					System.out.println(ErrMsg);
					driver.switchTo().alert().accept();
					driver.switchTo().defaultContent();
					Thread.sleep(5000);

				}else{
					System.out.println("No alert present");                                              
				}
			}


			if(driver.getTitle().toString().contains("Account"))
			{
				blnFlag=true;
				System.out.println("User is in Your Account page");
				repfn.FnUpdateTestStepResHTML("Verify whether User is taken to Your Account page", "User is taken to Your Account page", "PASS",runManagerInfoObj);
			}	

			else
			{
				blnFlag=false;
				System.out.println("User is not taken to Your Account page");
				repfn.FnUpdateTestStepResHTML("Verify whether User is taken to Your Account page", "User is not taken to Your Account page", "FAIL",runManagerInfoObj);
			}
		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	


	public synchronized boolean FnVoiceClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		try{
			
			String Environment = m1.get("AppURL").toString();
			
			if (cnf.FnExplicitWait("Xpath", mbo.VoiceLink,driver)) {
				repfn.FnUpdateTestStepResHTML(
						"Verify Voice Link is present in Overview Page ",
						"Voice Link is present in  Overview Page", "PASS",runManagerInfoObj);
				WebElement VoicLink = driver.findElement(By.xpath(mbo.VoiceLink));
				if (cnf.JSClick(VoicLink,driver)) {
					repfn.FnUpdateTestStepResHTML(
							"Verify Voice Link is Clicked ",
							"Voice Link is Clicked", "PASS",runManagerInfoObj);
					Thread.sleep(5000);
					if (cnf.FnExplicitWait("Xpath", mbo.VoicePageVerification,driver)) {
						repfn.FnUpdateTestStepResHTML(
								"Verify Voice Page is Loaded ",
								"Voice Page is Loaded", "PASS",runManagerInfoObj);
						blnFlag = true;
					} else {
						repfn.FnUpdateTestStepResHTML(
								"Verify Voice Page is Loaded ",
								" Voice Page is not Loaded", "FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				} else {
					repfn.FnUpdateTestStepResHTML(
							"Verify Voice Link is Clicked ",
							"Voice Link is not Clicked", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			} else {
				repfn.FnUpdateTestStepResHTML(
						"Verify Voice Link is present in  Overview Page ",
						"Voice Link is not present in Overview Page", "FAIL",runManagerInfoObj);
				blnFlag = false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify Voice Link is present and clicked in  Overview Page"," Voice Link is not  clicked due to some exception ","FAIL",runManagerInfoObj);


			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	
	public synchronized boolean VoiceExportDownLoadClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{
			
			if(cnf.FnExplicitWait("Xpath", mbo.VoiceExport_DownloadBtn,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Export Call DownLoad Button is displayed","Export Call DownLoad Button is displayed","PASS",runManagerInfoObj);
				WebElement ExportDownLoad=driver.findElement(By.xpath(mbo.VoiceExport_DownloadBtn));
				if(cnf.JSClick(ExportDownLoad,driver)){
					Thread.sleep(1000);
					repfn.FnUpdateTestStepResHTML("Verify Export Call DownLoad Button is Clicked ","Export Call DownLoad Buttonk is Clicked","PASS",runManagerInfoObj);					
					if(driver.getCurrentUrl().contains("/call-logs/"))
					{
						repfn.FnUpdateTestStepResHTML("Verify CallLog  Page is Loaded "," CallLog  Page is Loaded","PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify  CallLog  Page is Loaded "," CallLog  Page is Loaded","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Export Call DownLoad Button is Clicked ","Export Call DownLoad Buttonk is not Clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Export Call DownLoad Button is displayed","Export Call DownLoad Button is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verify CallLog Link is  Clicked and page is loaded "," CallLog Link is  Clicked and page is not  loaded due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean FnManageUserLinkClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception {
		try {

			if (cnf.FnExplicitWait("Xpath", mbo.ManageUserLink,driver)) {
				repfn.FnUpdateTestStepResHTML("Verify Manage User Link is present in Overview Page ","Manage User Link is present in Overview Page", "PASS",runManagerInfoObj);
				WebElement ManageUserLink = driver.findElement(By.xpath(mbo.ManageUserLink));
				if (cnf.JSClick(ManageUserLink,driver)) {
					repfn.FnUpdateTestStepResHTML("Verify Manage users link is clicked","Manage users link is clicked", "PASS",runManagerInfoObj);

					Thread.sleep(5000);
					if (cnf.FnExplicitWait("Xpath", mbo.ManageUserList,driver)) {
						repfn.FnUpdateTestStepResHTML("Verify the user list display on the Manage users page ","List of all users associated to the account is displayed","PASS",runManagerInfoObj);
						blnFlag = true;
					} else {
						repfn.FnUpdateTestStepResHTML("Verify the user list display on the Manage users page ","List of all users associated to the account is not displayed","FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				} else {
					repfn.FnUpdateTestStepResHTML("Verify Manage users link is clicked","Manage users link is not clicked", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}

			} else {
				repfn.FnUpdateTestStepResHTML("Verify Manage User Link is present in Overview Page ","Manage User Link is not present in Overview Page","FAIL",runManagerInfoObj);
				blnFlag = false;
			}

		}

		catch (Exception e)

		{
			System.err.println("Message : " + e.getMessage());
			System.err.println("Cause : " + e.getCause());
			repfn.FnUpdateTestStepResHTML("Click on Manage Users ","User is not in Manage users page now due to some exception","FAIL",runManagerInfoObj);
			blnFlag = false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	ArrayList<String> namelist = new ArrayList<String>();
	

	public synchronized boolean FnNavigateBackOverviewPage(WebDriver driver,RunManagerInfo runManagerInfoObj) {

		try{

			Thread.sleep(5000);
			if(cnf.FnExplicitWait("Xpath", mbo.LoginBtn,driver)){
				repfn.FnUpdateTestStepResHTML("Verify if the arrow to expand Logged in Profile details is displayed",
						"Arrow to expand Logged In Profile Details is displayed","PASS",runManagerInfoObj);
				WebElement LoginBtn=driver.findElement(By.xpath(mbo.LoginBtn));
				if(cnf.JSClick(LoginBtn,driver)){
					repfn.FnUpdateTestStepResHTML("Verify if the arrow to expand Logged in Profile details is clicked",
							"Arrow to expand Logged in Profile details is clicked","PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("Xpath", mbo.OverviewLink,driver)){
						repfn.FnUpdateTestStepResHTML("Verify OverView Link is displayed","OverView Link is displayed","PASS",runManagerInfoObj);
						WebElement OverviewLink=driver.findElement(By.xpath(mbo.OverviewLink));
						Thread.sleep(2000);
						if(cnf.JSClick(OverviewLink,driver)){
							Thread.sleep(3000);
							repfn.FnUpdateTestStepResHTML("Verify OverView Link is clicked","OverView Link is clicked","PASS",runManagerInfoObj);
							
							if(cnf.isAlertPresent()){
								driver.switchTo().alert();
								String ErrMsg=driver.switchTo().alert().getText();
								System.out.println(ErrMsg);
								//repfn.FnUpdateTestStepResHTML("verify .... ",".......","PASS/WARNING");// update the reporting function based on your requirement
								driver.switchTo().alert().accept();
								driver.switchTo().defaultContent();
								Thread.sleep(5000);

							}else{
								//repfn.FnUpdateTestStepResHTML("verify .... ",".......","PASS/WARNING");// update the reporting function based on your requirement
								System.out.println("No alert present");                                              
							}

							
							blnFlag=true;
							driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify OverView Link is clicked","OverView Link is not clicked","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						Thread.sleep(5000);
						if(cnf.FnExplicitWait("Xpath", mbo.OverviewLink_V1_Support,driver)){
							repfn.FnUpdateTestStepResHTML("Verify OverView Link is displayed","OverView Link is displayed","PASS",runManagerInfoObj);
							WebElement OverviewLink=driver.findElement(By.xpath(mbo.OverviewLink_V1_Support));
							Thread.sleep(2000);
							if(cnf.JSClick(OverviewLink,driver)){
								repfn.FnUpdateTestStepResHTML("Verify OverView Link is clicked","OverView Link is clicked","PASS",runManagerInfoObj);

								if(cnf.isAlertPresent()){
									driver.switchTo().alert();
									String ErrMsg=driver.switchTo().alert().getText();
									System.out.println(ErrMsg);
									//repfn.FnUpdateTestStepResHTML("verify .... ",".......","PASS/WARNING");// update the reporting function based on your requirement
									driver.switchTo().alert().accept();
									driver.switchTo().defaultContent();
									Thread.sleep(5000);

								}else{
									//repfn.FnUpdateTestStepResHTML("verify .... ",".......","PASS/WARNING");// update the reporting function based on your requirement
									System.out.println("No alert present");                                              
								}


								blnFlag=true;
								driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify OverView Link is clicked","OverView Link is not clicked","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify OverView Link is displayed","OverView Link is not displayed","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}

				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if the arrow to expand Logged in Profile details is clicked"," Arrow to expand Logged in Profile details is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if the arrow to expand Logged in Profile details is displayed","Arrow to expand Logged in Profile details is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			if(cnf.FnExplicitWait("Xpath", mbo.Home_OverviewLabel,driver)){
				repfn.FnUpdateTestStepResHTML("Verify User Return back to Overview Page","User Return back to Overview Page","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else if (cnf.FnExplicitWait("Xpath", mbo.v1_overview,driver)) {
				repfn.FnUpdateTestStepResHTML("Verify User Return back to Overview Page","User Return back to Overview Page","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify User Return back to Overview Page","User is not Return back to Overview Page","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User Return back to Overview Page","User is not Return back to Overview Page due to some exceptions","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean FnManageLinkClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{
			if(cnf.FnExplicitWait("XPATH", mbo.ManageLineLink,driver)){
				WebElement ManageLineLink=driver.findElement(By.xpath(mbo.ManageLineLink));
				repfn.FnUpdateTestStepResHTML("Verify ManageLineLink is present in home Page ","ManageLineLink is present in home Page","PASS",runManagerInfoObj);
				if(cnf.JSClick(ManageLineLink,driver)){
					repfn.FnUpdateTestStepResHTML("Verify ManageLine Link is Clicked ","ManageLine Link is Clicked","PASS",runManagerInfoObj);
					
					Thread.sleep(5000);
					if(cnf.FnExplicitWait("XPATH", mbo.UserPageVerification,driver)){
						WebElement UserPageVerification=driver.findElement(By.xpath(mbo.UserPageVerification));
						if(UserPageVerification.getAttribute("textContent").equalsIgnoreCase("Manage Lines")){
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Manage Lines Page","User is navigated to Manage Lines Page","PASS",runManagerInfoObj);
							blnFlag=true;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Manage Lines Page","User is not navigated to Manage Lines Page","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User is navigated to Manage Lines Page","User is not navigated to Manage Lines Page","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify ManageLine Link is Clicked ","ManageLine Link is not Clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}



			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify ManageLineLink is present in home Page ","ManageLineLink is not  present in home Page","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify ManageLineLink is clicked or not","ManageLineLink is not Clicked due to some exeception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean FN_SelectTollFreeNumber(WebDriver driver,RunManagerInfo runManagerInfoObj){


		try{
			((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();",driver.findElement(By.xpath(mbo.TollFreeNumber)));

			if(cnf.FnExplicitWait("XPATH", mbo.TollFreeNumber,driver)){
				WebElement ManageLine_TollFreeNumberRow=driver.findElement(By.xpath(mbo.TollFreeNumber));    
				cnf.JSClick(ManageLine_TollFreeNumberRow,driver);
				repfn.FnUpdateTestStepResHTML("Verify A Toll Free line  from the lines listed in 'Manage Lines' section is selected ","A Toll Free line  from the lines listed in 'Manage Lines' section is selected","PASS",runManagerInfoObj);
				if( cnf.FnExplicitWait("XPATH", mbo.TollFreeDetailSheet,driver)){
					WebElement ManageLine_DetailSheet=driver.findElement(By.xpath(mbo.TollFreeDetailSheet));


					repfn.FnUpdateTestStepResHTML("Verify  Detail Sheet is displayed for the selected phone line","Detail Sheet is displayed for the selected phone line","PASS",runManagerInfoObj);
					blnFlag=true;
				}

				else{
					repfn.FnUpdateTestStepResHTML("Verify  Detail Sheet is displayed for the selected phone line","Detail Sheet is not displayed for the selected phone line","FAIL",runManagerInfoObj);
					blnFlag=false;
				}

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify A Toll Free line  from the lines listed in 'Manage Lines' section is selected","A Toll Free line  from the lines listed in 'Manage Lines' section is not selected","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify A Toll Free line  from the lines listed in 'Manage Lines' section is selected","A Toll Free line  from the lines listed in 'Manage Lines' section is not selected due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;


	}

	public synchronized boolean FN_ManageLines_ValidateEditButton(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{

			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
				WebElement ManageLine_EditButton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton));
				repfn.FnUpdateTestStepResHTML("Verify Edit option is present ","Edit Option is present","PASS",runManagerInfoObj);
				cnf.JSClick(ManageLine_EditButton,driver);

				repfn.FnUpdateTestStepResHTML("Verify Edit option is clicked ","Edit Option is clicked","PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.TollFreeEdit_RequiredField,driver)){
					WebElement EditPhoneLinePane=driver.findElement(By.xpath(mbo.TollFreeEdit_RequiredField));


					repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is taken to the edit phone line pane","PASS",runManagerInfoObj);
					blnFlag=true;
				}


				else{
					repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is not taken to the edit phone line pane","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Edit option is present ","Edit Option is not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is not taken to the edit phone line pane due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}

	public synchronized boolean FN_VerifyLineNumber(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{

			FN_SelectTollFreeNumber(driver,runManagerInfoObj);
			Thread.sleep(2000);
			if(cnf.FnExplicitWait("XPATH", mbo.TollFreeLineNumber,driver)){
				WebElement ManageLine_LineNumber=driver.findElement(By.xpath(mbo.TollFreeLineNumber));
				System.out.println("Line Number on First Page"+ ManageLine_LineNumber.getText());
				blnFlag=FN_ManageLines_ValidateEditButton(driver,runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_LineInformation,driver)){
					repfn.FnUpdateTestStepResHTML("Verify User should be able to view the manage line information","User is not able to view the manage line information","PASS",runManagerInfoObj);
					WebElement LineNumberElement=driver.findElement(By.xpath(mbo.ManageLine_LineInformation));
					String LineNumberElementText=LineNumberElement.getText();
					String[] parts = LineNumberElementText.split("\\|");
					String strLineNumber=parts[0];
					System.out.println("Line Number Text Edit Page"+ strLineNumber);
					String strNumber=parts[1];
					String number=strNumber.split("\\*")[0].replaceAll("\\s+","");
					System.out.println("Line Number  Edit Page"+ ManageLine_LineNumber.getText());
					if(strLineNumber.equals("Line Information ")&& number.equals(ManageLine_LineNumber.getText().replaceAll("\\s+","")) ){

						repfn.FnUpdateTestStepResHTML("Verify User should be able to view the line number","User is able to view the line number","PASS",runManagerInfoObj);
						blnFlag=true;

					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User should be able to view the line number","User is not able to view the line number","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}else{
					repfn.FnUpdateTestStepResHTML("Verify User should be able to view the manage line information","User is not able to view the manage line information","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			} else{
				repfn.FnUpdateTestStepResHTML("Verify User should be able to view the toll free line number","User is not able to view the toll free line number","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User should be able to view the line number","Line Number could not be verified due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}

	public synchronized boolean FN_ValidateSaveOption(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{

			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton,driver)){
				WebElement ManageLine_SaveButton=driver.findElement(By.xpath(mbo.ManageLine_SaveButton));
				repfn.FnUpdateTestStepResHTML("Verify Save option is present ","Save Option is present","PASS",runManagerInfoObj);


				if(!ManageLine_SaveButton.isEnabled()){

					repfn.FnUpdateTestStepResHTML("Verify  Save option is disabled when no change is made.","Save Option is disabled when no change is made.","PASS",runManagerInfoObj);
					blnFlag=true;
				}


				else{
					repfn.FnUpdateTestStepResHTML("Verify  Save option is disabled when no change is made.","Save Option is not disabled when no change is made.","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Save option is present ","Save Option is not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify Save option is disabled when no change is made.","Save option disabled could not be verified due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean FN_ValidateCancelOption(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{

			WebElement ManageLine_CancelButton=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));
			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_CancelBtn,driver)){

				repfn.FnUpdateTestStepResHTML("Verify Cancel option is present ","Cancel Option is present","PASS",runManagerInfoObj);

				cnf.JSClick(ManageLine_CancelButton,driver);

				repfn.FnUpdateTestStepResHTML("Verify Cancel option is clicked ","Cancel Option is clicked","PASS",runManagerInfoObj);

				blnFlag=true;

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Cancel option is present ","Cancel Option is not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify Cancel option is present","Cancel Option could not be found due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}

	public synchronized boolean FN_VerifyInformationScreenOnCancel(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{

			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_CancelBtn,driver)){
				WebElement ManageLine_CancelButton=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));     	        	 
				repfn.FnUpdateTestStepResHTML("Verify Cancel option is present ","Cancel Option is present","PASS",runManagerInfoObj);

				cnf.JSClick(ManageLine_CancelButton,driver);
				repfn.FnUpdateTestStepResHTML("Verify Cancel option is clicked ","Cancel Option is clicked","PASS",runManagerInfoObj);

				if( cnf.FnExplicitWait("XPATH", mbo.TollFreeDetailSheet,driver)){
					WebElement ManageLines_DetailsPage=driver.findElement(By.xpath(mbo.TollFreeDetailSheet));


					repfn.FnUpdateTestStepResHTML("Verify User is taken back to the information screen on clicking cancel","User is taken back to the information screen on clicking cancel","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify User is taken back to the information screen on clicking cancel","User is not taken back to the information screen on clicking cancel","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Cancel option is present ","Cancel Option is not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is taken back to the information screen on clicking cancel","User is not taken back to the information screen on clicking cancel due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;



	}
	public synchronized boolean FN_VerifyCancelpopup(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{

			WebElement CancelConfirmationPopup=driver.findElement(By.xpath(mbo.LeaveConfirmationPopUp));
			if(cnf.FnExplicitWait("XPATH", mbo.LeaveConfirmationPopUp,driver)){

				repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup ","Confirmation Popup is present","PASS",runManagerInfoObj);
				WebElement ConfirmationPopup_ConfirmButton=driver.findElement(By.xpath(mbo.ConfirmConfirmationPopup)); 	        
				blnFlag=true;	  	         
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup","Confirmation Popup is not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup","Presence of Confirmation Popup could not be verified due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}

	public synchronized boolean FN_CancelConfirmationPopup(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{
			WebElement ConfirmationPopup_CancelButton=driver.findElement(By.xpath(mbo.CancelConfirmationPopup));
			if(cnf.FnExplicitWait("XPATH", mbo.CancelConfirmationPopup,driver)){

				repfn.FnUpdateTestStepResHTML("Verify Cancel option is present on the Confirmation Popup ","Cancel Option is present on the Confirmation Popup","PASS",runManagerInfoObj);

				cnf.JSClick(ConfirmationPopup_CancelButton,driver);
				repfn.FnUpdateTestStepResHTML("Verify Cancel option is clicked ","Cancel Option is clicked ","PASS",runManagerInfoObj);

				cnf.FnExplicitWait("XPATH", mbo.TollFreeEdit_RequiredField,driver);
				WebElement ManageLines_EditPage=driver.findElement(By.xpath(mbo.TollFreeEdit_RequiredField));
				if(ManageLines_EditPage.isDisplayed()){

					repfn.FnUpdateTestStepResHTML("Verify User is still in the Edit page after clicking cancel on the Confirmation Popup","User is still in the Edit page after clicking cancel on the Confirmation Popup","PASS",runManagerInfoObj);
					blnFlag=true;
				}


				else{
					repfn.FnUpdateTestStepResHTML("Verify  User is still in the Edit page after clicking cancel on the Confirmation Popup","User is not in the Edit page after clicking cancel on the Confirmation Popup","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Cancel option is present on Confirmation Popup","Cancel Option is not present on Confirmation Popup","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			WebElement ManageLine_AliasName=driver.findElement(By.xpath(mbo.ManageLine_AliasName));
			ManageLine_AliasName.clear();
			cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.ManageLine_CancelBtn,driver);
			System.out.println("Cancel button again found");
			WebElement ManageLine_CancelButton=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));
			if(ManageLine_CancelButton.isDisplayed()&& ManageLine_CancelButton.isEnabled()){
				Thread.sleep(2000);
				cnf.JSClick(ManageLine_CancelButton,driver);

				System.out.println("Cancel button again clicked");
				cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.ConfirmConfirmationPopup,driver);
				System.out.println("Confirm button again found");
				WebElement ConfirmationPopup_ConfirmButton=driver.findElement(By.xpath(mbo.ConfirmConfirmationPopup));
				if(ConfirmationPopup_ConfirmButton.isDisplayed()&& ConfirmationPopup_ConfirmButton.isEnabled()){
					cnf.JSClick(ConfirmationPopup_ConfirmButton,driver);
				}
				else{
					JavascriptExecutor executor1 = (JavascriptExecutor)driver;
					executor1.executeScript("arguments[0].click();",ConfirmationPopup_ConfirmButton );	
				}
			}else{


				JavascriptExecutor executor = (JavascriptExecutor)driver;
				executor.executeScript("arguments[0].click();",ManageLine_CancelButton );	
			}


			driver.navigate().refresh();

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify  User is still in the Edit page after clicking cancel on the Confirmation Popup","User presence on Edit Page after clicking on Cancel on Confirmation Popup could not be verified due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	public synchronized boolean FN_VerifyCancelAfterEdit(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{

			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
				WebElement ManageLine_EditButton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton));	 
				repfn.FnUpdateTestStepResHTML("Verify Edit option is present ","Edit Option is present","PASS",runManagerInfoObj);
				cnf.JSClick(ManageLine_EditButton,driver);
				repfn.FnUpdateTestStepResHTML("Verify Edit option is clicked ","Edit Option is clicked","PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.TollFreeEdit_RequiredField,driver)){
					WebElement EditPhoneLinePane=driver.findElement(By.xpath(mbo.TollFreeEdit_RequiredField));


					repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is taken to the edit phone line pane","PASS",runManagerInfoObj);


					if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_AliasName,driver)){
						WebElement ManageLine_AliasName=driver.findElement(By.xpath(mbo.ManageLine_AliasName));
						ManageLine_AliasName.clear();
						ManageLine_AliasName.sendKeys("AndrewLine1");

						repfn.FnUpdateTestStepResHTML("Verify Alias Name is Entered ","Alias Name is Entered","PASS",runManagerInfoObj);
						cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton,driver);


						if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_CancelBtn,driver)){
							WebElement ManageLine_CancelButton=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));         	        	 
							repfn.FnUpdateTestStepResHTML("Verify Cancel option is present ","Cancel Option is present","PASS",runManagerInfoObj);

							cnf.JSClick(ManageLine_CancelButton,driver);

							repfn.FnUpdateTestStepResHTML("Verify Cancel option is clicked ","Cancel Option is clicked","PASS",runManagerInfoObj);
							if(cnf.FnExplicitWait("XPATH", mbo.LeaveConfirmationPopUp,driver)){
								WebElement CancelConfirmationPopup=driver.findElement(By.xpath(mbo.LeaveConfirmationPopUp));        	        	 
								repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup on clicking cancel","User is displayed with the Confirmation Popup  on clicking cancel","PASS",runManagerInfoObj);
								WebElement ConfirmationPopup_ConfirmButton=driver.findElement(By.xpath(mbo.ConfirmConfirmationPopup)); 	        
								cnf.JSClick(ConfirmationPopup_ConfirmButton,driver);  	
								blnFlag=true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup  on clicking cancel","User is not displayed with the Confirmation Popup  on clicking cancel","FAIL",runManagerInfoObj);
								blnFlag=false;
							}

						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Cancel option is present ","Cancel Option is not present","FAIL",runManagerInfoObj);
							blnFlag=false;
						}


					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Alias Name is Entered ","Alias Name is not  Entered","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}


				else{
					repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is not taken to the edit phone line pane","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Edit option is present ","Edit Option is not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

			driver.navigate().refresh();
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup on clicking cancel","User is not displayed with the Confirmation Popup on clicking cancel due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	public synchronized boolean FN_ConfirmConfirmationPopup(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{

			String aliasName=driver.findElement(By.xpath(mbo.ManageLine_UneditableAliasName)).getText();

			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
				WebElement ManageLine_EditButton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton)); 
				repfn.FnUpdateTestStepResHTML("Verify Edit option is present ","Edit Option is present","PASS",runManagerInfoObj);
				cnf.JSClick(ManageLine_EditButton,driver);
				if(cnf.FnExplicitWait("XPATH", mbo.TollFreeEdit_RequiredField,driver)){
					WebElement EditPhoneLinePane=driver.findElement(By.xpath(mbo.TollFreeEdit_RequiredField));

					repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is taken to the edit phone line pane","PASS",runManagerInfoObj);

					if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_AliasName,driver)){
						WebElement ManageLine_AliasName=driver.findElement(By.xpath(mbo.ManageLine_AliasName));
						ManageLine_AliasName.clear();
						ManageLine_AliasName.sendKeys("AndrewLine1");
						repfn.FnUpdateTestStepResHTML("Verify Alias Name is Entered ","Alias Name is Entered","PASS",runManagerInfoObj);
						//cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton);

						if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_CancelBtn,driver)){
							WebElement ManageLine_CancelButton=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn)); 
							repfn.FnUpdateTestStepResHTML("Verify Cancel option is present ","Cancel Option is present","PASS",runManagerInfoObj);

							cnf.JSClick(ManageLine_CancelButton,driver);
							repfn.FnUpdateTestStepResHTML("Verify Cancel option is clicked ","Cancel Option is clicked","PASS",runManagerInfoObj);

							if(cnf.FnExplicitWait("XPATH", mbo.LeaveConfirmationPopUp,driver)){
								WebElement CancelConfirmationPopup=driver.findElement(By.xpath(mbo.LeaveConfirmationPopUp));       	 
								repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup on clicking Cancel ","User is displayed with the Confirmation Popup on clicking Cancel","PASS",runManagerInfoObj);


								if(cnf.FnExplicitWait("XPATH", mbo.ConfirmConfirmationPopup,driver)){
									WebElement ConfirmationPopup_ConfirmButton=driver.findElement(By.xpath(mbo.ConfirmConfirmationPopup));    	 
									repfn.FnUpdateTestStepResHTML("Verify Confirm option is present on pop up ","Confirm Option is present on popup","PASS",runManagerInfoObj);

									cnf.JSClick(ConfirmationPopup_ConfirmButton,driver);
									repfn.FnUpdateTestStepResHTML("Verify Confirm option is clicked ","Confirm Option is clicked","PASS",runManagerInfoObj);

									if(cnf.FnExplicitWait("XPATH", mbo.TollFreeDetailSheet,driver)){
										WebElement ManageLines_DetailsPage=driver.findElement(By.xpath(mbo.TollFreeDetailSheet));
										String aliasNameAfterConfirm=driver.findElement(By.xpath(mbo.ManageLine_UneditableAliasName)).getText();
										if( aliasName.equals(aliasNameAfterConfirm)){

											repfn.FnUpdateTestStepResHTML("Verify User is navigated to information screen,and the user made changes get cancelled","User is navigated to information screen,and the user made changes get cancelled","PASS",runManagerInfoObj);
											blnFlag=true;
										}


										else{
											repfn.FnUpdateTestStepResHTML("Verify User is navigated to information screen,and the user made changes get cancelled","User is not navigated to information screen,and the user made changes get cancelled","FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									} else{
										repfn.FnUpdateTestStepResHTML("Verify User is navigated to information screen","User is not navigated to information screen","FAIL",runManagerInfoObj);
										blnFlag=false;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify Confirm option is present on pop up","Confirm Option is not present","FAIL",runManagerInfoObj);
									blnFlag=false;
								}

							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup on clicking Cancel","User is not displayed with the Confirmation Popup on clicking Cancel","FAIL",runManagerInfoObj);
								blnFlag=false;
							}

						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Cancel option is present ","Cancel Option is not present","FAIL",runManagerInfoObj);
							blnFlag=false;
						}

					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Alias Name is Entered ","Alias Name is not  Entered","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}


				else{
					repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is not taken to the edit phone line pane","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Edit option is present ","Edit Option is not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			driver.navigate().refresh();
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup on clicking Cancel","Display of Confirmation Popup on clicking Cancel could not be verified due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;


	}
	public synchronized boolean unable_To_Save(WebDriver driver,RunManagerInfo runManagerInfoObj){
		blnFlag=false;
		try{
		WebElement unable_To_Save=driver.findElement(By.xpath(mbo.unable_To_Save));
		
		String unable_To_Save_Msg=unable_To_Save.getText();
		repfn.FnUpdateTestStepResHTML("Verify  User should be able to save the changes made ","User is not able to save the changes made as message displayed: "+unable_To_Save_Msg,"FAIL",runManagerInfoObj);
		if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_CancelBtn,driver)){
			WebElement ManageLine_CancelBtn=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));
			if(cnf.JSClick(ManageLine_CancelBtn,driver))
			{
				repfn.FnUpdateTestStepResHTML("Verify User should be able to click cancel if save functionality not working","User is able to click cancel if save functionality not working ","PASS",runManagerInfoObj);
				blnFlag=FN_CancelConfirmPopup(driver,runManagerInfoObj);
				if(blnFlag)
				{
					if(cnf.FnExplicitWait("XPATH", mbo.TollFreeDetailSheet,driver)){
				repfn.FnUpdateTestStepResHTML("Verify  User should be taken back to the information screen","User should be taken back to the information screen","PASS",runManagerInfoObj);
				blnFlag=false;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify  User should be taken back to the information screen","User is not taken back to the information screen","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
			}
		}
		}	catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify  User should be able to save the changes made and taken back to the information screen","User is not able to save the changes made and taken back to the information screen due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		driver.navigate().refresh();
		return blnFlag;
	}

	public synchronized boolean FN_SaveAliasName(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{



			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_AliasName,driver)){
				WebElement ManageLine_AliasName=driver.findElement(By.xpath(mbo.ManageLine_AliasName));
				ManageLine_AliasName.clear();
				String newAliasName="AndrewLine1";
				ManageLine_AliasName.sendKeys(newAliasName);

				repfn.FnUpdateTestStepResHTML("Verify Alias Name is Entered ","Alias Name is Entered","PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton,driver)){
					WebElement ManageLine_SaveButton=driver.findElement(By.xpath(mbo.ManageLine_SaveButton));

					repfn.FnUpdateTestStepResHTML("Verify  Save button is present After Editing alias Name","Save button is present After editing alias Name","PASS",runManagerInfoObj);
					if(ManageLine_SaveButton.isEnabled()){
						repfn.FnUpdateTestStepResHTML("Verify  Save button is enabled After Editing alias Name","Save button is enabled After editing alias Name","PASS",runManagerInfoObj);

						cnf.JSClick(ManageLine_SaveButton,driver);
						Thread.sleep(2000);
						
						if(cnf.FnExplicitWait("XPATH", mbo.unable_To_Save,driver))
						{
							blnFlag=unable_To_Save(driver,runManagerInfoObj);
							
						}
						else{
						if(cnf.FnExplicitWait("XPATH", mbo.TollFreeDetailSheet,driver)){
							WebElement ManageLines_DetailsPage=driver.findElement(By.xpath(mbo.TollFreeDetailSheet));
							String aliasNameAfterSave=driver.findElement(By.xpath(mbo.ManageLine_UneditableAliasName)).getText();

							if(newAliasName.equals(aliasNameAfterSave)){
								repfn.FnUpdateTestStepResHTML("Verify  User should be able to save the changes made and taken back to the information screen","User is able to save the changes made and taken back to the information screen","PASS",runManagerInfoObj);
								blnFlag=true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify  User should be able to save the changes made and taken back to the information screen","User is not able to save the changes made and taken back to the information screen","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}else{
							repfn.FnUpdateTestStepResHTML("Verify  toll free date sheet is displayed","Toll free date sheet is not displayed","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
						}
					}else{
						repfn.FnUpdateTestStepResHTML("Verify  Save button is enabled After Editing alias Name","Save button is not enabled After present alias Name","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}


				else{
					repfn.FnUpdateTestStepResHTML("Verify  Save button is present After Editing alias Name","Save button is not present After Editing alias Name","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Alias Name is Entered ","Alias Name is not  Entered","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify  User should be able to save the changes made and taken back to the information screen","User is not able to save the changes made and taken back to the information screen due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		driver.navigate().refresh();
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;


	}

	public synchronized boolean FN_CheckSaveOption(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{
			
			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_AliasName,driver)){
				WebElement ManageLine_AliasName=driver.findElement(By.xpath(mbo.ManageLine_AliasName));
				ManageLine_AliasName.clear();
				String newAliasName="AndrewLine1";
				ManageLine_AliasName.sendKeys(newAliasName);

				repfn.FnUpdateTestStepResHTML("Verify Alias Name is Entered ","Alias Name is Entered","PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton,driver)){
					
				WebElement ManageLine_SaveButton=driver.findElement(By.xpath(mbo.ManageLine_SaveButton));
				if(ManageLine_SaveButton.isEnabled()){
					repfn.FnUpdateTestStepResHTML("Verify  Save button is enabled After Editing alias Name","Save button is enabled After Editing alias Name","PASS",runManagerInfoObj);

				}

				else{
					repfn.FnUpdateTestStepResHTML("Verify  Save button is enabled After Editing alias Name","Save button is not enabled After Editing alias Name","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_CancelBtn,driver)){
					repfn.FnUpdateTestStepResHTML("Verify  Cancel button is getting displayed After Editing alias Name","Cancel button is  getting displayed After Editing alias Name","PASS",runManagerInfoObj);
					
				WebElement ManageLine_CancelButton=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));
				if(cnf.JSClick(ManageLine_CancelButton,driver)){
					repfn.FnUpdateTestStepResHTML("Verify  Cancel button is getting clicked","Cancel button is clicked","PASS",runManagerInfoObj);

				if(cnf.FnExplicitWait("XPATH", mbo.ConfirmConfirmationPopup,driver)){
					repfn.FnUpdateTestStepResHTML("Verify  Confirmation Popup is getting displayed","Confirmation Popup is  getting displayed","PASS",runManagerInfoObj);
					
					WebElement ConfirmationPopup_ConfirmButton=driver.findElement(By.xpath(mbo.ConfirmConfirmationPopup));
				if(cnf.JSClick(ConfirmationPopup_ConfirmButton,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify Confirm option is getting clicked","Confirm option is clicked","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Confirm option is getting clicked and changes get canceled for alias name","Confirm option is not getting clicked and changes get canceled for alias name","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				}else{
					repfn.FnUpdateTestStepResHTML("Verify  Confirmation Popup is getting displayed","Confirmation Popup is not getting displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				}else{
					repfn.FnUpdateTestStepResHTML("Verify  Cancel button is getting clicked","Cancel button is not getting clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				}else{
					repfn.FnUpdateTestStepResHTML("Verify  Cancel button is getting displayed After Editing alias Name","Cancel button is not getting displayed After Editing alias Name","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				
			
			}else{
				repfn.FnUpdateTestStepResHTML("Verify  Save button is getting displayed After Editing alias Name","Save button is not getting displayed After Editing alias Name","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Alias Name is Entered ","Alias Name is not  Entered","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify Save button is enabled After Editing alias Name","Save button is not enabled After Editing alias Name due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		driver.navigate().refresh();
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;




	}
	public synchronized boolean FN_CancelAliasName(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{
			String aliasNameonEditPage="";

			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
				WebElement ManageLine_EditButton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton));
				repfn.FnUpdateTestStepResHTML("Verify Edit option is present ","Edit Option is present","PASS",runManagerInfoObj);
				if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.ManageLine_Editbutton,driver)){
					cnf.JSClick(ManageLine_EditButton,driver);
					repfn.FnUpdateTestStepResHTML("Verify Edit option is clicked ","Edit Option is clicked","PASS",runManagerInfoObj);
					if( cnf.FnExplicitWait("XPATH", mbo.TollFreeEdit_RequiredField,driver)){


						WebElement EditPhoneLinePane=driver.findElement(By.xpath(mbo.TollFreeEdit_RequiredField));
						repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is taken to the edit phone line pane","PASS",runManagerInfoObj);
						aliasNameonEditPage=driver.findElement(By.xpath(mbo.ManageLine_EditAliasName)).getAttribute("value");


						if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_AliasName,driver)){

							WebElement ManageLine_AliasName=driver.findElement(By.xpath(mbo.ManageLine_AliasName));
							ManageLine_AliasName.clear();
							String newAliasName="AndrewLine1";
							ManageLine_AliasName.sendKeys(newAliasName);

							repfn.FnUpdateTestStepResHTML("Verify User should be able to view and edit Alias name data field ","User is able to view and edit Alias name data field","PASS",runManagerInfoObj);

							if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_CancelBtn,driver)){

								repfn.FnUpdateTestStepResHTML("Verify Cancel option is present ","Cancel Option is present","PASS",runManagerInfoObj);
								WebElement ManageLine_CancelButton=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));  
								cnf.JSClick(ManageLine_CancelButton,driver);
								repfn.FnUpdateTestStepResHTML("Verify Cancel option is clicked ","Cancel Option is clicked","PASS",runManagerInfoObj);


								if(cnf.FnExplicitWait("XPATH", mbo.LeaveConfirmationPopUp,driver)){
									WebElement CancelConfirmationPopup=driver.findElement(By.xpath(mbo.LeaveConfirmationPopUp));  	 
									repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup ","Confirmation Popup is present","PASS",runManagerInfoObj);
									WebElement ConfirmationPopup_ConfirmButton=driver.findElement(By.xpath(mbo.ConfirmConfirmationPopup)); 	        
									cnf.JSClick(ConfirmationPopup_ConfirmButton,driver);
									if( cnf.FnExplicitWait("XPATH", mbo.TollFreeDetailSheet,driver)){
										WebElement ManageLines_DetailsPage=driver.findElement(By.xpath(mbo.TollFreeDetailSheet));

										String aliasNameonDetailspage=  driver.findElement(By.xpath(mbo.ManageLine_UneditableAliasName)).getText();
										if(aliasNameonDetailspage.equals(aliasNameonEditPage)){
											repfn.FnUpdateTestStepResHTML("Verify User is navigated to information screen,and the user made changes get cancelled ","User is navigated to information screen,and the user made changes get cancelled","PASS",runManagerInfoObj);
										}
										else{
											repfn.FnUpdateTestStepResHTML("Verify User is navigated to information screen,and the user made changes get cancelled ","User is not navigated to information screen,and the user made changes get cancelled","FAIL",runManagerInfoObj);
											blnFlag=false;
										}	
									}else{
										repfn.FnUpdateTestStepResHTML("Verify User is navigated to information screen ","User is not navigated to information screen","FAIL",runManagerInfoObj);
										blnFlag=false;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup","Confirmation Popup is not present","FAIL",runManagerInfoObj);
									blnFlag=false;
								}

							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Cancel option is present ","Cancel Option is not present","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User should be able to view and edit Alias name data field ","User is not able to view and edit Alias name data field","PASS",runManagerInfoObj);
						}

					}


					else{
						repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is not taken to the edit phone line pane","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}else{
					repfn.FnUpdateTestStepResHTML("Verify Edit option is clickable ","Edit Option is not clickable","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Edit option is present ","Edit Option is not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}






			driver.navigate().refresh();
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is navigated to information screen,and the user made changes get cancelled","User is not navigated to information screen,and the user made changes are not cancelled due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;




	}

	public synchronized boolean FN_DeleteAliasName(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{
			FN_ManageLines_ValidateEditButton( driver, runManagerInfoObj);

			WebElement ManageLines_EditPage=driver.findElement(By.xpath(mbo.TollFreeEdit_RequiredField));
			if( cnf.FnExplicitWait("XPATH", mbo.ManageLine_EditAliasName,driver)){
				WebElement aliasNameEditPageElement=driver.findElement(By.xpath(mbo.ManageLine_EditAliasName));


				repfn.FnUpdateTestStepResHTML("Verify User should be able to view Alias name data field","User is able to view Alias name data field","PASS",runManagerInfoObj);


				aliasNameEditPageElement.clear();
				if( cnf.JSClick(aliasNameEditPageElement,driver)){
					repfn.FnUpdateTestStepResHTML("Verify User should be able to click edit option","User is able to click edit option","PASS",runManagerInfoObj);
					WebElement ManageLines_DeleteButton=driver.findElement(By.xpath(mbo.ManageLine_DeleteButton));

					String newAliasName="";
					aliasNameEditPageElement.sendKeys(newAliasName);

					if( cnf.JSClick(ManageLines_DeleteButton,driver)){
						repfn.FnUpdateTestStepResHTML("Verify User should be able to delete option","User is able to click delete option","PASS",runManagerInfoObj);
						WebElement aliasNameAfterDeleteElement=driver.findElement(By.xpath(mbo.ManageLine_EditAliasName));
						if(aliasNameAfterDeleteElement.getAttribute("value").equals("")){
							repfn.FnUpdateTestStepResHTML("Verify User should be able to delete the alias name","User is able to delete the alias name","PASS",runManagerInfoObj);
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User should be able to delete the alias name","User is not able to delete the alias name","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
						if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton,driver)){
							WebElement ManageLine_SaveButton=driver.findElement(By.xpath(mbo.ManageLine_SaveButton));
							repfn.FnUpdateTestStepResHTML("Verify save option is getting displayed","save option is getting displayed","PASS",runManagerInfoObj);
							cnf.JSClick(ManageLine_SaveButton,driver);
							Thread.sleep(3000);
							if(cnf.FnExplicitWait("XPATH", mbo.unable_To_Save,driver))
							{
								blnFlag=unable_To_Save(driver,runManagerInfoObj);
								
							}
							else{
							
							if(cnf.FnExplicitWait("XPATH", mbo.TollFreeDetailSheet,driver)){
								WebElement ManageLines_DetailsPage=driver.findElement(By.xpath(mbo.TollFreeDetailSheet));
								String aliasNameAfterSave=driver.findElement(By.xpath(mbo.ManageLine_UneditableAliasName)).getText();
								if(ManageLines_DetailsPage.isDisplayed() && aliasNameAfterSave.equals("--")){
									repfn.FnUpdateTestStepResHTML("Verify  User should be able to save the changes made and taken back to the information screen","User is able to save the changes made and taken back to the information screen","PASS",runManagerInfoObj);
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify  User should be able to save the changes made and taken back to the information screen","User is able to save the changes made and taken back to the information screen","FAIL",runManagerInfoObj);
									blnFlag=false;
								}
								driver.navigate().refresh();

								//Resaving the name

								if(cnf.FnExplicitWait("XPATH", mbo.TollFreeNumber,driver)){
									WebElement ManageLine_TollFreeNumberRow=driver.findElement(By.xpath(mbo.TollFreeNumber));
									cnf.JSClick(ManageLine_TollFreeNumberRow,driver);
									repfn.FnUpdateTestStepResHTML("Verify A Toll Free Number is selected ","Toll Free Number is Selected","PASS",runManagerInfoObj);
									if( cnf.FnExplicitWait("XPATH", mbo.TollFreeDetailSheet,driver)){
										WebElement ManageLine_DetailSheet=driver.findElement(By.xpath(mbo.TollFreeDetailSheet));


										repfn.FnUpdateTestStepResHTML("Verify  Detail Sheet is displayed for the selected phone line","Detail Sheet is displayed for the selected phone line","PASS",runManagerInfoObj);


										if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
											WebElement ManageLine_EditButton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton));        	        	 
											repfn.FnUpdateTestStepResHTML("Verify Edit option is present ","Edit Option is present","PASS",runManagerInfoObj);
											cnf.JSClick(ManageLine_EditButton,driver);
											repfn.FnUpdateTestStepResHTML("Verify Edit option is clicked ","Edit Option is clicked","PASS",runManagerInfoObj);
											if(cnf.FnExplicitWait("XPATH", mbo.TollFreeEdit_RequiredField,driver)){
												WebElement EditPhoneLinePane=driver.findElement(By.xpath(mbo.TollFreeEdit_RequiredField));


												repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is taken to the edit phone line pane","PASS",runManagerInfoObj);


												if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_AliasName,driver)){
													WebElement ManageLine_AliasName=driver.findElement(By.xpath(mbo.ManageLine_AliasName));
													ManageLine_AliasName.clear();
													String renewAliasName="AndrewLine1";
													ManageLine_AliasName.sendKeys(renewAliasName);

													repfn.FnUpdateTestStepResHTML("Verify Alias Name is Entered again ","Alias Name is Entered again","PASS",runManagerInfoObj);
													if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton,driver)){
														repfn.FnUpdateTestStepResHTML("Verify Save button is displayed","Save button is displayed","PASS",runManagerInfoObj);
														WebElement ManageLine_SaveButtons=driver.findElement(By.xpath(mbo.ManageLine_SaveButton));
														if(ManageLine_SaveButtons.isEnabled()){
															repfn.FnUpdateTestStepResHTML("Verify  Save button is enabled After Editing alias Name","Save button is enabled After Editing alias Name","PASS",runManagerInfoObj);
															cnf.JSClick(ManageLine_SaveButtons,driver);
															repfn.FnUpdateTestStepResHTML("Verify Save button is clicked","Save button is clciked","PASS",runManagerInfoObj);
															Thread.sleep(3000);
															if( cnf.FnExplicitWait("XPATH", mbo.TollFreeDetailSheet,driver)){
																repfn.FnUpdateTestStepResHTML("Verify  Detail Sheet is displayed for the selected phone line","Detail Sheet is displayed for the selected phone line","PASS",runManagerInfoObj);
																WebElement ManageLines_DetailPage=driver.findElement(By.xpath(mbo.TollFreeDetailSheet));
																String aliasNameAfterSaveagain=driver.findElement(By.xpath(mbo.ManageLine_UneditableAliasName)).getText();

																if( renewAliasName.equals(aliasNameAfterSaveagain)){
																	repfn.FnUpdateTestStepResHTML("Verify  User should be able to save the changes made and taken back to the information screen","User is able to save the changes made and taken back to the information screen","PASS",runManagerInfoObj);
																	blnFlag=true;
																}
																else{
																	repfn.FnUpdateTestStepResHTML("Verify  User should be able to save the changes made and taken back to the information screen","User is not able to save the changes made and taken back to the information screen","FAIL",runManagerInfoObj);
																	blnFlag=false;
																}
															}else{
																repfn.FnUpdateTestStepResHTML("Verify  Detail Sheet is displayed for the selected phone line","Detail Sheet is not displayed for the selected phone line","FAIL",runManagerInfoObj);
																blnFlag=false;
															}
														}


														else{
															repfn.FnUpdateTestStepResHTML("Verify  Save button is enabled After Editing alias Name","Save button is not enabled After Editing alias Name","FAIL",runManagerInfoObj);
															blnFlag=false;
														}
													}else{
														repfn.FnUpdateTestStepResHTML("Verify Save button is displayed","Save button is not displayed","FAIL",runManagerInfoObj);
														blnFlag=false;
													}
												}
												else{
													repfn.FnUpdateTestStepResHTML("Verify Alias Name is Entered ","Alias Name is not  Entered","FAIL",runManagerInfoObj);
													blnFlag=false;
												}
											}


											else{
												repfn.FnUpdateTestStepResHTML("Verify  User is taken to the edit phone line pane","User is not taken to the edit phone line pane","FAIL",runManagerInfoObj);
												blnFlag=false;
											}
										}
										else{
											repfn.FnUpdateTestStepResHTML("Verify Edit option is present ","Edit Option is not present","FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									}


									else{
										repfn.FnUpdateTestStepResHTML("Verify  Detail Sheet is displayed for the selected phone line","Detail Sheet is not displayed for the selected phone line","FAIL",runManagerInfoObj);
										blnFlag=false;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify A Toll Free Number is selected ","Toll Free Number is not  Selected","FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}else{
								repfn.FnUpdateTestStepResHTML("Verify toll free details sheet is displayed","toll free details sheet is not displayed","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
							}
						}else{
							repfn.FnUpdateTestStepResHTML("Verify save button is getting displayed","Save button is not getting displayed","FAIL",runManagerInfoObj);
							blnFlag=false;
						}

					}else{
						repfn.FnUpdateTestStepResHTML("Verify User should be able to click delete option","User is not able to click delete option","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}else{
					repfn.FnUpdateTestStepResHTML("Verify User should be able to click edit option","User is not able to click edit option","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			} else{
				repfn.FnUpdateTestStepResHTML("Verify User should be able to view Alias name data field","User is not able to view Alias name data field","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User should be able to save the changes made and taken back to the information screen","User is not able to save the changes made and taken back to the information screen due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		driver.navigate().refresh();
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;


	}

	public synchronized boolean FN_CancelDeleteAliasName(WebDriver driver,RunManagerInfo runManagerInfoObj){


		try{
			FN_ManageLines_ValidateEditButton( driver, runManagerInfoObj);

			WebElement ManageLines_EditPage=driver.findElement(By.xpath(mbo.TollFreeEdit_RequiredField));
			if( cnf.FnExplicitWait("XPATH", mbo.ManageLine_AliasName,driver)){
				WebElement aliasNameEditPageElement=driver.findElement(By.xpath(mbo.ManageLine_EditAliasName));

				repfn.FnUpdateTestStepResHTML("Verify User should be able to view Alias name data field","User is able to view Alias name data field","PASS",runManagerInfoObj);


				aliasNameEditPageElement.clear();
				if(  cnf.JSClick(aliasNameEditPageElement,driver)){
					repfn.FnUpdateTestStepResHTML("Verify User is able to click edit option","Verify User is able to click edit option","PASS",runManagerInfoObj);

					WebElement ManageLines_DeleteButton=driver.findElement(By.xpath(mbo.ManageLine_DeleteButton));

					String newAliasName="";
					aliasNameEditPageElement.sendKeys(newAliasName);

					if(cnf.JSClick(ManageLines_DeleteButton,driver)){
						repfn.FnUpdateTestStepResHTML("Verify User is able to click delete option","Verify User is able to click delete option","PASS",runManagerInfoObj);

						WebElement aliasNameAfterDeleteElement=driver.findElement(By.xpath(mbo.ManageLine_EditAliasName));
						if(aliasNameAfterDeleteElement.getAttribute("value").equals("")){
							repfn.FnUpdateTestStepResHTML("Verify User should be able to delete the alias name","User is able to delete the alias name","PASS",runManagerInfoObj);
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User should be able to delete the alias name","User is not able to delete the alias name","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
						WebElement ManageLine_CancelButton=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));
						if( cnf.JSClick(ManageLine_CancelButton,driver)){

							repfn.FnUpdateTestStepResHTML("Verify User is able to click cancel option","Verify User is  able to click delete option","PASS",runManagerInfoObj);

							if(cnf.FnExplicitWait("XPATH", mbo.LeaveConfirmationPopUp,driver)){
								WebElement CancelConfirmationPopup=driver.findElement(By.xpath(mbo.LeaveConfirmationPopUp));
								repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup on clicking cancel ","User is displayed with the Confirmation Popup on clicking cancel","PASS",runManagerInfoObj);


								WebElement ConfirmationPopup_ConfirmButton=driver.findElement(By.xpath(mbo.ConfirmConfirmationPopup));
								if(cnf.JSClick(ConfirmationPopup_ConfirmButton,driver)){
									repfn.FnUpdateTestStepResHTML("Verify User is able to click confirm option","Verify User is able to click confirm option","PASS",runManagerInfoObj);
									if(cnf.FnExplicitWait("XPATH", mbo.TollFreeDetailSheet,driver)){
										WebElement ManageLines_DetailsPage=driver.findElement(By.xpath(mbo.TollFreeDetailSheet));

										String aliasNameonDetailspage=  driver.findElement(By.xpath(mbo.ManageLine_UneditableAliasName)).getText();
										if(ManageLines_DetailsPage.isDisplayed() && !aliasNameonDetailspage.equals("--")){
											repfn.FnUpdateTestStepResHTML("Verify User is navigated to information screen,and the user made changes get cancelled on clicking Confirm on Confirmation popup","User is navigated to information screen,and the user made changes get cancelled on clicking Confirm on Confirmation popup","PASS",runManagerInfoObj);
											blnFlag=true;
										}
										else{
											repfn.FnUpdateTestStepResHTML("Verify User is navigated to information screen,and the user made changes get cancelled on clicking Confirm on Confirmation popup ","User is navigated to information screen,and the user made changes get cancelled on clicking Confirm on Confirmation popup","FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									}else{
										repfn.FnUpdateTestStepResHTML("Verify details sheet is getting displayed for phone line"," Details sheet is not getting displayed for phone line","FAIL",runManagerInfoObj);
										blnFlag=false;
									}
								}else{
									repfn.FnUpdateTestStepResHTML("Verify User is able to click confirm option","Verify User is not able to click confirm option","FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}else{
								repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup on clicking cancel","User is not displayed with the Confirmation Popup on clicking cancel","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}else{
							repfn.FnUpdateTestStepResHTML("Verify User is able to click cancel option","Verify User is not able to click cancel option","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}else{
						repfn.FnUpdateTestStepResHTML("Verify User is able to click delete option","Verify User is not able to click delete option","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}else{
					repfn.FnUpdateTestStepResHTML("Verify User is able to click edit option","Verify User is not able to click edit option","FAIL",runManagerInfoObj);
					blnFlag=false;	
				}

			}else{
				repfn.FnUpdateTestStepResHTML("Verify User should be able to view Alias name data field","User is not able to view Alias name data field","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is displayed with the Confirmation Popup on clicking cancel","User is not displayed with the Confirmation Popup on clicking cancel due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		driver.navigate().refresh();
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;



	}

	public synchronized boolean FN_AliasNameEdit(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

		try{
			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_AliasName,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Alias Name Field is displayed","Alias Name Field is displayed","PASS",runManagerInfoObj);
				WebElement ManageLine_AliasName=driver.findElement(By.xpath(mbo.ManageLine_AliasName));
				ManageLine_AliasName.clear();
				String name = m1.get("NewName").toString();
				ManageLine_AliasName.sendKeys(name+randomInt);
				
				repfn.FnUpdateTestStepResHTML("Verify New Alias Name is Entered for the phone number which does not have alias name ","New Alias Name is Entered for the phone number which does not have alias name","PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton,driver)){
					WebElement ManageLine_SaveButton=driver.findElement(By.xpath(mbo.ManageLine_SaveButton));
					if(ManageLine_SaveButton.isEnabled()){    	
						repfn.FnUpdateTestStepResHTML("Verify Save button is enabled After Editing alias Name","Save button is enabled After Editing alias Name","PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Save button is enabled After Editing alias Name","Save button is not enabled After Editing alias Name","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Save button is displayed","Save button is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Alias Name Field is displayed","Alias Name Field is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify  Save button is enabled After Editing alias Name","Save button is not enabled After Editing alias Name due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
	
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	

	public synchronized boolean FN_manageLine_backbtnClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		try{

			if(cnf.FnExplicitWait("XPATH", mbo.UserDetail_Backbtn,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Back link is displayed in User Details pop-up","Back link is displayed in User Details pop-up","PASS",runManagerInfoObj);
				WebElement Backbtn=driver.findElement(By.xpath(mbo.UserDetail_Backbtn));
				if(cnf.JSClick(Backbtn,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Back link is clicked","Back link is clicked","PASS",runManagerInfoObj);
					//Need To remove once appln is stable
					driver.navigate().refresh();
					Thread.sleep(5000);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Back link is clicked","Back link is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Back link is displayed in User Details pop-up","Back link is not displayed in User Details pop-up","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

			if(cnf.FnExplicitWait("XPATH","//div[@ng-click='toggleDetails($event, line)']",driver)){
				repfn.FnUpdateTestStepResHTML("Verify if the user is taken back to the Manage user page"," The user is taken back to the Manage user page","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else if (cnf.FnExplicitWait("XPATH","//div[@ng-click='openDetails($event, contact)']",driver)) {
				repfn.FnUpdateTestStepResHTML("Verify if the user is taken back to the Contact page"," The user is taken back to the Contact page","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else if (cnf.FnExplicitWait("XPATH","//div[@ ng-class='selectedClass(call.callId)']",driver)) {
				repfn.FnUpdateTestStepResHTML("Verify if the user is taken back to the Call Log page"," The user is taken back to the Call Logt page","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if the User is taken back to the Manage user or Contact or Call Log page "," User is not taken back to the Manage user or Contact or Call Log page","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verifying if the user is able to go back to the Manage Lines list after selecting a phone line ","The user is not able to go back to the Manage Lines list after selecting a phone line due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	public synchronized boolean FN_SaveButtonClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{

			Thread.sleep(1000);
			Robot robot= new Robot();
			robot.keyPress(KeyEvent.VK_ALT);
			robot.keyPress(KeyEvent.VK_SPACE);
			//release opposite order
			robot.keyRelease(KeyEvent.VK_SPACE);
			robot.keyRelease(KeyEvent.VK_ALT);
			Thread.sleep(1000);
			robot.keyPress(KeyEvent.VK_R);
			robot.keyRelease(KeyEvent.VK_R);
			driver.manage().window().setSize(new Dimension(100, 100));
			driver.manage().window().maximize();
			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton,driver))
			{
				WebElement Savebtn=driver.findElement(By.xpath(mbo.ManageLine_SaveButton));
				cnf.ScrollToView(Savebtn,driver);
				//Thread.sleep(3000);
				if(cnf.JSClick(Savebtn,driver)){
					//Savebtn.click();
					repfn.FnUpdateTestStepResHTML("Verify Save button is Enabled and clicked ","Save button is Enabled and  clicked","PASS",runManagerInfoObj);
					blnFlag=true;
				}else{
					repfn.FnUpdateTestStepResHTML("Verify Save button is clicked "," Save button is not clicked","PASS",runManagerInfoObj);
					blnFlag=false;
				}
				//	driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);



				if(cnf.FnExplicitWait("XPATH", mbo.SaveNotWorkingText,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Save functionality working or not","Save functionality not working","FAIL",runManagerInfoObj);
					blnFlag=false;
					if(cnf.FnExplicitWaitFeedback("XPATH", mbo.Cancel_Button,driver))
					{
						WebElement close=driver.findElement(By.xpath(mbo.Cancel_Button));
						if(cnf.JSClick(close,driver)){
							repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked","Cancel button is clicked","PASS",runManagerInfoObj);
							blnFlag=false;
							Thread.sleep(2000);
							WebElement Confrm=driver.findElement(By.xpath(mbo.Confirm_btn));
							System.out.println("click aftr save not working");
							if(cnf.JSClick(Confrm,driver))
							{
								repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked","Confirm button is clicked","PASS",runManagerInfoObj);
								Thread.sleep(2000);
								driver.navigate().refresh();
								Thread.sleep(2000);
								repfn.FnUpdateTestStepResHTML("Verify User is moved back to contacts page","User is moved back to contacts page","PASS",runManagerInfoObj);
								blnFlag=false;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked","Confirm button is not clicked","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked","Cancel button is not clicked","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Cancel button is displayed","Cancel button is not displayed","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					blnFlag=true;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Save button is Enabled  ","Save button is not Enabled","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)
		{			
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verify Save button is Enabled and  clicked ","Save button is not Enabled and  not clicked due to some exception ","FAIL",runManagerInfoObj);
			blnFlag=false;

		}

		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	
	public synchronized boolean FNEnteringData_FN_LN(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{


			//Entering FirstName
			if(cnf.FnExplicitWait("XPATH", mbo.AddContact_FirstName,driver)){
				WebElement AddContact_FirstName=driver.findElement(By.xpath(mbo.AddContact_FirstName));
				int RandomInt=randomInt;
				Random_int_validation="Priyanka"+RandomInt;
				AddContact_FirstName.sendKeys("Priyanka"+RandomInt);

				repfn.FnUpdateTestStepResHTML("Verify FirstName is Entered ","FirstName is Entered","PASS",runManagerInfoObj);
				blnFlag=true;

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify FirstName is Entered ","FirstName is not  Entered","FAIL",runManagerInfoObj);
				blnFlag=false;
			}


			//Entering LastName
			if(cnf.FnExplicitWait("XPATH", mbo.AddContact_LastName,driver)){
				WebElement AddContact_LastName=driver.findElement(By.xpath(mbo.AddContact_LastName));
				AddContact_LastName.sendKeys("Sankaran");
				repfn.FnUpdateTestStepResHTML("Verify LastName is Entered ","LastName is Entered","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify LastName is Entered ","LastName is not  Entered","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

			//Entering Title
			if(cnf.FnExplicitWait("XPATH", mbo.AddContact_Title,driver)){
				WebElement AddContact_Title=driver.findElement(By.xpath(mbo.AddContact_Title));
				AddContact_Title.sendKeys("SampleText");
				repfn.FnUpdateTestStepResHTML("Verify Title is Entered ","Title is Entered","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Title is Entered ","Title is not  Entered","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

			//Entering companyName
			if(cnf.FnExplicitWait("XPATH", mbo.AddContact_Company,driver)){
				WebElement AddContact_Company=driver.findElement(By.xpath(mbo.AddContact_Company));
				AddContact_Company.sendKeys("Infosys");
				repfn.FnUpdateTestStepResHTML("Verify CompanyName is Entered ","CompanyName is Entered","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify CompanyName is Entered ","CompanyName is not  Entered","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify user is able to add First Name & Last Name","user is not able to add First Name & Last Name due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public  boolean FNFNManageLine_EditPhoneLineWithChange(WebDriver driver,RunManagerInfo runManagerInfoObj){

		try{
			List<WebElement> CallLog_arrowList=driver.findElements(By.xpath(mbo.CallLog_arrowList));
			if(CallLog_arrowList.get(0).isDisplayed()){
				//CallLog_arrowList.get(0).click();
				cnf.JSClick(CallLog_arrowList.get(0),driver);
				repfn.FnUpdateTestStepResHTML("Verify Arrow_DetailLink is displayed and Clicked ","Arrow_DetailLink is displayed and Clicked ","PASS",runManagerInfoObj);
				// WebElement UserDetailpopup=driver.findElement(By.xpath(mbo.UserDetailpopup));
				if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Line infomation window is displayed "," Line infomation window is displayed","PASS",runManagerInfoObj);

					WebElement ManageLine_Editbutton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton));
					if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
						repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed "," Edit button is displayed","PASS",runManagerInfoObj);

						cnf.ElementClick(ManageLine_Editbutton,driver); 
						repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked "," User is in edit mode after clicking edit button","PASS",runManagerInfoObj);

						cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton,driver);
						WebElement ManageLine_SaveButton=driver.findElement(By.xpath(mbo.ManageLine_SaveButton));
						if(!ManageLine_SaveButton.isEnabled()){

							repfn.FnUpdateTestStepResHTML("Verify  Intially Save button is not enabled in Edit Mode","Intially Save button is not enabled in Edit Mode","PASS",runManagerInfoObj);
							//Editing Name
							FNEnteringData_FN_LN(driver,runManagerInfoObj);
							WebElement Cancelbtn=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));
							if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_CancelBtn,driver))
							{

								repfn.FnUpdateTestStepResHTML("Verify Cancel button is displayed","Cancel button is displayed","PASS",runManagerInfoObj);

								cnf.ElementClick(Cancelbtn,driver); 
								repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked ","Cancel button is clicked","PASS",runManagerInfoObj);
								if(cnf.isElementExist(By.xpath(mbo.Confirmationpopup),driver)){
									repfn.FnUpdateTestStepResHTML("Check Confirmation pop up should be displayed as there was  changes "," Confirmation pop up is   displayed as there was   changes done","PASS",runManagerInfoObj);
									//Confirmation popup
									FN_CancelConfirmPopup(driver,runManagerInfoObj);
									//ConfirmDisplayandclick();
									blnFlag=true;
								}
								else{
									repfn.FnUpdateTestStepResHTML("Check Confirmation pop up should be displayed as there was  changes "," Confirmation pop up is  not  displayed as there was   changes done","FAIL",runManagerInfoObj);
									blnFlag=false;
								}


								WebElement Backbtn=driver.findElement(By.xpath(mbo.UserDetail_Backbtn));
								if(cnf.FnExplicitWait("XPATH", mbo.UserDetail_Backbtn,driver))
								{
									cnf.ElementClick(Backbtn,driver); 
									repfn.FnUpdateTestStepResHTML("Verify Back button is clicked ","Back button is clicked","PASS",runManagerInfoObj);
									blnFlag=true;
									//Need To remove once appln is stable
									driver.navigate().refresh();
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify Back button is clicked ","Back button is not clicked","FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked ","Cancel button is not clicked","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify  Intially Save button is not enabled in Edit Mode","Intially Save button is  enabled in Edit Mode","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is not clicked","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify  Line infomation window is displayed "," Line infomation window is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}



			}
			else{
				repfn.FnUpdateTestStepResHTML("Arrow_DetailLink is displayed and Clicked ","Arrow_DetailLink is  not displayed and Clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			//repfn.FnUpdateTestStepResHTML("Verifying if the user is able to edit the saved contacts from the call details window in the call logs page and cancel the changes ",
			//"The user is not  able to edit the saved contacts from the call details window in the call logs page and cancel the changes","FAIL",runManagerInfoObj);
			blnFlag=false;

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean FnSaveDataAndGoBack(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception {

		try{

			Thread.sleep(2000);
			if(cnf.FnExplicitWait("XPATH", mbo.Call_ContactSave,driver))
			{
				repfn.FnUpdateTestStepResHTML("Verify Save link is displayed in Edit Contact form"," Save link is displayed in Edit Contact form","PASS",runManagerInfoObj);
				WebElement UserContactDetailsSave=driver.findElement(By.xpath(mbo.Call_ContactSave));
				if(cnf.JSClick(UserContactDetailsSave,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify Save link is clicked in Edit Contact form"," Save link is clicked in Edit Contact form","PASS",runManagerInfoObj);
					//blnFlag	=true;
					if(cnf.FnExplicitWait("XPATH", mbo.SaveNotWorkingText,driver))
					{
						repfn.FnUpdateTestStepResHTML("Verify Save functionality working or not","Save functionality not working","FAIL",runManagerInfoObj);
						//blnFlag	=false;

						if(cnf.FnExplicitWaitFeedback("XPATH", mbo.Cancel_Button,driver))
						{
							WebElement close=driver.findElement(By.xpath(mbo.Cancel_Button));
							if(cnf.JSClick(close,driver))
							{
								repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked","Cancel button is not clicked","FAIL",runManagerInfoObj);
								Thread.sleep(2000);
								WebElement Confrm=driver.findElement(By.xpath(mbo.Confirm_btn));
								System.out.println("click aftr save not working");
								if(cnf.JSClick(Confrm,driver))
								{
									repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked","Confirm button is not clicked","FAIL",runManagerInfoObj);
									Thread.sleep(2000);
									driver.navigate().refresh();
									Thread.sleep(2000);
									repfn.FnUpdateTestStepResHTML("Verify User is moved back to contacts page","User is moved back to contacts page","PASS",runManagerInfoObj);
									blnFlag=false;
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked","Cancel button is not clicked","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Cancel button is displayed","Cancel button is not displayed","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						Thread.sleep(5000);

						if(cnf.FnExplicitWait("XPATH", mbo.UserDetail_Backbtn,driver)){
							repfn.FnUpdateTestStepResHTML("Verify Back link is displayed in User Details form"," Back link is displayed in User Details form","PASS",runManagerInfoObj);
							WebElement backButton = driver.findElement(By.xpath(mbo.UserDetail_Backbtn));
							if(cnf.JSClick(backButton,driver))
							{
								repfn.FnUpdateTestStepResHTML("Verify Back link is clicked in User Details form"," Back link is clicked in User Details form","PASS",runManagerInfoObj);
								blnFlag	=true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Back link is clicked in User Details form"," Back link is not clicked in User Details form","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}

						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Back link is displayed in User Details form"," Back link is not displayed in User Details form","FAIL",runManagerInfoObj);
							blnFlag	=false;
						}

						Thread.sleep(2000);

					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Save link is clicked in Edit Contact form"," Save link is not clicked in Edit Contact form","FAIL",runManagerInfoObj);
					blnFlag	=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Save link is displayed in Edit Contact form"," Save link is not displayed in Edit Contact form","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}


		}


		catch(Exception e)
		{

			repfn.FnUpdateTestStepResHTML("Verify if the user is able to save the changes in Edit Contact form. ", "User is not able to save the changes in Edit Contact form due to some exception.","FAIL",runManagerInfoObj);
			blnFlag	=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}

		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}

	public synchronized boolean FNEditcontact_RemovePhoneNumberVerification(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{
			cnf.FnExplicitWait("XPATH", mbo.Addcontact_PhoneTypeVerification,driver);
			List<WebElement> Addcontact_PhoneTypeVerification=driver.findElements(By.xpath(mbo.Addcontact_PhoneTypeVerification));

			System.out.println(Addcontact_PhoneTypeVerification.get(0).getAttribute("textContent"));//.getText()); 
			System.out.println(Addcontact_PhoneTypeVerification.get(1).getAttribute("textContent"));//.getText()); 


			if(Addcontact_PhoneTypeVerification.get(0).getAttribute("textContent").contains("Home")){


				repfn.FnUpdateTestStepResHTML("Verify PhoneNumber Type is displayed ","PhoneNumber Type:"+Addcontact_PhoneTypeVerification.get(0).getText()+" is displayed" ,"FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify PhoneNumber Type is displayed ","PhoneNumber Type home is not displayed instead Phone number type is displayed as :"+Addcontact_PhoneTypeVerification.get(0).getText()+" is  not displayed","PASS",runManagerInfoObj);
				blnFlag=true;
			}

		}
		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify PhoneNumber Type is displayed ","PhoneNumber Type is not displayed due to some exception" ,"FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean FN_VoiceSettingsClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		try{

			if(cnf.FnExplicitWait("XPATH", mbo.VoiceSettingsBtn,driver)){
				repfn.FnUpdateTestStepResHTML("Verify the presence of Voice Settings button ", "Voice Settings button is present","PASS",runManagerInfoObj);
				WebElement VoiceSettingBtn=driver.findElement(By.xpath(mbo.VoiceSettingsBtn));

				if(cnf.JSClick(VoiceSettingBtn,driver)){
					repfn.FnUpdateTestStepResHTML("Verify the click of Voice Settings button ", "Voice Settings button is clicked","PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH", mbo.VoiceSettingMenu,driver))
					{
						repfn.FnUpdateTestStepResHTML("Verify the display of Voice settings menu", "Voice settings menu is displayed", "PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else
					{
						repfn.FnUpdateTestStepResHTML("Verify the display of Voice settings menu", "Voice settings menu is not displayed", "FAIL",runManagerInfoObj);
						blnFlag=false;
					}                       
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify the click of Voice Settings button ", "Voice Settings button is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify the presence of Voice Settings button ", "Voice Settings button is not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}
		catch(Exception e)
		{
			blnFlag	=false;
			repfn.FnUpdateTestStepResHTML("Verify the presence of Voice Settings button ", "Voice Settings button is not present due to some exception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	public synchronized boolean Fn_FwdAllCallsOption(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{


			cnf.isElementExist(By.xpath(mbo.VoiceSettingsMenu),driver);
			WebElement FwdAllCallsOption=driver.findElement(By.xpath(mbo.VoiceSettingsMenu_FwdAllCalls));
			repfn.FnUpdateTestStepResHTML("Verify the presence of forward all call options in Voice Setting menu ", "Forward all call options in Voice Setting menu is present","PASS",runManagerInfoObj);
			blnFlag=true;
			if(cnf.ElementClick(FwdAllCallsOption,driver))
			{

				repfn.FnUpdateTestStepResHTML("Verify the click of forward all call options in Voice Setting menu ", "Forward all call options in Voice Setting menu is clicked","PASS",runManagerInfoObj);
				blnFlag=true;
				cnf.FnExplicitWait("XPATH",  mbo.FwdAllCalls_Menu,driver);
				
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify the click of Voice Setting button ", "Voice Setting button is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}


		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify the presence of forward all call options in Voice Setting menu ", "Forward all call options in Voice Setting menu is not present","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		return blnFlag;
	}


	public synchronized boolean Fn_FwdImmediateONOFF(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{


			WebElement FwdImmONOFFSlider=driver.findElement(By.xpath(mbo.FwdAllCalls_FwdImmONOFFSlider));
			repfn.FnUpdateTestStepResHTML("Verify the presence of Forward immediate/No ring ON/OFF Slider in forward all call options to change the slider ","Forward immediate/No ring ON/OFF Slider in forward all call options is present to change the slider","PASS",runManagerInfoObj);
			blnFlag=true;

			cnf.ElementClick(FwdImmONOFFSlider,driver);
			FN_FwdImmONOFFSlider(driver,runManagerInfoObj);


		
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify the presence of Forward immediate/No ring ON/OFF Slider in forward all call options to change the slider ","Forward immediate/No ring ON/OFF Slider in forward all call options is not present to change the slider","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		return blnFlag;
	}

	public synchronized boolean FN_FwdImmONOFFSlider(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			WebElement FwdImmONOFFSlider=driver.findElement(By.xpath(mbo.FwdAllCalls_FwdImmONOFFSlider));

			if(FwdImmONOFFSlider.getAttribute("aria-checked").equals("true"))
			{ 
				repfn.FnUpdateTestStepResHTML("Verify the Forward immediate/No ring ON/OFF Slider in forward all call options is changed to ON ","Forward immediate/No ring ON/OFF Slider in forward all call options is changed to ON","PASS",runManagerInfoObj);
				blnFlag=true;
				WebElement CancelBtn=driver.findElement(By.xpath(mbo.CancelBtn));
				repfn.FnUpdateTestStepResHTML("Verify the presence of Cancel button ","Cancel button is present","PASS",runManagerInfoObj);
				blnFlag=true;
				cnf.FnExplicitWait("XPATH", mbo.FwdAllCalls_PhoneNumSelector,driver);
				repfn.FnUpdateTestStepResHTML("Verify the presence of phone lines selector ","Phone line selector is present","PASS",runManagerInfoObj);
				blnFlag=true;
				List<WebElement> phonelinelist_FwdImm=driver.findElements(By.xpath(mbo.FwdAllCalls_PhoneNumSelectorList));
				for(int m=0;m<phonelinelist_FwdImm.size();m++)
				{

					System.out.println(phonelinelist_FwdImm.size());
					if(!phonelinelist_FwdImm.get(m).getAttribute("selected").equals("selected"))
					{
						m=m+1;
						System.out.println(m);
						cnf.ElementClick(phonelinelist_FwdImm.get(m),driver);
						System.out.println("The option clicked is"+phonelinelist_FwdImm.get(m).getText());
						Thread.sleep(1000);
				
						repfn.FnUpdateTestStepResHTML("Verify the phone line from dropdown of Forward immediate/No ring ON/OFF Slider selected ","Phone line from dropdown of Forward immediate/No ring ON/OFF Slider selected is "+" "+ phonelinelist_FwdImm.get(m).getText(),"PASS",runManagerInfoObj);
						blnFlag=true; 
						break;
						//}
					}
				}

			}    
			else
			{
				cnf.ElementClick(FwdImmONOFFSlider,driver);
				FN_FwdImmONOFFSlider(driver,runManagerInfoObj);
				blnFlag=true;

			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify the Fwd Immediate On/OFF slider presence","Fwd Immediate On/OFF slider is not present","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		return blnFlag;

	}
	public synchronized boolean Fn_FwdBusyONOFF(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{


			WebElement FwdBusyNoAnsOnOffSlider=driver.findElement(By.xpath(mbo.FwdAllCalls_FwdBusyNoAnsOnOffSlider));
			repfn.FnUpdateTestStepResHTML("Verify the presence of Forward busy/No answer ON/OFF Slider in forward all call options to change the slider ","Forward busy/No ans ON/OFF Slider in forward all call options is present to change the slider","PASS",runManagerInfoObj);
			blnFlag=true;

			cnf.ElementClick(FwdBusyNoAnsOnOffSlider,driver);
			FN_FwdBusyNoAnsOnOffSlider(driver,runManagerInfoObj);


		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify the presence of Forward busy/No ans ON/OFF Slider in forward all call options to change the slider ","Forward busy/No ans ON/OFF Slider in forward all call options is not present to change the slider","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		return blnFlag;
	}


	public synchronized boolean FN_FwdBusyNoAnsOnOffSlider(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			WebElement FwdBusyONOFFSlider=driver.findElement(By.xpath(mbo.FwdAllCalls_FwdBusyNoAnsOnOffSlider));

			if(FwdBusyONOFFSlider.getAttribute("aria-checked").equals("true"))
			{ 
				repfn.FnUpdateTestStepResHTML("Verify the Forward busy/No ans ON/OFF Slider in forward all call options is changed to ON ","Forward busy/No ans ON/OFF Slider in forward all call options is changed to ON","PASS",runManagerInfoObj);
				blnFlag=true;

				cnf.FnExplicitWait("XPATH", mbo.FwdBusy_PhoneNumSelector,driver);
				repfn.FnUpdateTestStepResHTML("Verify the presence of phone lines selector for fwd busy ","Phone line selector for fwd busy is present","PASS",runManagerInfoObj);
				blnFlag=true;
				List<WebElement> phonelinelist_FwdBusy=driver.findElements(By.xpath(mbo.FwdBusy_PhoneNumSelectorList));
				for(int m=0;m<phonelinelist_FwdBusy.size();m++)
				{

					System.out.println(phonelinelist_FwdBusy.size());
					if(!phonelinelist_FwdBusy.get(m).getAttribute("selected").equals("selected"))
					{
						m=m+1;
						System.out.println(m);
						cnf.ElementClick(phonelinelist_FwdBusy.get(m),driver);
						System.out.println("The option clicked is"+phonelinelist_FwdBusy.get(m).getText());
						
						
	 {
						repfn.FnUpdateTestStepResHTML("Verify the phone line from dropdown of Forward busy/No ans ON/OFF Slider selected ","Phone line from dropdown of Forward busy/No and ON/OFF Slider selected is "+" "+ phonelinelist_FwdBusy.get(m).getText(),"PASS",runManagerInfoObj);
						blnFlag=true; 
						break;
						
					}
				}

				}
			}
			else
			{
				cnf.ElementClick(FwdBusyONOFFSlider,driver);
				FN_FwdBusyNoAnsOnOffSlider(driver,runManagerInfoObj);
				blnFlag=true;

			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify the Fwd busy On/OFF slider presence","Fwd busy On/OFF slider is not present","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		return blnFlag;

	}
	
	public synchronized boolean FN_SaveFwdImmediate_FwdBusy(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{

			cnf.isElementExist(By.xpath(mbo.FwdAllCalls_SaveBtn),driver);

			repfn.FnUpdateTestStepResHTML("Verify the presence of save button","Save button is present","PASS",runManagerInfoObj);
			blnFlag=true;
			cnf.ElementClick(driver.findElement(By.xpath(mbo.FwdAllCalls_SaveBtn)),driver);
			Thread.sleep(1000);
			repfn.FnUpdateTestStepResHTML("Verify the click of save button","Save button is clicked","PASS",runManagerInfoObj);
			blnFlag=true;
			cnf.isElementExist(By.xpath(mbo.CloseBtn),driver);
			repfn.FnUpdateTestStepResHTML("Verify the presence of close button","close button is present","PASS",runManagerInfoObj);
			blnFlag=true;
			cnf.ElementClick(driver.findElement(By.xpath(mbo.CloseBtn)),driver);
			if(cnf.FnExplicitWait("XPATH", mbo.VoiceSettingsMenu,driver))
			{
				repfn.FnUpdateTestStepResHTML("Verify the settings are saved and user is taken back to the Voice settings menu","settings are saved and user is taken back to the Voice settings menu","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify the settings are saved and user is taken back to the Voice settings menu","settings are saved and user is not taken back to the Voice settings menu","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify the presence of save button","Save button is not present","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		return blnFlag;
	}

	
	public synchronized boolean Messages_FaxClick(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{	

			WebElement Messagebtn =driver.findElement(By.xpath(mbo.Messages));

			if(Messagebtn.isDisplayed())
			{
				System.out.println("Messages button exists");
				repfn.FnUpdateTestStepResHTML("Verify if Messages button is present", "Messages button is present", "PASS",runManagerInfoObj);
				if(cnf.ElementClick(Messagebtn,driver))
				{
					System.out.println("Messages button is clicked");	
					repfn.FnUpdateTestStepResHTML("Verify if Messages button is Clicked", "Messages button is Clicked", "PASS",runManagerInfoObj);
					WebElement Faxicon=driver.findElement(By.xpath(mbo.FaxIcon));
					if(Faxicon.isDisplayed()){
						System.out.println("Fax icon is prsent");
						repfn.FnUpdateTestStepResHTML("Verify if Fax icon is present", "Fax icon is present", "PASS",runManagerInfoObj);
						if(cnf.ElementClick(Faxicon,driver))
						{
							System.out.println("Fax message is expanded");
							repfn.FnUpdateTestStepResHTML("Verify if Fax message is expanded", "Fax Message is expanded", "PASS",runManagerInfoObj);
							List<WebElement> abc=driver.findElements(By.xpath(mbo.FaxPreview));


							if(abc.get(0).isDisplayed())
							{
								System.out.println("Fax preview is displayed");
								repfn.FnUpdateTestStepResHTML("Verify if Fax preview is displayed", "Fax Preview is displayed", "PASS",runManagerInfoObj);
								blnFlag=true;
							}
							else
							{
								System.out.println("Fax preview is not displayed");
								repfn.FnUpdateTestStepResHTML("Verify if Fax preview is displayed", "Fax Preview is not displayed", "FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}


						else
						{
							System.out.println("Fax message is not expanded");
							repfn.FnUpdateTestStepResHTML("Verify if Fax message is expanded", "Fax Message is not expanded", "FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else
					{
						System.out.println("Fax icon is not prsent");
						repfn.FnUpdateTestStepResHTML("Verify if Fax icon is present", "Fax icon is not present", "FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else
				{
					System.out.println("Messages button is not clicked");	
					repfn.FnUpdateTestStepResHTML("Verify if Messages button is Clicked", "Messages button is not Clicked", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else
			{
				System.out.println("Messages button does not exists");
				repfn.FnUpdateTestStepResHTML("Verify if Messages button is present", "Messages button is not present", "FAIL",runManagerInfoObj);
				blnFlag=false;

			}
		}



		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verify if the shelf services and equipment in the overwiew page is displayed", "verify did not happen ","FAIL",runManagerInfoObj);
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	

	
	public synchronized boolean FnUnSavedCallLogs(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{	
			List <WebElement> SavedCallLogDetails=driver.findElements(By.xpath(mbo.Savedcontacts));
			List <WebElement> PhoneType=driver.findElements(By.xpath(mbo.Savedcontacts));
			SavedCallLogDetails.retainAll(PhoneType);
			
			for(int i=0;i<=SavedCallLogDetails.size();i++)
			{
				if(SavedCallLogDetails.get(i).getText().contains("("))
				{

					System.out.println("UnSaved contacts are displayed"+SavedCallLogDetails.get(i).getText()+PhoneType.get(i).getText());
					repfn.FnUpdateTestStepResHTML("Verify if unsaved call is displayed", "Unsaved call is displayed "+SavedCallLogDetails.get(i).getText(),"PASS",runManagerInfoObj);

					blnFlag=true;
				}
			}
		}


		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verify if unsaved call logs are displayed", "Unsaved Call Logs are not displayed","FAIL",runManagerInfoObj);
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	
	
	public synchronized boolean FnUnBlockContact(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			if(cnf.FnExplicitWait("XPATH", mbo.Savedcontacts,driver))
			{
				repfn.FnUpdateTestStepResHTML("Verify Call logs are displayed", "Call logs are displayed","PASS",runManagerInfoObj);
				List <WebElement> SavedCallLogDetails=driver.findElements(By.xpath(mbo.Savedcontacts));
				List <WebElement> SavedCallLogDetail=new ArrayList();
				
				for(WebElement Contact:SavedCallLogDetails)
				{
					if(Contact.getText().contains("("))
					{
						SavedCallLogDetail.add(Contact);
					}
				}
				
				if(SavedCallLogDetail.size()>0)
				{
					repfn.FnUpdateTestStepResHTML("Verify Call logs are displayed for Unsaved Contacts", "Call logs are displayed for Unsaved Contacts","PASS",runManagerInfoObj);
					for(int i=0;i<1;i++)
					{
						String ContactsText=SavedCallLogDetail.get(i).getText();
						if(cnf.JSClick(SavedCallLogDetail.get(i),driver)){
							repfn.FnUpdateTestStepResHTML("Verify if Unsaved Call log is clicked", "Unsaved Call log is clicked: "+ContactsText,"PASS",runManagerInfoObj);
							Thread.sleep(2000);
							if(cnf.FnExplicitWait("XPATH",mbo.Unblockbtn,driver))
							{
								repfn.FnUpdateTestStepResHTML("Check Whether UnBlock link is present or not ", "UnBlock link is present for Unsaved contact : " +ContactsText,"PASS",runManagerInfoObj);
								WebElement Unblock=driver.findElement(By.xpath(mbo.Unblockbtn));
								if(cnf.JSClick(Unblock,driver)){
									repfn.FnUpdateTestStepResHTML("Verify if Unblock link is clicked or not","Unblock link is clicked","PASS",runManagerInfoObj);
									Thread.sleep(3000);
									if(cnf.FnExplicitWait("XPATH",mbo.Block,driver))
									{
										repfn.FnUpdateTestStepResHTML("Verify if Unsaved contact is unblocked","Unsaved Contact is unblocked as Block link is getting displayed","PASS",runManagerInfoObj);	
										blnFlag=FN_BackButtonClick(driver,runManagerInfoObj);
										if(blnFlag){
											blnFlag=true;
										}
										else{
											blnFlag=false;
										}
									}
									else{
										repfn.FnUpdateTestStepResHTML("Verify if Unsaved contact is unblocked","Unsaved Contact is not unblocked as Block link is getting displayed","FAIL",runManagerInfoObj);
										blnFlag=false;
									}									
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify if Unblock link is clicked or not","Unblock link is not clicked","FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}
							else{
								if(cnf.FnExplicitWait("XPATH",mbo.Block,driver))
								{
									repfn.FnUpdateTestStepResHTML("Check Whether UnBlock link is present or not ", "UnBlock link is not present for Unsaved contact. Block link is displayed ","PASS",runManagerInfoObj);
									WebElement Block=driver.findElement(By.xpath(mbo.Block));
									if(cnf.JSClick(Block,driver)){
										repfn.FnUpdateTestStepResHTML("Check Whether Block link is clicked or not ", "Block link is clicked","PASS",runManagerInfoObj);
										if(cnf.FnExplicitWait("XPATH", mbo.Voice_ConfirmPopup,driver)){
											repfn.FnUpdateTestStepResHTML("Check Whether Confirmation popup present or not ", "Confirmation popup is present" ,"PASS",runManagerInfoObj);
											WebElement ConfirmMessage=driver.findElement(By.xpath(mbo.Voice_ConfirmPopup));

											repfn.FnUpdateTestStepResHTML("Check Whether Confirm option present or not to block the unsaved contact ", "Confirm option is present" ,"PASS",runManagerInfoObj);
											if(cnf.JSClick(ConfirmMessage,driver)){
												repfn.FnUpdateTestStepResHTML("Check Whether Confirm option clicked or not to block the contact ", "Confirm option is clicked to block contact" ,"PASS",runManagerInfoObj);
												Thread.sleep(3000);								
												
												if(cnf.FnExplicitWait("XPATH",mbo.Unblockbtn,driver))
												{
													repfn.FnUpdateTestStepResHTML("Check Whether UnBlock link is present or not ", "UnBlock link is present for Unsaved contact : " +ContactsText,"PASS",runManagerInfoObj);
													WebElement Unblock=driver.findElement(By.xpath(mbo.Unblockbtn));
													if(cnf.JSClick(Unblock,driver)){
														repfn.FnUpdateTestStepResHTML("Verify if Unblock link is clicked or not","Unblock link is clicked","PASS",runManagerInfoObj);
														Thread.sleep(3000);
														if(cnf.FnExplicitWait("XPATH",mbo.Block,driver))
														{
															repfn.FnUpdateTestStepResHTML("Verify if Unsaved contact is unblocked","Unsaved Contact is unblocked as Block link is getting displayed","PASS",runManagerInfoObj);	
															blnFlag=FN_BackButtonClick(driver,runManagerInfoObj);
															if(blnFlag){
																blnFlag=true;
															}
															else{
																blnFlag=false;
															}
														}
														else{
															repfn.FnUpdateTestStepResHTML("Verify if Unsaved contact is unblocked","Unsaved Contact is not unblocked as Block link is getting displayed","FAIL",runManagerInfoObj);
															blnFlag=false;
														}									
													}
													else{
														repfn.FnUpdateTestStepResHTML("Verify if Unblock link is clicked or not","Unblock link is not clicked","FAIL",runManagerInfoObj);
														blnFlag=false;
													}
												}
												else{
													if(cnf.FnExplicitWait("XPATH", mbo.Voice_Block_ErrorMessage,driver)){	
														WebElement Voice_Block_ErrorMessage=driver.findElement(By.xpath(mbo.Voice_Block_ErrorMessage));
														repfn.FnUpdateTestStepResHTML("Check Whether unsaved number is blocked or not", "Unable to block number error message is displayed","FAIL",runManagerInfoObj);	
														blnFlag=false;
														driver.navigate().refresh();
													}
													else{
														System.out.println("iNSIDE ELSE ");
														repfn.FnUpdateTestStepResHTML("Check Whether unsaved number is blocked or not", "Number is not blocked as Block link is getting displayed","FAIL",runManagerInfoObj);	
														blnFlag=false;
													}
												}
											}
											else{
												repfn.FnUpdateTestStepResHTML("Check Whether Confirm option clicked or not to block the contact ", "Confirm option is not clicked to block contact" ,"FAIL",runManagerInfoObj);
												blnFlag=false;
											}
										}
										else{
											repfn.FnUpdateTestStepResHTML("Check Whether Confirmation popup is present or not ", "Confirmation popup is not present" ,"FAIL",runManagerInfoObj);	
											repfn.FnUpdateTestStepResHTML("Check Whether Confirm option present or not to block the unsaved contact ", "Confirm option is not present" ,"FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									}
									else{
										repfn.FnUpdateTestStepResHTML("Check Whether Block link is clicked or not ", "Block link is not clicked","FAIL",runManagerInfoObj);
										blnFlag=false;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Check Whether Block link is present or not ", "Block link is not present for Unsaved contact.","FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify if Unsaved Call log is clicked", "Unsaved Call log is not clicked","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Call logs are displayed for Unsaved Contacts", "Call logs are not displayed for Unsaved Contacts","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Call logs are displayed", "Call logs are not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify if already blocked contact can be unblocked", "Already Blocked contact could not be unblocked due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	
	public synchronized boolean Confirmationpopup(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{

			if(cnf.FnExplicitWait("XPATH",mbo.BlockconfirmPopup,driver))
			{
				System.out.println("Confirmation popup is displayed");
				//repfn.FnUpdateTestStepResHTML("Verify if Confirmation popup is displayed","Confirmation popup is displayed","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else
			{
				System.out.println("Confirmation popup is not displayed");
				//repfn.FnUpdateTestStepResHTML("Verify if Confirmation popup is displayed","Confirmation popup is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify if Confirmation popup is displayed","Confirmation popup is not displayed due to some exception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	

	//Home page navigation on click of Spectrum Logo//

	public synchronized boolean LogoClick(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{

			cnf.FnExplicitWait("XPATH",mbo.SpectrumLogo,driver );
			WebElement Spectrum_Logo=driver.findElement(By.xpath(mbo.SpectrumLogo));
			if(Spectrum_Logo.isDisplayed())
			{
				System.out.println("Spectrum Logo is displayed");
				repfn.FnUpdateTestStepResHTML("Verify if Spectrum Logo is displayed","spectrum Logo is displayed","PASS",runManagerInfoObj);
				cnf.JSClick(Spectrum_Logo,driver);
				System.out.println("Spectrum Logo is clicked");
				repfn.FnUpdateTestStepResHTML("Verify if Spectrum Logo is clicked","spectrum Logo is clicked","PASS",runManagerInfoObj);
				
			}
			else
			{
				System.out.println("Spectrum Logo is not displayed");
				repfn.FnUpdateTestStepResHTML("Verify if Spectrum Logo is displayed","spectrum Logo is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify if Spectrum Logo is displaed and clicked", "Spectrum Logo is not displayed and clicked", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			//repfn.FnUpdateTestStepResHTML("Verify if the shelf services and equipment in the overwiew page is displayed", "verify did not happen ","FAIL",runManagerInfoObj);
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	public synchronized boolean SupportNav(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{

			cnf.FnExplicitWait("XPATH",mbo.SupportBtn,driver );
			WebElement Support=driver.findElement(By.xpath(mbo.SupportBtn));
			if(Support.isDisplayed())
			{
				System.out.println("support button is displayed");
				repfn.FnUpdateTestStepResHTML("Verify if support button is displayed","support button is displayed","PASS",runManagerInfoObj);
				cnf.JSClick(Support,driver);
				System.out.println("Support button is clicked");
				repfn.FnUpdateTestStepResHTML("Verify if Support button is clicked","Support button is clicked","PASS",runManagerInfoObj);
				cnf.FnExplicitWait("XPATH", mbo.Supportpage,driver);
				WebElement Support_page=driver.findElement(By.xpath(mbo.Supportpage));
				if(Support_page.isDisplayed())
				{
					System.out.println("User is navigated to Support page");
					repfn.FnUpdateTestStepResHTML("Verify if Support page is displayed","support page is displayed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else
				{
					System.out.println("User is not navigated to support page");
					repfn.FnUpdateTestStepResHTML("Verify if Support page is displayed","support page is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;	
				}
			}
			else
			{
				System.out.println("support button is not displayed");
				repfn.FnUpdateTestStepResHTML("Verify if support button is displayed","support button is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify if Support link is present and clicked", "Support Link is not present and clicked", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			//repfn.FnUpdateTestStepResHTML("Verify if the shelf services and equipment in the overwiew page is displayed", "verify did not happen ","FAIL",runManagerInfoObj);
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}	
	

	public synchronized boolean FN_BackButtonClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		try{
			
			if(cnf.FnExplicitWait("XPATH", mbo.UserDetail_Backbtn,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Back button is displayed ","Back button is displayed","PASS",runManagerInfoObj);
				WebElement Backbtn=driver.findElement(By.xpath(mbo.UserDetail_Backbtn));
				Thread.sleep(5000);
				if(cnf.ElementClick1(Backbtn)){
					repfn.FnUpdateTestStepResHTML("Verify Back button is clicked ","Back button is clicked","PASS",runManagerInfoObj);
					blnFlag=true;
					Thread.sleep(3000);
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Back button is clicked ","Back button is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				//driver.navigate().refresh();
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Back button is displayed ","Back button is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify whether user is taken to previous page on click of Back button", "User is not taken to previous page on click of Back button", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	
	
	
	public synchronized boolean FNEditUser(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{

			WebElement Editbtn=driver.findElement(By.xpath(mbo.CallLogedit));
			if(cnf.FnExplicitWait("XPATH", mbo.CallLogedit,driver)){
				cnf.ElementClick(Editbtn,driver);
				System.out.println("Edit button is clicked");
				repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked "," Edit button is clicked","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				System.out.println("Edit button is not clicked");
				repfn.FnUpdateTestStepResHTML("Verify  Edit button is clicked "," Edit button is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	
	public synchronized boolean Fn_callLogBlock_Cancel(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
	{

		try{


			if(cnf.FnExplicitWait("XPATH", mbo.Calllog_logList,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Call logs are displayed"," Call logs are displayed","PASS",runManagerInfoObj);
				List <WebElement> ContactNumber=driver.findElements(By.xpath(mbo.Calllog_logList));
				List <WebElement> ContactNumbers=new ArrayList();
				
				for(WebElement Contacts:ContactNumber)
				{
					String ContactsText=Contacts.getText();
					if(ContactsText.contains("("))
					{
						ContactNumbers.add(Contacts);
					}
				}
				
				if(ContactNumbers.size()>0){
					repfn.FnUpdateTestStepResHTML("Verify Call logs are displayed for Unsaved Contact","Call logs are displayed for Unsaved Contact","PASS",runManagerInfoObj);
					if(cnf.JSClick(ContactNumbers.get(0),driver)){
						repfn.FnUpdateTestStepResHTML("Verify whether Unsaved contact is clicked", " Unsaved contact clicked is: "+ContactNumbers.get(0).getText(),"PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify whether Unsaved contact is clicked", " Unsaved contact is not clicked ","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Call logs are displayed for Unsaved Contact","Call logs are not displayed for Unsaved Contact","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Call logs are displayed"," Call logs are not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verify whether the user is able to block a contact", "The user is not able to block a contact due to some exception","PASS",runManagerInfoObj);	
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	
	public synchronized boolean CallLog_Export(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			
			if(cnf.FnExplicitWait("XPATH", mbo.Export_Button,driver)){
				WebElement ExportButton=driver.findElement(By.xpath(mbo.Export_Button));
				repfn.FnUpdateTestStepResHTML("Check whether Export Button is displayed", "Export Button is displayed","PASS",runManagerInfoObj);
				if(cnf.JSClick(ExportButton,driver)){
					blnFlag=true;
					repfn.FnUpdateTestStepResHTML("Check whether Export Button is clicked", "Export Button is clicked","PASS",runManagerInfoObj);
				}
				else{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Check whether Export Button is clicked", "Export Button is not clicked","FAIL",runManagerInfoObj);
				
				}
			}else{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Check whether Export Button is displayed", "Export Button is not displayed","FAIL",runManagerInfoObj);
			
			}
			
			
		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	
	public synchronized boolean CallLog_Export_Button(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			if(cnf.FnExplicitWait("XPATH", mbo.ExportButton_Popup,driver)){
			WebElement ExportButtonPopup=driver.findElement(By.xpath(mbo.ExportButton_Popup));
			repfn.FnUpdateTestStepResHTML("Check whether Export button is displayed", "Export Button is displayed","PASS",runManagerInfoObj);
			blnFlag=cnf.JSClick(ExportButtonPopup,driver);
			}
			else{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Check whether Export button is displayed", "Export Button is not displayed","FAIL",runManagerInfoObj);
			}
		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	

	public synchronized boolean CallLog_Export_MissedCall(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try{

			if(cnf.FnExplicitWait("XPATH", mbo.ExportCalls_MissedCalls,driver)){
				repfn.FnUpdateTestStepResHTML("Check whether Export Missed Calls CheckBox is displayed", "Export Missed Calls CheckBox is displayed","PASS",runManagerInfoObj);
				blnFlag	=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Export Missed Calls CheckBox is displayed", "Export Missed Calls CheckBox is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
			if(cnf.FnExplicitWait("XPATH", mbo.ExportCalls_DailledCalls,driver)){
				repfn.FnUpdateTestStepResHTML("Check whether Export Dialled Calls CheckBox is displayed", "Export Dialled Calls CheckBox is displayed","PASS",runManagerInfoObj);
				blnFlag	=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Export Dialled Calls CheckBox is displayed", "Export Dialled Calls CheckBox is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
			if(cnf.FnExplicitWait("XPATH", mbo.ExportCalls_ReceivedCalls,driver)){
				repfn.FnUpdateTestStepResHTML("Check whether Export Received Calls CheckBox is displayed", "Export Received Calls CheckBox is displayed","PASS",runManagerInfoObj);
				blnFlag	=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Export Received Calls CheckBox is displayed", "Export Received Calls CheckBox is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
			//UnCheck Dialled Calls Check Box
			if(cnf.FnExplicitWait("XPATH", mbo.ExportCalls_DailledCalls,driver)){
				WebElement ExportCalls_DailledCalls=driver.findElement(By.xpath(mbo.ExportCalls_DailledCalls));	
				if(cnf.JSClick(ExportCalls_DailledCalls,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Export Dialled Calls CheckBox is unchecked", "Export Dialled Calls CheckBox is unchecked","PASS",runManagerInfoObj);
					blnFlag	=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Export Dialled Calls CheckBox is unchecked", "Export Dialled Calls CheckBox is not unchecked","FAIL",runManagerInfoObj);
					blnFlag	=false;
				}
			}			
			else
			{
				repfn.FnUpdateTestStepResHTML("Check whether Export Dialled Calls CheckBox is displayed", "Export Dialled Calls CheckBox is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
			//UnCheck Received Calls Check Box
			if(cnf.FnExplicitWait("XPATH", mbo.ExportCalls_ReceivedCalls,driver)){
				WebElement ExportCalls_ReceivedCalls=driver.findElement(By.xpath(mbo.ExportCalls_ReceivedCalls));
				if(cnf.JSClick(ExportCalls_ReceivedCalls,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Export Received Calls CheckBox is unchecked", "Export Received Calls CheckBox is unchecked","PASS",runManagerInfoObj);
					blnFlag	=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Export Received Calls CheckBox is unchecked", "Export Received Calls CheckBox is not unchecked","FAIL",runManagerInfoObj);
					blnFlag	=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Export Received Calls CheckBox is displayed", "Export Received Calls CheckBox is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
		}
		catch(Exception e)
		{
			blnFlag	=false;
			//repfn.FnUpdateTestStepResHTML("Login to Spectrum Business.net ", "Login is not performed due to exception","FAIL",runManagerInfoObj);
			repfn.FnUpdateTestStepResHTML("Check whether Export Missed Calls is displayed and selected", "Export Missed Calls check box is not displayed and selected due to some exception","PASS",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	public synchronized boolean FnCallLogClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		try{
			if(cnf.FnExplicitWait("Xpath", mbo.CallLogLink,driver)){
				WebElement CallLogink=driver.findElement(By.xpath(mbo.CallLogLink));
				repfn.FnUpdateTestStepResHTML("Verify CallLog Link is present in voice page ","CallLog Link is present in voice page","PASS",runManagerInfoObj);
				if(cnf.JSClick(CallLogink,driver)){
					repfn.FnUpdateTestStepResHTML("Verify CallLog Link is Clicked ","CallLog Link is Clicked","PASS",runManagerInfoObj);
					Thread.sleep(3000);

					if(cnf.FnExplicitWait("XPATH", "//div[@class='panel-heading call-log-panel']",driver))
					{
						repfn.FnUpdateTestStepResHTML("Verify CallLog  Page is Loaded "," CallLog  Page is Loaded","PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify  CallLog  Page is Loaded "," CallLog  Page is Loaded","FAIL",runManagerInfoObj);
						blnFlag=false;
					}

				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Call Log Link is Clicked ","Call Log  is not Clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify CallLog Link is present in voice page ","CallLog Link is not  present in voice page","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verify Call Log Link is Clicked ","Call Log  Link is not Clicked due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean CallLog_Export_DialedCall(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{

		try{


			if(cnf.FnExplicitWait("XPATH", mbo.ExportCalls_MissedCalls,driver)){
				repfn.FnUpdateTestStepResHTML("Check whether Export Missed Calls CheckBox is displayed", "Export Missed Calls CheckBox is displayed","PASS",runManagerInfoObj);
				blnFlag	=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Export Missed Calls CheckBox is displayed", "Export Missed Calls CheckBox is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
			if(cnf.FnExplicitWait("XPATH", mbo.ExportCalls_DailledCalls,driver)){
				repfn.FnUpdateTestStepResHTML("Check whether Export Dialled Calls CheckBox is displayed", "Export Dialled Calls CheckBox is displayed","PASS",runManagerInfoObj);
				blnFlag	=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Export Dialled Calls CheckBox is displayed", "Export Dialled Calls CheckBox is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
			if(cnf.FnExplicitWait("XPATH", mbo.ExportCalls_ReceivedCalls,driver)){
				repfn.FnUpdateTestStepResHTML("Check whether Export Received Calls CheckBox is displayed", "Export Received Calls CheckBox is displayed","PASS",runManagerInfoObj);
				blnFlag	=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Export Received Calls CheckBox is displayed", "Export Received Calls CheckBox is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
			//UnCheck Missed Calls Check Box
			if(cnf.FnExplicitWait("XPATH", mbo.ExportCalls_MissedCalls,driver)){
				WebElement ExportCalls_MissedCalls=driver.findElement(By.xpath(mbo.ExportCalls_MissedCalls));					
					if(cnf.JSClick(ExportCalls_MissedCalls,driver)){
						repfn.FnUpdateTestStepResHTML("Verify Export Missed Calls CheckBox is unchecked", "Export Missed Calls CheckBox is unchecked","PASS",runManagerInfoObj);
						blnFlag	=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Export Missed Calls CheckBox is unchecked", "Export Missed Calls CheckBox is not unchecked","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Export Missed Calls CheckBox is displayed", "Export Missed Calls CheckBox is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
			//UnCheck Received Calls Check Box
			if(cnf.FnExplicitWait("XPATH", mbo.ExportCalls_ReceivedCalls,driver)){
				WebElement ExportCalls_ReceivedCalls=driver.findElement(By.xpath(mbo.ExportCalls_ReceivedCalls));				
					if(cnf.JSClick(ExportCalls_ReceivedCalls,driver)){
						repfn.FnUpdateTestStepResHTML("Verify Export Received Calls CheckBox is unchecked", "Export Received Calls CheckBox is unchecked","PASS",runManagerInfoObj);
						blnFlag	=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Export Received Calls CheckBox is unchecked", "Export Received Calls CheckBox is not unchecked","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Check whether Export Received Calls CheckBox is displayed", "Export Received Calls CheckBox is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
			
		}
		catch(Exception e)
		{
			blnFlag	=false;
			repfn.FnUpdateTestStepResHTML("Check whether Export Dialled Calls are displayed and clicked ", "Export Dialled Calls are not displayed and not clicked due to some exception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	

	public synchronized boolean fn_callLogBlockSave(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
	{

		try{
			
			if(cnf.FnExplicitWait("XPATH", mbo.Calllog_block,driver))
			{
				repfn.FnUpdateTestStepResHTML("Verify whether Block link is getting displayed", "Block link is getting displayed ","PASS",runManagerInfoObj);
				WebElement BlockMessages=driver.findElement(By.xpath(mbo.Calllog_block));
				if(cnf.JSClick(BlockMessages,driver)){
					repfn.FnUpdateTestStepResHTML("Verify whether Block link is clicked", "Block link is clicked ","PASS",runManagerInfoObj);
					blnFlag=FN_ConfirmationPop_Saveclick(driver,runManagerInfoObj);
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify whether Block link is clicked", "Block link is not clicked ","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else if(cnf.FnExplicitWait("XPATH", mbo.Calllog_Unblock,driver)){
				repfn.FnUpdateTestStepResHTML("Verify whether Block link is getting displayed", "Block link is not getting displayed. Contact is already blocked","PASS",runManagerInfoObj);
				WebElement Calllog_Unblock=driver.findElement(By.xpath(mbo.Calllog_Unblock));
				if(cnf.JSClick(Calllog_Unblock,driver)){
					repfn.FnUpdateTestStepResHTML("Verify whether UnBlock link is clicked", "UnBlock link is clicked to unblock the contact","PASS",runManagerInfoObj);
					Thread.sleep(5000);
					
					if(cnf.FnExplicitWait("XPATH", mbo.Calllog_block,driver))
					{
						repfn.FnUpdateTestStepResHTML("Verify whether Block link is getting displayed", "Block link is getting displayed ","PASS",runManagerInfoObj);
						WebElement BlockMessages=driver.findElement(By.xpath(mbo.Calllog_block));
						if(cnf.JSClick(BlockMessages,driver)){
							repfn.FnUpdateTestStepResHTML("Verify whether Block link is clicked", "Block link is clicked ","PASS",runManagerInfoObj);
							blnFlag=FN_ConfirmationPop_Saveclick(driver,runManagerInfoObj);
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify whether Block link is clicked", "Block link is not clicked ","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else
					{
						repfn.FnUpdateTestStepResHTML("Verify whether Block link is getting displayed", "Block link is not  getting displayed  ","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify whether UnBlock link is clicked", "UnBlock link is not clicked to unblock the contact","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verify the user is able to block the unsaved contacts and save", "The user is  not able to block the unsaved contacts and save due to some exception","FAIL",runManagerInfoObj);		
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}



	public synchronized boolean FN_DiectoryListChecking(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		try{

			if(cnf.FnExplicitWait("Xpath", mbo.DirectoryListHeading,driver)){
				WebElement DirectoryListHeading=driver.findElement(By.xpath(mbo.DirectoryListHeading));
				if(DirectoryListHeading.getAttribute("textContent").equalsIgnoreCase("Directory Listing")){
					repfn.FnUpdateTestStepResHTML("Verify \'Directory Listing\' section is displayed ", "\'Directory Listing\' section is displayed ","PASS",runManagerInfoObj);
					
					if(cnf.FnExplicitWait("Xpath", mbo.DirectoryList,driver)){
						WebElement DirectoryList=driver.findElement(By.xpath(mbo.DirectoryList));
						repfn.FnUpdateTestStepResHTML("Verify Directory List address is displayed","Directory List address is displayed"+DirectoryList.getText(),"PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Directory List address is displayed","Directory List address is not displayed","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify \'Directory Listing\' section is displayed ", "\'Directory Listing\' section is not displayed ","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify \'Directory Listing\' heading is displayed ", "\'Directory Listing\' heading is not displayed ","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify Directory List address is displayed","Directory List address is not displayed due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	

	public synchronized boolean FN_RemovePhoneLine_CancelButtonClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{

			if(cnf.FnExplicitWait("XPATH", mbo.RemovePopup,driver)){
				repfn.FnUpdateTestStepResHTML("Verify RemovePopup is displayed "," RemovePopup is displayed","PASS",runManagerInfoObj);
				WebElement Cancelbtn=driver.findElement(By.xpath(mbo.RemovePopupCancelbtn));
				if(cnf.FnExplicitWait("XPATH", mbo.RemovePopupCancelbtn,driver)){
					cnf.ElementClick(Cancelbtn,driver); 
					repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked ","Cancel button is clicked","PASS",runManagerInfoObj);

					if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
						repfn.FnUpdateTestStepResHTML("Verify ManageDetailpopup is displayed "," ManageDetailpopup is displayed","PASS",runManagerInfoObj);
						cnf.FnExplicitWait("Xpath", mbo.RemoveAssignmentBtn,driver);
						WebElement RemoveAssignmentBtn=driver.findElement(By.xpath(mbo.RemoveAssignmentBtn));
						if(RemoveAssignmentBtn.isDisplayed()){
							repfn.FnUpdateTestStepResHTML("Verify RemoveAssignmentBtn is displayed ","RemoveAssignmentBtn is displayed ","PASS",runManagerInfoObj);
							blnFlag=true;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify RemoveAssignmentBtn is displayed ","RemoveAssignmentBtn is  not displayed ","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify  ManageDetailpopup is displayed "," ManageDetailpopup is not displayed","FAIL",runManagerInfoObj);
						blnFlag=false;
					}

				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked ","Cancel button is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify  RemovePopup is displayed "," RemovePopup is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify RemoveAssignmentBtn is displayed ","RemoveAssignmentBtn is not displayed due to some exception ","FAIL",runManagerInfoObj);

			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}



	public synchronized boolean FN_NewAssignMentLinkPresenceCheck(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{

			if(cnf.FnExplicitWait("Xpath", mbo.AddNewAssignmentLine,driver)){
			WebElement AddNewAssignmentLine=driver.findElement(By.xpath(mbo.AddNewAssignmentLine));
			if(AddNewAssignmentLine.isDisplayed()){
				repfn.FnUpdateTestStepResHTML("Verify AddNewAssignmentLine is displayed","AddNewAssignmentLine is displayed","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify AddNewAssignmentLine is displayed","AddNewAssignmentLine is not  displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else{
			blnFlag=false;
		}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify the presence of cancel button","Cancel button is not present","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	public synchronized boolean FN_VerifyUnassignedPhoneNumber(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{

			if(cnf.FnExplicitWait("Xpath", mbo.UnassignedContactList,driver)){
				repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is removed ","AssignmentLine is removed","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is removed ","AssignmentLine is not  removed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is removed ","AssignmentLine is not  removed due to some exception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	
	public synchronized boolean fnForgot_Password(WebDriver driver,RunManagerInfo runManagerInfoObj) throws InterruptedException
	{
		try
		{
			boolean blnFlag = false;
			accountNumber = m1.get("AccountNumber").toString();
			securityCode = m1.get("SecurityCode").toString();
	
			forgotPasswordCM(driver,runManagerInfoObj);
			cnf.FnExplicitWait("XPATH", mbo.accountNumber,driver);
			WebElement accountNumberField = driver.findElement(By.xpath(mbo.accountNumber));
			WebElement recoveryOption = driver.findElement(By.xpath(mbo.recoveryOption));
			WebElement requiredText = driver.findElement(By.xpath(mbo.requiredText));
			WebElement description = driver.findElement(By.xpath(mbo.description));
			WebElement selectRecoveryOption = driver.findElement(By.xpath(mbo.selectRecoveryOption));
			WebElement usernameRadioButton = driver.findElement(By.xpath(mbo.usernameRadioButton));
			WebElement passwordRadioButton = driver.findElement(By.xpath(mbo.passwordRadioButton));
			WebElement securityCode = driver.findElement(By.xpath(mbo.securityCode));
			WebElement cancelButton = driver.findElement(By.xpath(mbo.cancelButton));
			WebElement nextButton =driver.findElement(By.xpath(mbo.nextButton));
			WebElement spectrumBusinessLogo=driver.findElement(By.xpath(mbo.SpectrumLogoClick));
			if (recoveryOption.isDisplayed()) {
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Recovery Option & Credentials\" is displayed or not",
						"\"Recovery Option & Credentials\" text is displayed", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Recovery Option & Credentials\" is displayed or not",
						"\"Recovery Option & Credentials\" text is displayed", "FAIL",runManagerInfoObj);

			}
			if (requiredText.isDisplayed()) {
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"*Required\" is displayed or not",
						"\"*Required\" text is displayed", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"*Required\" is displayed or not",
						"\"*Required\" text is displayed", "FAIL",runManagerInfoObj);

			}
			if (description.isDisplayed()) {
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Description\" is displayed or not",
						"\"Description\" text is displayed", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Description\" is displayed or not",
						"\"Description\" text is displayed", "FAIL",runManagerInfoObj);

			}
			if (selectRecoveryOption.isDisplayed()) {
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Select Recovery option\" is displayed or not",
						"\"Select Recovery option\" text is displayed", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Select Recovery option\" is displayed or not",
						"\"Select Recovery option\" text is displayed", "FAIL",runManagerInfoObj);

			}
			if (usernameRadioButton.isDisplayed()) {
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Username\" is displayed or not",
						"\"Username\" text is displayed", "PASS",runManagerInfoObj);


			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Username\" is displayed or not",
						"\"Username\" text is displayed", "FAIL",runManagerInfoObj);


			}
			if (securityCode.isDisplayed()) {
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Security Code\" is displayed or not",
						"\"Security Code\" text is displayed", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Security Code\" is displayed or not",
						"\"Security Code\" text is displayed", "FAIL",runManagerInfoObj);

			}
			if (cancelButton.isDisplayed()) {
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Cancel\" is displayed or not",
						"\"Cancel\" text is displayed", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Cancel\" is displayed or not",
						"\"Cancel\" text is displayed", "FAIL",runManagerInfoObj);

			}
			if (nextButton.isDisplayed()) {
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Next\" is displayed or not",
						"\"Next\" text is displayed", "PASS",runManagerInfoObj);


			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the text \"Next\" is displayed or not",
						"\"Next\" text is displayed", "FAIL",runManagerInfoObj);


			}
			if (spectrumBusinessLogo.isDisplayed()) {
				blnFlag=true;
				cnf.JSClick(spectrumBusinessLogo,driver); 
				repfn.FnUpdateTestStepResHTML(
						"Verify the page is redirected to home page",
						"Returned to home page", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the page is redirected to home page",
						"Returned to home page", "FAIL",runManagerInfoObj);

			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify if user is able to view forgot password page"," User is not able to view forgot password page due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	public synchronized boolean fnForgot_Password_Recover_Username(WebDriver driver,RunManagerInfo runManagerInfoObj) throws InterruptedException
	{
		try
		{
			blnFlag=false;
			forgotPasswordCM(driver,runManagerInfoObj);
			accountNumber = m1.get("AccountNumber").toString();
			securityCode = m1.get("SecurityCode").toString();
			if (cnf.FnExplicitWait("XPATH", mbo.accountNumber,driver)) {

				System.out.println("Account Number:" + accountNumber);
				// WebElement accountNumberField =
				// driver.findElement(By.xpath("//input[@id='accountNumber']"));
				cnf.FnSetWebEdit(mbo.accountNumber, accountNumber,driver);
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Enter the Account Number: "
						+ accountNumber, " Account Number is entered", "PASS",runManagerInfoObj);
			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Enter the Account Number: "
						+ accountNumber, " Account Number is entered", "FAIL",runManagerInfoObj);
			}
			if (cnf.FnExplicitWait("XPATH", mbo.securityCode,driver)) {
				blnFlag=true;
				cnf.FnSetWebEdit(mbo.securityCode, securityCode,driver);
				repfn.FnUpdateTestStepResHTML("Enter the Security code ",
						" Security code is entered", "PASS",runManagerInfoObj);
			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Enter the Security code ",
						" Security code is entered", "FAIL",runManagerInfoObj);
			}
			if (cnf.FnExplicitWait("XPATH", mbo.cancelButton,driver)) {
				WebElement cancelButton = driver.findElement(By.xpath(mbo.cancelButton));
				cnf.JSClick(cancelButton,driver);
				Thread.sleep(4000);
				Alert alert = driver.switchTo().alert();
				Thread.sleep(4000);
				alert.accept();

				repfn.FnUpdateTestStepResHTML(
						"Cancelling the entered account number and security code",
						" Account number and security code is cancelled", "PASS",runManagerInfoObj);
				blnFlag=true;

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Cancelling the entered account number and security code",
						" Account number and security code is cancelled", "FAIL",runManagerInfoObj);
			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify if user is able recover the username and cancel "," User is not able to recover username and cancel due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	public synchronized boolean fnForgot_Password_Recover_Password(WebDriver driver,RunManagerInfo runManagerInfoObj) throws InterruptedException
	{
		try
		{

			blnFlag=false;
			forgotPasswordCM(driver,runManagerInfoObj);
			accountNumber = m1.get("AccountNumber").toString();
			securityCode = m1.get("SecurityCode").toString();
			if (cnf.FnExplicitWait("XPATH", mbo.passwordRadioButton,driver)) {
				WebElement passwordRadioButton = driver.findElement(By.xpath(mbo.passwordRadioButton));
				blnFlag = cnf.JSClick(passwordRadioButton,driver);
				repfn.FnUpdateTestStepResHTML("Verify Reset password option is clicked "," Reset Password option is clicked", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify Reset password option is clicked ",
						" Reset Password option is clicked", "FAIL",runManagerInfoObj);
			}
			//System.out.println("App Env: " + AppEnvironment);
			if (cnf.FnExplicitWait("XPATH", mbo.accountNumber,driver)) 
			{
				// WebElement accountNumberField =
				// driver.findElement(By.xpath("//input[@id='accountNumber']"));
				blnFlag=true;
				cnf.FnSetWebEdit(mbo.accountNumber, accountNumber,driver);
				repfn.FnUpdateTestStepResHTML("Enter the Account Number: "
						+ accountNumber, " Account Number is entered", "PASS",runManagerInfoObj);
			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Enter the Account Number: "
						+ accountNumber, " Account Number is entered", "FAIL",runManagerInfoObj);
			}
			if (cnf.FnExplicitWait("XPATH", mbo.securityCode,driver)) {
				blnFlag=false;
				cnf.FnSetWebEdit(mbo.securityCode, securityCode,driver);
				repfn.FnUpdateTestStepResHTML("Enter the Security code ",
						" Security code is entered", "PASS",runManagerInfoObj);
			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Enter the Security code ",
						" Security code is entered", "FAIL",runManagerInfoObj);
			}
			if (cnf.FnExplicitWait("XPATH", mbo.cancelButton,driver)) {
				WebElement cancelButton = driver.findElement(By.xpath(mbo.cancelButton));
				cnf.JSClick(cancelButton,driver);
				Thread.sleep(2000);
				Alert alert = driver.switchTo().alert();
				Thread.sleep(2000);
				alert.accept();
				repfn.FnUpdateTestStepResHTML(
						"Cancelling the entered account number and security code",
						" Account number and security code is cancelled", "PASS",runManagerInfoObj);
				blnFlag=true;
			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Cancelling the entered account number and security code",
						" Account number and security code is cancelled", "FAIL",runManagerInfoObj);
			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify if user is able recover the password and cancel "," User is not able to recover password and cancel due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	public synchronized boolean fnForgot_Password_Username_InvalidEmail(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception {
		try
		{
			forgotPasswordCM(driver,runManagerInfoObj);
			accountNumber = m1.get("AccountNumber").toString();
			securityCode = m1.get("SecurityCode").toString();
			//System.out.println("App Env: " + AppEnvironment);
			if (cnf.FnExplicitWait("XPATH", mbo.accountNumber,driver)) {
				blnFlag=true;

				System.out.println("Account Number:" + accountNumber);
				cnf.FnSetWebEdit(mbo.accountNumber, accountNumber,driver);
				repfn.FnUpdateTestStepResHTML("Enter the Account Number: "
						+ accountNumber, " Account Number is entered", "PASS",runManagerInfoObj);
			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Enter the Account Number: "
						+ accountNumber, " Account Number is entered", "FAIL",runManagerInfoObj);
			}
			if (cnf.FnExplicitWait("XPATH", mbo.securityCode,driver)) {
				blnFlag=true;
				cnf.FnSetWebEdit(mbo.securityCode, securityCode,driver);
				repfn.FnUpdateTestStepResHTML("Enter the Security code ",
						" Security code is entered", "PASS",runManagerInfoObj);
			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Enter the Security code ",
						" Security code is entered", "FAIL",runManagerInfoObj);
			}
			if (cnf.FnExplicitWait("XPATH", mbo.nextButton,driver)) {
				blnFlag=true;
				WebElement nextButton = driver
						.findElement(By.xpath(mbo.nextButton));
				cnf.JSClick(nextButton,driver);

				repfn.FnUpdateTestStepResHTML("Clicking the next button",
						" Next button is clicked", "PASS",runManagerInfoObj);

				Thread.sleep(4000);
				try
				{
					if (cnf.FnExplicitWait("XPATH", mbo.accountNotFound,driver)) {
						WebElement accountNF = driver.findElement(By
								.xpath(mbo.accountNotFound));
						if (accountNF.isDisplayed()) {
							blnFlag=true;
							repfn.FnUpdateTestStepResHTML(
									"Check whether Account not found is displayed for invalid email",
									" Account not found is displayed", "PASS",runManagerInfoObj);
						} else {
							blnFlag=false;
							repfn.FnUpdateTestStepResHTML(
									"Check whether Account not found is displayed for invalid email",
									" Account not found is displayed", "FAIL",runManagerInfoObj);
						}
					}
				}
				catch(Exception e)
				{
					if (cnf.FnExplicitWait("XPATH", mbo.captchaRequired,driver)) {
						WebElement captchaRequired = driver.findElement(By
								.xpath(mbo.accountNotFound));
						if (captchaRequired.isDisplayed()) {
							blnFlag=true;
							repfn.FnUpdateTestStepResHTML(
									"Check whether Account not found is displayed for invalid email",
									" Account not found is displayed", "PASS",runManagerInfoObj);
						} else {
							blnFlag=false;
							repfn.FnUpdateTestStepResHTML(
									"Check whether Account not found is displayed for invalid email",
									" Account not found is displayed", "FAIL",runManagerInfoObj);
						}
					}
					System.out.println(e.getMessage());
				}

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Clicking the next button",
						" Next button is clicked", "FAIL",runManagerInfoObj);
			}
			WebElement spectrumBusinessLogo = driver.findElement(By
					.xpath(mbo.SpectrumLogoClick));
			if (spectrumBusinessLogo.isDisplayed()) {
				blnFlag=true;
				cnf.JSClick(spectrumBusinessLogo,driver); 
				repfn.FnUpdateTestStepResHTML(
						"Verify the page is redirected to home page",
						"Returned to home page", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the page is redirected to home page",
						"Returned to home page", "FAIL",runManagerInfoObj);

			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify if proper error message is displayed for invalid account number"," Error message is not displayed due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	public synchronized boolean fnForgot_Password_InvalidEmail(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception {
		try
		{
			forgotPasswordCM(driver,runManagerInfoObj);
			accountNumber = m1.get("AccountNumber").toString();
			securityCode = m1.get("SecurityCode").toString();
			if (cnf.FnExplicitWait("XPATH", mbo.passwordRadioButton,driver)) {
				WebElement passwordRadioButton = driver.findElement(By
						.xpath(mbo.passwordRadioButton));
				blnFlag = cnf.JSClick(passwordRadioButton,driver);
				repfn.FnUpdateTestStepResHTML(
						"Verify Reset password option is clicked ",
						" Reset Password option is clicked", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify Reset password option is clicked ",
						" Reset Password option is clicked", "FAIL",runManagerInfoObj);
			}
			//System.out.println("App Env: " + AppEnvironment);
			if (cnf.FnExplicitWait("XPATH", mbo.accountNumber,driver)) {
				blnFlag=true;
				cnf.FnSetWebEdit(mbo.accountNumber, accountNumber,driver);
				repfn.FnUpdateTestStepResHTML("Enter the Account Number: "
						+ accountNumber, " Account Number is entered", "PASS",runManagerInfoObj);
			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Enter the Account Number: "
						+ accountNumber, " Account Number is entered", "FAIL",runManagerInfoObj);
			}
			if (cnf.FnExplicitWait("XPATH", mbo.securityCode,driver)) {
				blnFlag=true;
				cnf.FnSetWebEdit(mbo.securityCode, securityCode,driver);
				repfn.FnUpdateTestStepResHTML("Enter the Security code ",
						" Security code is entered", "PASS",runManagerInfoObj);
			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Enter the Security code ",
						" Security code is entered", "FAIL",runManagerInfoObj);
			}
			if (cnf.FnExplicitWait("XPATH", mbo.nextButton,driver)) {
				WebElement nextButton = driver.findElement(By
						.xpath(mbo.nextButton));
				cnf.JSClick(nextButton,driver);
				Thread.sleep(4000);
				try
				{
					if (cnf.FnExplicitWait("XPATH", mbo.accountNotFound,driver)) {
						WebElement accountNF = driver.findElement(By
								.xpath(mbo.accountNotFound));
						if (accountNF.isDisplayed()) {
							blnFlag=true;
							repfn.FnUpdateTestStepResHTML(
									"Check whether Account not found is displayed",
									" Account not found is displayed", "PASS",runManagerInfoObj);
						} else {
							blnFlag=false;
							repfn.FnUpdateTestStepResHTML(
									"Check whether Account not found is displayed",
									" Account not found is displayed", "FAIL",runManagerInfoObj);
						}
					}
				}
				catch(Exception e)
				{
					if (cnf.FnExplicitWait("XPATH", mbo.captchaRequired,driver)) {
						WebElement captchaRequired = driver.findElement(By
								.xpath(mbo.accountNotFound));
						if (captchaRequired.isDisplayed()) {
							blnFlag=true;
							repfn.FnUpdateTestStepResHTML(
									"Check whether Account not found is displayed",
									" Account not found is displayed", "PASS",runManagerInfoObj);
						} else {
							blnFlag=false;
							repfn.FnUpdateTestStepResHTML(
									"Check whether Account not found is displayed",
									" Account not found is displayed", "FAIL",runManagerInfoObj);
						}
					}
					System.out.println(e.getMessage());
				}
			} else {
				repfn.FnUpdateTestStepResHTML("Clicking the next button",
						" Next button is clicked", "FAIL",runManagerInfoObj);
			}
			WebElement spectrumBusinessLogo = driver.findElement(By
					.xpath(mbo.SpectrumLogoClick));
			if (spectrumBusinessLogo.isDisplayed()) {
				blnFlag=true;
				cnf.JSClick(spectrumBusinessLogo,driver); 
				repfn.FnUpdateTestStepResHTML(
						"Verify the page is redirected to home page",
						"Returned to home page", "PASS",runManagerInfoObj);

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Verify the page is redirected to home page",
						"Returned to home page", "FAIL",runManagerInfoObj);

			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify if proper error message is displayed for incorrect account number","Error message is not displayed due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	public void forgotPasswordCM(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			System.out.println("Check Forgot: "+ cnf.FnExplicitWait("XPATH", mbo.forgotPasswordLink,driver));
			if (cnf.FnExplicitWait("XPATH", mbo.forgotPasswordLink,driver)) {
				repfn.FnUpdateTestStepResHTML("Verify Forgot Password Link is displayed", "Forgot Password Link is displayed", "PASS",runManagerInfoObj);
				WebElement forgotPassword = driver.findElement(By.xpath(mbo.forgotPasswordLink));
				if(cnf.JSClick(forgotPassword,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Forgot Password Link is clicked", "Forgot Password Link is clicked", "PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Forgot Password Link is clicked", "Forgot Password Link is not clicked", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}

			} else {
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Launch password recovery page ", "Recovery page is launched", "FAIL",runManagerInfoObj);
			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Check Whether the execution is throwing exception or not"," Execution failed due to some exception", "FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
	}

	

	
	public synchronized boolean ContactsUI_Edit(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{



			driver.manage().window().maximize();

			WebElement VoiceTile=driver.findElement(By.xpath(mbo.Voice_VoiceTile));

			if(VoiceTile.isDisplayed()){
				repfn.FnUpdateTestStepResHTML("Verify if Voice tile  is present","Voice tile is present","PASS",runManagerInfoObj);
				cnf.JSClick(VoiceTile,driver);


				WebElement ContactsLink=driver.findElement(By.xpath(mbo.Contacts_UI));
				cnf.JSClick(ContactsLink,driver);

									List <WebElement> ContactsList=driver.findElements(By.xpath(mbo.Contact));
							repfn.FnUpdateTestStepResHTML("Verify if Voice messages are displayed","Voice messages are displayed","PASS",runManagerInfoObj);

						WebElement lastcontact = Iterables.getLast(ContactsList,driver.findElement(By.xpath(mbo.Contact)));
						lastcontact.click();

				//Thread.sleep(1000);

				cnf.FnExplicitWait("XPATH",mbo.Contact_Click,driver);
				WebElement ContactClick=driver.findElement(By.xpath(mbo.Contact_Click));
				cnf.JSClick(ContactClick,driver);



				WebElement EditLink=driver.findElement(By.xpath(mbo.Edit));
				//EditLink.click();
				cnf.JSClick(EditLink,driver);
				WebElement ContactName=driver.findElement(By.xpath(mbo.Contact_Name));

				if(ContactName.isDisplayed())
				{
					repfn.FnUpdateTestStepResHTML("Verify if ContactName  is present","ContactName is present","PASS",runManagerInfoObj);
				}
				else 
				{
					repfn.FnUpdateTestStepResHTML("Verify if ContactName  is present","ContactName is not present","FAIL",runManagerInfoObj);

				}
				WebElement FirstName=driver.findElement(By.xpath(mbo.FirstName));

				if(FirstName.isDisplayed())
				{
					repfn.FnUpdateTestStepResHTML("Verify if FirstName  is present","FirstName is present","PASS",runManagerInfoObj);
				}
				else 
				{
					repfn.FnUpdateTestStepResHTML("Verify if FirstName  is present","FirstName is not present","FAIL",runManagerInfoObj);

				}

				WebElement Role=driver.findElement(By.xpath(mbo.Role));
				if(Role.isDisplayed())
				{
					repfn.FnUpdateTestStepResHTML("Verify if Role  is present","Role is present","PASS",runManagerInfoObj);
				}
				else 
				{
					repfn.FnUpdateTestStepResHTML("Verify if Role  is present","Role is not present","FAIL",runManagerInfoObj);

				}
				WebElement Organization=driver.findElement(By.xpath(mbo.Organization));
				if(Organization.isDisplayed())
				{
					repfn.FnUpdateTestStepResHTML("Verify if Organization  is present","Organization is present","PASS",runManagerInfoObj);
				}
				else 
				{
					repfn.FnUpdateTestStepResHTML("Verify if Organization  is present","Organization is not present","FAIL",runManagerInfoObj);

				}
				WebElement Phone_Email_Address=driver.findElement(By.xpath(mbo.Phone_Email_Address));
				if(Phone_Email_Address.isDisplayed())
				{
					repfn.FnUpdateTestStepResHTML("Verify if Phone_Email_Address  is present","Phone_Email_Address is present","PASS",runManagerInfoObj);
				}
				else 
				{
					repfn.FnUpdateTestStepResHTML("Verify if Phone_Email_Address  is present","Phone_Email_Address is not present","FAIL",runManagerInfoObj);

				}

				WebElement Phone_Work=driver.findElement(By.xpath(mbo.Phone_Work));
				if(Phone_Work.isDisplayed())
				{
					repfn.FnUpdateTestStepResHTML("Verify if Phone_Work  is present","Phone_Work is present","PASS",runManagerInfoObj);
				}
				else 
				{
					repfn.FnUpdateTestStepResHTML("Verify if Phone_Work  is present","Phone_Work is not present","FAIL",runManagerInfoObj);

				}
				WebElement phoneNumber=driver.findElement(By.xpath(mbo.phone_Number));
				if(Phone_Work.isDisplayed())
				{
					repfn.FnUpdateTestStepResHTML("Verify if phone-Number  is present","phone-Number is present","PASS",runManagerInfoObj);
				}
				else 
				{
					repfn.FnUpdateTestStepResHTML("Verify if phone-Number  is present","phone-Number is not present","FAIL",runManagerInfoObj);

				}

				WebElement Email_Idr=driver.findElement(By.xpath(mbo.Email_Id));
				if(Phone_Work.isDisplayed())
				{
					repfn.FnUpdateTestStepResHTML("Verify if Email_Id  is present","Email_Id is present","PASS",runManagerInfoObj);
				}
				else 
				{
					repfn.FnUpdateTestStepResHTML("Verify if Email_Id  is present","Email_Id is not present","FAIL",runManagerInfoObj);

				}

				WebElement Address= driver.findElement(By.xpath(mbo.Address_ContactsUI));
				if(Address.isDisplayed())
				{
					repfn.FnUpdateTestStepResHTML("Verify if Address  is present","Address is present","PASS",runManagerInfoObj);
				}
				else 
				{
					repfn.FnUpdateTestStepResHTML("Verify if Address  is present","Address is not present","FAIL",runManagerInfoObj);

				}


			}		

		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}



	public synchronized boolean DeletFaxMessages_Cancel(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
	{

		boolean blnFlag=false;
		try
		{
			Thread.sleep(5000);
			
			if(cnf.FnExplicitWait("Xpath", mbo.Voice_FaxMessageList,driver)){
				repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are displayed","PASS",runManagerInfoObj);
				List <WebElement> FaxMessageList=driver.findElements(By.xpath(mbo.Voice_FaxMessageList));
				WebElement one = Iterables.getFirst(FaxMessageList,driver.findElement(By.xpath(mbo.Voice_FaxMessageList)));
				if(cnf.JSClick(one,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Click on the first Fax Message", "First Fax Message in the list is clicked", "PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH",mbo.Fax_Delete,driver)){
						repfn.FnUpdateTestStepResHTML("Verify if Delete link is present","Delete link is present","PASS",runManagerInfoObj);
						WebElement Delete = driver.findElement(By.xpath(mbo.Fax_Delete));
						if(cnf.JSClick(Delete,driver)){
							repfn.FnUpdateTestStepResHTML("Verify if Delete link is clicked","Delete link is clicked","PASS",runManagerInfoObj);
							Thread.sleep(500);
							
							if(cnf.FnExplicitWait("XPATH",mbo.DeleteConfrmPopup,driver)){
								repfn.FnUpdateTestStepResHTML("Verify if Delete Confirmation Pop up is displayed","Delete Confirmation Pop up is displayed","PASS",runManagerInfoObj);
								if(cnf.FnExplicitWait("XPATH",mbo.Delete_CancelButton,driver)){
									repfn.FnUpdateTestStepResHTML("Verify if Cancel option is displayed in pop-up","Cancel option is displayed in pop-up","PASS",runManagerInfoObj);
									WebElement Cancel = driver.findElement(By.xpath(mbo.Delete_CancelButton));
									if(cnf.JSClick(Cancel,driver)){
										repfn.FnUpdateTestStepResHTML("Verify if Cancel option is clicked","Cancel option is clicked","PASS",runManagerInfoObj);
										blnFlag	=true;
										Thread.sleep(3000);
									}
									else{
										repfn.FnUpdateTestStepResHTML("Verify if Cancel option is clicked","Cancel option is not clicked","FAIL",runManagerInfoObj);
										blnFlag	=false;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify if Cancel option is displayed in pop-up","Cancel option is not displayed in pop-up","FAIL",runManagerInfoObj);
									blnFlag	=false;
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify if Delete Confirmation Pop up is displayed","Delete Confirmation Pop up is not displayed","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify if Delete link is clicked","Delete link is not clicked","FAIL",runManagerInfoObj);
							blnFlag	=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if Delete link  is present","Delete link is not present","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Click on the first Fax Message", "First Fax Message in the list is not clicked", "FAIL",runManagerInfoObj);
					blnFlag	=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
		
		}


		catch(Exception e)
		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verify user is  able to  cancel the delete pop fax messages","User is not  able to  cancel the delete pop delete fax messages","FAIL",runManagerInfoObj);
			blnFlag	=false;

		}

		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}



	

	public synchronized boolean FN_NewAssignTEXTCHeck(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{

			cnf.FnExplicitWait("Xpath", mbo.NewAssignTEXT,driver);
			WebElement NewAssignTEXT=driver.findElement(By.xpath(mbo.NewAssignTEXT));
			String NewAssignText=NewAssignTEXT.getText();
			System.out.println( NewAssignTEXT.getText());
			if(NewAssignTEXT.isDisplayed()){

				repfn.FnUpdateTestStepResHTML("Verify NewAssignTEXT is displayed ","NewAssignTEXT is displayed ","PASS",runManagerInfoObj);
				FN_SaveButtonClick(driver,runManagerInfoObj);
				if(cnf.FnExplicitWait("Xpath", mbo.NewAssignTEXT,driver))
				{
				WebElement AssigmentText=driver.findElement(By.xpath(mbo.NewAssignTEXT));
				System.out.println(AssigmentText.getText());
				if(AssigmentText.getText().equals(NewAssignText))
				{
					repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is added Sucessfully","AssignmentLine is  added Sucessfully","PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_CancelBtn,driver))
					{
						WebElement Cancel=driver.findElement(By.xpath(mbo.ManageLine_CancelBtn));
						cnf.JSClick(Cancel,driver);
						if(cnf.FnExplicitWait("XPATH", mbo.Confirmbtn,driver))
						{
							WebElement Confirm=driver.findElement(By.xpath(mbo.Confirmbtn));
							cnf.JSClick(Confirm,driver);
							driver.navigate().refresh();
							blnFlag=true;

						}
			
					}
					//driver.navigate().refresh();
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is  added Sucessfully ","AssignmentLine is not  added Sucessfully","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				}
				else
				{
					repfn.FnUpdateTestStepResHTML("Verify if the Assignee line is saved", "Assignee line is not saved", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify NewAssignTEXTt is displayed ","NewAssignTEXT is not  displayed ","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is  added Sucessfully ","AssignmentLine is not  added Sucessfully due to some exception","FAIL",runManagerInfoObj);


			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean FN_ModifyNewLine_CancelButtonClick(WebDriver driver, RunManagerInfo runManagerInfoObj){
		try{
			WebElement Cancelbtn=driver.findElement(By.xpath(mbo.cancelbtn_ModifyAssignLine));
			if(cnf.FnExplicitWait("XPATH", mbo.cancelbtn_ModifyAssignLine,driver)){
				cnf.ElementClick(Cancelbtn,driver); 
				repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked ","Cancel button is clicked","PASS",runManagerInfoObj);
				blnFlag=true;
				//Confirmation popup
				blnFlag=FN_CancelConfirmPopup(driver,runManagerInfoObj);
				if(cnf.isElementExist(By.xpath(mbo.Confirmbtn),driver)){
					WebElement Confirmbtn=driver.findElement(By.xpath(mbo.Confirmbtn));
					
					cnf.JSClick(Confirmbtn,driver);
					repfn.FnUpdateTestStepResHTML("Verify confirm button is clicked "," confirm button is clicked","PASS",runManagerInfoObj);
					blnFlag=true;
				}



			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked ","Cancel button is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}



	public synchronized boolean FN_AddNeLineCancelVerification(WebDriver driver, RunManagerInfo runManagerInfoObj){
		try{
			cnf.FnExplicitWait("Xpath", mbo.AssigmentText,driver);
			WebElement AssigmentText=driver.findElement(By.xpath(mbo.AssigmentText));
			System.out.println(AssigmentText.getText());
			if(AssigmentText.getText().contains("--")){
				repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is added Sucessfully","AssignmentLine is  added Sucessfully","PASS",runManagerInfoObj);
				driver.navigate().refresh();
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is  added Sucessfully ","AssignmentLine is not  added Sucessfully","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is  added Sucessfully ","AssignmentLine is not  added Sucessfully due to some exception","FAIL",runManagerInfoObj);


			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	
	public synchronized boolean FnDeletFaxMessage(WebDriver driver, RunManagerInfo runManagerInfoObj) throws Exception
	{

		boolean blnFlag=false;
		try
		{

			List <WebElement> FaxMessageList=driver.findElements(By.xpath(mbo.Fax_ContactNameALL));
			if(FaxMessageList.size()>0){
				repfn.FnUpdateTestStepResHTML("Verify if Fax messages present or not","Fax messages are present","PASS",runManagerInfoObj);
				WebElement one = Iterables.getFirst(FaxMessageList,driver.findElement(By.xpath(mbo.Fax_ContactNameALL)));
				cnf.JSClick(one,driver);
				String deletedFax=one.getText();
				repfn.FnUpdateTestStepResHTML("Click on a fax message from the message list display","Fax message details section is expanded from Contact:"+one.getText(),"PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH",mbo.Voice_FaxDelete,driver)){
					WebElement Delete = driver.findElement(By.xpath(mbo.Voice_FaxDelete));


					repfn.FnUpdateTestStepResHTML("Verify if Delete link  is present","Delete link is present","PASS",runManagerInfoObj);
					cnf.JSClick(Delete,driver);

					repfn.FnUpdateTestStepResHTML("Verify if Delete link  is clicked or not","Delete link is clicked","PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH",mbo.DeleteConfrmPopup,driver)){
						WebElement ConformPopup = driver.findElement(By.xpath(mbo.DeleteConfrmPopup));

						repfn.FnUpdateTestStepResHTML("Verify if Delete Conforamtion Pop up is displayed","Conformation Pop up is displayed","PASS",runManagerInfoObj);

						if(cnf.FnExplicitWait("XPATH",mbo.Voice_ConfirmPopup,driver)){
							WebElement Confirm = driver.findElement(By.xpath(mbo.Voice_ConfirmPopup));

							cnf.JSClick(Confirm,driver);
							repfn.FnUpdateTestStepResHTML("Verify clicked on confirm button","Confirm button is clicked","PASS",runManagerInfoObj);
							List <WebElement> FaxMessageListNew=driver.findElements(By.xpath(mbo.Fax_ContactNameALL));
							for(WebElement msg:FaxMessageListNew)
							{
								if(msg.getText().equalsIgnoreCase(deletedFax))
								{
									blnFlag=true;
									break;
								}
							}
							if(!blnFlag)
							{
								repfn.FnUpdateTestStepResHTML("Verify if FAX message has been deleted","Fax message deleted","PASS",runManagerInfoObj);
								blnFlag=true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify if FAX message has been deleted","Fax message not deleted","FAIL",runManagerInfoObj);
								blnFlag=false;

							}
						}else{
							repfn.FnUpdateTestStepResHTML("Verify confirm button is present or not","Confirm button is not present","FAIL",runManagerInfoObj);
							blnFlag=false;
						}


					}else{
						repfn.FnUpdateTestStepResHTML("Verify if Delete Confirmation Pop up is displayed"," Delete Conforamtion Pop up is displayed","FAIL",runManagerInfoObj);

						blnFlag=false;
					}

				}else{
					repfn.FnUpdateTestStepResHTML("Verify if Delete link  is present","Delete link is not present","FAIL",runManagerInfoObj);
					blnFlag=false;

				}

			}else{

				repfn.FnUpdateTestStepResHTML("Verify if Fax messages are presnt","Fax messages not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}



		}
		catch(Exception e)
		{


			repfn.FnUpdateTestStepResHTML("Verifying if the user is able to delete fax messages from the message list.", "user is not able to delete fax messages from the message list due to some exception","FAIL",runManagerInfoObj);
			blnFlag	=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		driver.navigate().refresh();
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}



	public synchronized boolean FnBlockContactFax(WebDriver driver, RunManagerInfo runManagerInfoObj)
	{
		boolean blnFlag=false;
		try
		{
			if(cnf.FnExplicitWait("XPATH", mbo.Fax_ContactNameALL,driver)){

				List<WebElement> ContactName = driver.findElements(By.xpath(mbo.Fax_ContactNameALL));
				List<WebElement> ContactNames=new ArrayList<WebElement>();
				if(ContactName.size()>0){

					for(WebElement Contact:ContactName){
						if(Contact.getText().contains("("))
						{	
							ContactNames.add(Contact);
						}
					}


					if(ContactNames.size()>0)
					{
						repfn.FnUpdateTestStepResHTML("Verify if Fax messages present for Unsaved contact","Fax message present for Unsaved contact"+ContactNames.get(0).getText(),"PASS",runManagerInfoObj);
						System.out.println("Conatct present::::"+ContactNames.get(0).getText());
						cnf.JSClick(ContactNames.get(0),driver);
						repfn.FnUpdateTestStepResHTML("Verify if Fax message  is clicked","Fax message is clicked","PASS",runManagerInfoObj);

						if(cnf.FnExplicitWait("XPATH", mbo.Voice_BlockMessages,driver)){
							WebElement BlockLink=driver.findElement(By.xpath(mbo.Voice_BlockMessages));
							repfn.FnUpdateTestStepResHTML("Check Whether Block link is present ", "Block link is present","PASS",runManagerInfoObj);
							if(cnf.JSClick(BlockLink,driver)){

							repfn.FnUpdateTestStepResHTML("Check Whether Block link is clicked or not ", "Block link is clicked","PASS",runManagerInfoObj);
							if(cnf.FnExplicitWait("XPATH", mbo.Voice_ConfirmPopup,driver)){
								WebElement ConfirmMessage=driver.findElement(By.xpath(mbo.Voice_ConfirmPopup));
								repfn.FnUpdateTestStepResHTML("Check Whether confirmatipn popup displayed or not ", "confirmatipn popup is displayed","PASS",runManagerInfoObj);
								if(cnf.JSClick(ConfirmMessage,driver)){
								repfn.FnUpdateTestStepResHTML("Check Whether confirm button clicked or not ", "Confirm button is clicked","PASS",runManagerInfoObj);
								Thread.sleep(3000);
								if(cnf.FnExplicitWait("XPATH", mbo.Voice_UnBlockLink,driver)){
									WebElement UnBlockLink=driver.findElement(By.xpath(mbo.Voice_UnBlockLink));
									repfn.FnUpdateTestStepResHTML("Check Whether UnBlock Link is present", "Fax message contact is blocked as UnBlock link is getting displayed for fax","PASS",runManagerInfoObj);	
									blnFlag=true;

								}

								else
								{

									repfn.FnUpdateTestStepResHTML("Check Whether UnBlock Link is present", "Fax message Contact not blocked as Block link is getting displayed" ,"FAIL",runManagerInfoObj);	
									blnFlag=false;
								}
								}else{
									repfn.FnUpdateTestStepResHTML("Check Whether confirm button clicked or not ", "Confirm button is not clicked","FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}else{
								repfn.FnUpdateTestStepResHTML("Check Whether confirmatipn popup displayed or not ","Confirmatipn popup not displayed","FAIL",runManagerInfoObj);
								blnFlag=false;

							}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Check Whether Block link is clicked or not ","Block link is not clicked","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}else{
							repfn.FnUpdateTestStepResHTML("Check Whether Block link is present ","Block link is not present","FAIL",runManagerInfoObj);
							blnFlag=false;

						}

					}else{
						repfn.FnUpdateTestStepResHTML("Verify if fax message present for unsaved contact ","Fax message not present for unsaved contact","FAIL",runManagerInfoObj);
						blnFlag=false;

					}

				}

				else{
					repfn.FnUpdateTestStepResHTML("Verify if Fax message present or not  ","Fax message not present ","FAIL",runManagerInfoObj);
					blnFlag=false;
				}



			}	
			else{
				repfn.FnUpdateTestStepResHTML("Verify if any Fax message present or not  ","Fax message not present ","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verifying if the user is able to successfully block the contact that sent the fax message. "," user is not able to block the contact that sent the fax message due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		driver.navigate().refresh();
		System.out.println("boolean value return to this block method: "+blnFlag);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}


	public synchronized boolean FnUnBlockContactFax(WebDriver driver, RunManagerInfo runManagerInfoObj)
	{
		boolean blnFlag=false;
		try
		{
			if(cnf.FnExplicitWait("XPATH", mbo.Fax_ContactNameALL,driver)){
				List<WebElement> ContactName = driver.findElements(By.xpath(mbo.Fax_ContactNameALL));
				List<WebElement> ContactNames=new ArrayList<WebElement>();
				if(ContactName.size()>0){
					repfn.FnUpdateTestStepResHTML("Verify if Fax messages present","Fax messages present","PASS",runManagerInfoObj);
					for(WebElement Contact:ContactName){
						if(Contact.getText().contains("("))
						{	
							ContactNames.add(Contact);
						}
					}


					if(ContactNames.size()>0)
					{

						cnf.JSClick(ContactNames.get(0),driver);
						repfn.FnUpdateTestStepResHTML("Verify if Fax message present the unsaved contact","Fax message present for the unsaved contact"+ContactNames.get(0).getText(),"PASS",runManagerInfoObj);

						if(cnf.FnExplicitWait("XPATH", mbo.Voice_BlockMessages,driver)){
							WebElement BlockLink=driver.findElement(By.xpath(mbo.Voice_BlockMessages));
							cnf.JSClick(BlockLink,driver);

							if(cnf.FnExplicitWait("XPATH", mbo.Voice_ConfirmPopup,driver)){
								WebElement ConfirmMessage=driver.findElement(By.xpath(mbo.Voice_ConfirmPopup));
								cnf.JSClick(ConfirmMessage,driver);
								Thread.sleep(3000);

								if(cnf.FnExplicitWait("XPATH", mbo.Voice_UnBlockLink,driver)){
									WebElement UnBlockLink=driver.findElement(By.xpath(mbo.Voice_UnBlockLink));

									System.out.println("iNSIDE IF");
									repfn.FnUpdateTestStepResHTML("Check Whether UnBlock Link is present for fax contact", "UnBlock link is getting displayed for contact:" + ContactNames.get(0).getText(),"PASS",runManagerInfoObj);	
									cnf.JSClick(UnBlockLink,driver);
									repfn.FnUpdateTestStepResHTML("Check Whether UnBlock Link is clicked for fax contact", "UnBlock link is clicked for fax contact","PASS",runManagerInfoObj);	

								}
								else
								{
									System.out.println("iNSIDE ELSE ");
									repfn.FnUpdateTestStepResHTML("Check Whether UnBlock Link is present", "Block link is getting displayed" + ContactNames.get(0).getText(),"FAIL",runManagerInfoObj);	
									blnFlag=false;
								}


								Thread.sleep(3000);
								if(cnf.FnExplicitWait("XPATH", mbo.Voice_BlockMessages,driver)){
									WebElement BlockLink1=driver.findElement(By.xpath(mbo.Voice_BlockMessages));

									System.out.println("iNSIDE IF");
									repfn.FnUpdateTestStepResHTML("Check Whether Fax contact is unblocked", "Fax contact is unblocked as Block link is getting displayed","PASS",runManagerInfoObj);	
									blnFlag=true;



								}
								else
								{
									System.out.println("iNSIDE ELSE ");
									repfn.FnUpdateTestStepResHTML("Check Whether Fax contact is unblocked", "Fax contact is not unblocked UnBlock link is still getting displayed" ,"FAIL",runManagerInfoObj);	
									blnFlag=false;
								}
							}else{
								repfn.FnUpdateTestStepResHTML("Verify if confirm link present on popup","Confirm link not present on popup","FAIL",runManagerInfoObj);
								blnFlag=false;

							}
						}else{
							repfn.FnUpdateTestStepResHTML("Verify if block link present for unsaved contact","Block link not present for unsaved contact","FAIL",runManagerInfoObj);
							blnFlag=false;

						}
					}else{
						repfn.FnUpdateTestStepResHTML("Verify if fax message present for unsaved contact","Fax message not present for unsaved contact","FAIL",runManagerInfoObj);
						blnFlag=false;

					}

				}

				else{
					repfn.FnUpdateTestStepResHTML("Verify if Fax messages present","Fax messages not present","FAIL",runManagerInfoObj);
					blnFlag=false;
				}


			}else{
				repfn.FnUpdateTestStepResHTML("Verify if any Fax messages present","Fax messages not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}


		}catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verifying if the user is able to successfully unblock an already blocked contact that sent the fax message.","user is not able to unblock an already blocked contact that sent the fax message due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		driver.navigate().refresh();
		System.out.println("boolean value return to this block method: "+blnFlag);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	public synchronized boolean FnBlockContactCancel(WebDriver driver, RunManagerInfo runManagerInfoObj)
	{
		boolean blnFlag=false;
		try
		{
			if(cnf.FnExplicitWait("XPATH", mbo.Fax_ContactNameALL,driver)){
				List<WebElement> ContactName = driver.findElements(By.xpath(mbo.Fax_ContactNameALL));
				List<WebElement> ContactNames=new ArrayList<WebElement>();
				if(ContactName.size()>0){
					repfn.FnUpdateTestStepResHTML("Verify if Fax messages present or not ","Fax messages present","PASS",runManagerInfoObj);
					for(WebElement Contact:ContactName){
						if(Contact.getText().contains("("))
						{	
							ContactNames.add(Contact);
						}
					}


					if(ContactNames.size()>0)
					{

						repfn.FnUpdateTestStepResHTML("Verify if Fax message present or not for unsaved Conatct","Fax message present for unsaved contact:"+ContactNames.get(0).getText(),"PASS",runManagerInfoObj);
						cnf.JSClick(ContactNames.get(0),driver);
						repfn.FnUpdateTestStepResHTML("Verify if Fax message is clicked or not","Fax message clicked for contact:"+ContactNames.get(0).getText(),"PASS",runManagerInfoObj);

						if(cnf.FnExplicitWait("XPATH", mbo.Voice_BlockMessages,driver)){
							WebElement BlockLink=driver.findElement(By.xpath(mbo.Voice_BlockMessages));
							repfn.FnUpdateTestStepResHTML("Check Whether Block link is present ", "Block link is present for contact " ,"PASS",runManagerInfoObj);
						if(cnf.JSClick(BlockLink,driver)){
								repfn.FnUpdateTestStepResHTML("Check Whether cancel link is clicked or not ", "Cancel link is clicked " ,"PASS",runManagerInfoObj);

						
							if(cnf.FnExplicitWait("XPATH", mbo.Voice_CancelPopup,driver)){
								WebElement Cancel=driver.findElement(By.xpath(mbo.Voice_CancelPopup));
								repfn.FnUpdateTestStepResHTML("Check Whether cancel link is present on popup or not ", "cancel link is present on popup " ,"PASS",runManagerInfoObj);
								if(cnf.JSClick(Cancel,driver)){
								repfn.FnUpdateTestStepResHTML("Check Whether cancel link is clicked or not ", "Cancel link  is clicked present on popup " ,"PASS",runManagerInfoObj);
								Thread.sleep(3000);
								if(BlockLink.isDisplayed())
								{
									System.out.println("iNSIDE IF");
									repfn.FnUpdateTestStepResHTML("Check Whether Block Link is present", "Fax message contact not blocked as Block link is getting displayed","PASS",runManagerInfoObj);	
									blnFlag=true;



								}
								else
								{
									System.out.println("iNSIDE ELSE ");
									repfn.FnUpdateTestStepResHTML("Check Whether UnBlock Link is present", "Cancel not working as UnBlock link is getting displayed" ,"FAIL",runManagerInfoObj);	
									blnFlag=false;
								}
								}else{
									repfn.FnUpdateTestStepResHTML("Check Whether Cancel Link is clicked or not", "Cancel link not clicked","FAIL",runManagerInfoObj);	
									blnFlag=false;
								}
							}else{repfn.FnUpdateTestStepResHTML("Check Whether Cancel Link is present", "Cancel link not present","FAIL",runManagerInfoObj);	
							blnFlag=false;
							}
						}else{
							repfn.FnUpdateTestStepResHTML("Check Whether Block Link is clicked", "Block link not clicked","FAIL",runManagerInfoObj);	
							blnFlag=false;
						}
						}else{repfn.FnUpdateTestStepResHTML("Check Whether Block Link is present", "Block link not present","FAIL",runManagerInfoObj);	
						blnFlag=false;
						}

					}else{
						repfn.FnUpdateTestStepResHTML("Verify if fax message present for the unsaved contact","Fax message not present for the unsaved contact","FAIL",runManagerInfoObj);
						blnFlag=false;

					}

				}

				else{
					repfn.FnUpdateTestStepResHTML("Verify if Fax messages present or not","Fax message not present","FAIL",runManagerInfoObj);
					blnFlag=false;
				}



			}else{
				repfn.FnUpdateTestStepResHTML("Verify if any Fax messages present or not","Fax message not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verifying if the user is able to block the contact that sent the fax message and cancel the changes before saving."," user is not able to block the contact that sent the fax message and cancel the changes before saving due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		driver.navigate().refresh();
		System.out.println("boolean value return to this block method: "+blnFlag);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}

	public synchronized boolean FnBlockUnknownContact(WebDriver driver, RunManagerInfo runManagerInfoObj)
	{
		boolean blnFlag=false;
		try
		{
			List<WebElement> ContactName = driver.findElements(By.xpath(mbo.Fax_ContactName));

			if(ContactName.size()>0){
				repfn.FnUpdateTestStepResHTML("Verify if Fax messages is present for Unknown Contact ","Fax message is present for Unknown Contact","PASS",runManagerInfoObj);
				((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", ContactName.get(0));
				cnf.JSClick(ContactName.get(0),driver);
				

				if(cnf.FnExplicitWait("XPATH", mbo.Voice_FaxMessageExpandedDiv,driver)){

					List<WebElement> BlockSpan=driver.findElements(By.xpath(mbo.Voice_BlockMessages_unknown));

					if(BlockSpan.size()==0){

						System.out.println("Block element not present");
						repfn.FnUpdateTestStepResHTML("Verify if Block link is present or not ", "Block link is not present for unknown contact","PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						System.out.println("Block element  present");
						repfn.FnUpdateTestStepResHTML("Verify if Block link is present or not ", "Block link is present for unknown contact","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}	
			}

			else{
				repfn.FnUpdateTestStepResHTML("Verify if Fax messages is present for Unknown Contact","Fax message is not present for Unknown Contact","FAIL",runManagerInfoObj);
				blnFlag=false;
			}


		}catch (Exception e)

		{	
			repfn.FnUpdateTestStepResHTML("Verify if Block link is present or not for Unknown Number"," Exception occured while verifying Block Link for Unknown Contact","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		driver.navigate().refresh();
		System.out.println("boolean value return to this block method: "+blnFlag);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	
	public synchronized boolean FnVerifyMessagesPage(WebDriver driver, RunManagerInfo runManagerInfoObj) throws Exception{

		try{
			if(cnf.FnExplicitWait("XPATH", mbo.verifyMessagesPage,driver)){
				repfn.FnUpdateTestStepResHTML("Verify user is on Messages page ", "User is on Messages page","PASS",runManagerInfoObj);
				blnFlag	= true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify user is on Messages page ", "User is not on Messages page","FAIL",runManagerInfoObj);
				blnFlag	= false;
			}

		}

		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify user is on Messages page ", "User is not on Messages page","FAIL",runManagerInfoObj);
			blnFlag	=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}

		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;


	}
	
	public synchronized boolean fn_CommonFunction_CallLogUnknownNumber(WebDriver driver, RunManagerInfo runManagerInfoObj) throws Exception
	{
		try
		{
			//Call log lists received

			if(cnf.FnExplicitWait("XPATH", mbo.Calllog_logList,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Call logs are present or not", "Call logs are present","PASS",runManagerInfoObj);
				List <WebElement> ContactNumber=driver.findElements(By.xpath(mbo.Calllog_logList));
				List <WebElement> ContactNumbers=new ArrayList<WebElement>();
				for(WebElement Contacts:ContactNumber)
				{
					String ContactsText=Contacts.getText();	
					if(ContactsText.contains("Unknown"))
					{
						ContactNumbers.add(Contacts);
					}
				}
				
				if(ContactNumbers.size()>0)
				{
					repfn.FnUpdateTestStepResHTML("Verify Call logs for UnKnown contact are displayed", "Call logs for UnKnown contact are displayed","PASS",runManagerInfoObj);
					if(cnf.JSClick(ContactNumbers.get(0),driver)){
						repfn.FnUpdateTestStepResHTML("Verify UnKnown contact is clicked", "UnKnown contact is clicked","PASS",runManagerInfoObj);
						blnFlag	=true;
						Thread.sleep(5000);
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify UnKnown contact is clicked", "UnKnown contact is not clicked","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Call logs for UnKnown contact are displayed", "Call logs for UnKnown contact are not displayed","FAIL",runManagerInfoObj);
					blnFlag	=false;
				}

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Call logs are present or not", "Call logs are not present","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify UnKnown contact is displayed and clicked", "UnKnown contact is not displayed and not clicked due to some exception" ,"FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;  
	}

	public synchronized boolean fn_callLogBlockUnknownNumber(WebDriver driver, RunManagerInfo runManagerInfoObj) throws Exception
	{

		try{

			if(cnf.FnExplicitWait("XPATH", mbo.Calllog_block,driver))
			{
				repfn.FnUpdateTestStepResHTML("Verify Block Link is not present for Unknown contacts", "Block Link is present for Unknown contacts ","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify Block Link is not present for Unknown contacts", "Block Link is not present for Unknown contacts ","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			
			blnFlag=FN_BackButtonClick(driver,runManagerInfoObj);
			if(blnFlag){
				blnFlag=true;
			}
			else{
				blnFlag=false;
			}

		}
		catch(NoSuchElementException BlockUnknownNumber)
		{
			repfn.FnUpdateTestStepResHTML("Check whether No Block Link is getting displayed for Unknown Number", "Unknown Number : No Block Link is getting displayed" ,"PASS",runManagerInfoObj); 
			blnFlag=false;
		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verify Block Link is  not present for Unknown contacts", "Block Link is present for Unknown contacts  due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	
	public synchronized boolean FnViewFaxMessage(WebDriver driver, RunManagerInfo runManagerInfoObj)
	{
		boolean blnFlag=false;
		try
		{	

			System.out.println(System.getProperty("user.home"));
			String message = null;
			List <WebElement> FaxmessagesRows=driver.findElements(By.xpath(mbo.Voice_FaxMessageList));
			if(FaxmessagesRows.size()>0){
				for(int i=0;i<FaxmessagesRows.size();i++){
					WebElement ContactName = driver.findElement(By.xpath(mbo.Voice_faxSavedContact));

					cnf.JSClick(ContactName,driver);
					repfn.FnUpdateTestStepResHTML("Verify if Fax message present  for the contact","Fax message present  for the contact"+ContactName.getText(),"PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH", mbo.Voice_FaxPreview,driver)){
						WebElement FaxPreview = driver.findElement(By.xpath(mbo.Voice_FaxPreview));

						repfn.FnUpdateTestStepResHTML("Verify if user is able to view the incoming fax message","User is able to view the incoming fax message "+ContactName.getText(),"PASS",runManagerInfoObj);
						if(cnf.FnExplicitWait("XPATH", mbo.Voice_Openpdf,driver)){
							WebElement openPdf= driver.findElement(By.xpath(mbo.Voice_Openpdf));

							if(openPdf.isDisplayed()){
								cnf.JSClick(openPdf,driver);
							

								message = cnf.listFile(cnf.FILE_DIR, cnf.FILE_TEXT_EXT);
								if(!message.contains("no files end with"))
								{
									repfn.FnUpdateTestStepResHTML("Verify if Fax message can be read in pdf form","Fax message can be read in pdf","PASS",runManagerInfoObj);
									blnFlag=true;
									break;
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify if Fax message can be read in pdf form","Fax message can't be read in pdf","FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}
						}else{
							repfn.FnUpdateTestStepResHTML("Verify if Open pdf option present to view the incoming fax message","Open pdf option not present to view the incoming fax message :"+ContactName.getText(),"FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if user is able to view the incoming fax message","User is not able to view the incoming fax message:"+ContactName.getText(),"FAIL",runManagerInfoObj);
						blnFlag=false;
					}



				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if any Fax message present","Fax message not present","FAIL",runManagerInfoObj);
				blnFlag=false;
			}





		}catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		System.out.println("boolean value return to this block method: "+blnFlag);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}


	public synchronized boolean fn_callLogBlock(WebDriver driver, RunManagerInfo runManagerInfoObj)
	{
		try
		{	

			if(cnf.FnExplicitWait("XPATH", mbo.Calllog_callLogLink,driver))
			{
				WebElement CallLog =driver.findElement(By.xpath(mbo.Calllog_callLogLink));			
				System.out.println("Call Logs exists");
				repfn.FnUpdateTestStepResHTML("Verify if Call logs link is present", "Call logs link is present", "PASS",runManagerInfoObj);
				if(cnf.JSClick(CallLog,driver))
				{
					System.out.println("Call logs is clicked");	
					repfn.FnUpdateTestStepResHTML("Verify if Call Logs link is clicked", "Call Logs link is Clicked", "PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else
				{
					repfn.FnUpdateTestStepResHTML("Verify if Call Logs link is clicked", "Call Logs link is not clicked", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}				
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify if Call Logs link is present", "Call Logs link is not present", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)
		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("verify if Call Logs link is clicked", "Call Logs link is not clicked due to some exception", "FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}

	
	public void addEmailSave(WebDriver driver, RunManagerInfo runManagerInfoObj) throws InterruptedException
	{
		try
		{

			repfn.FnUpdateTestStepResHTML("Adding the email address for the existing user "
					, " Email address added ", "PASS",runManagerInfoObj);
			WebElement saveButton=driver.findElement(By.xpath(mbo.saveButton));
			if (cnf.FnExplicitlessWait_untilClickable("XPATH",mbo.saveButton,driver)) {
				cnf.JSClick(saveButton,driver);
				blnFlag=true;
				Thread.sleep(3000);
				repfn.FnUpdateTestStepResHTML(
						"Click on save button",
						" Save button clicked ", "PASS",runManagerInfoObj);

			}
			else
			{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Click on save button"," Save button clicked ", "FAIL",runManagerInfoObj);
			}
		}
		catch(Exception e)
		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}

	}
	public void addEmailCancel(WebDriver driver, RunManagerInfo runManagerInfoObj) throws InterruptedException
	{
		try
		{

			repfn.FnUpdateTestStepResHTML("Adding the email address for the existing user ", " Email address added: "+m1.get("EmailAdd").toString(), "PASS",runManagerInfoObj);
			WebElement cancelButton=driver.findElement(By.xpath(mbo.cancelText));
			if (cnf.FnExplicitlessWait_untilClickable("XPATH",mbo.cancelText,driver))
			{
				cnf.JSClick(cancelButton,driver);
				blnFlag=true;
				Thread.sleep(5000);
				//driver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
				repfn.FnUpdateTestStepResHTML("Click on cancel button"," Cancel button clicked ", "PASS",runManagerInfoObj);
				WebElement confirmButton=driver.findElement(By.xpath(mbo.confirmButton));
				if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.confirmButton,driver))
				{
					cnf.JSClick(confirmButton,driver);
					Thread.sleep(5000);
					//	driver.manage().timeouts().implicitlyWait(3, TimeUnit.SECONDS);

				}


			}
			else
			{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML(
						"Click on cancel button",
						" Cancel button clicked ", "FAIL",runManagerInfoObj);
			}
		}
		catch(Exception e)
		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}

	}
	

	public synchronized boolean Fn_AddNewPhoneLineLink_Click(WebDriver driver, RunManagerInfo runManagerInfoObj){
		try{
			cnf.FnExplicitWait("XPATH", mbo.AddNewLine,driver);
			WebElement AddNewLine=driver.findElement(By.xpath(mbo.AddNewLine));


			if(AddNewLine.isDisplayed()){
				//AddNewLine.click();
				cnf.JSClick(AddNewLine,driver);
				repfn.FnUpdateTestStepResHTML("Verify AddNewLine is displayed and clicked "," AddNewLine is displayed and clicked","PASS",runManagerInfoObj);
				blnFlag=true;
				Thread.sleep(1000);

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify AddNewLine is displayed and clicked "," AddNewLine is displayed and clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	public synchronized boolean FN_ForwardCallLogList_firstContact(WebDriver driver, RunManagerInfo runManagerInfoObj){
		try{
			Thread.sleep(4000);
			if(cnf.FnExplicitWait("XPATH", mbo.ForwardCallList_First,driver))
			{
				repfn.FnUpdateTestStepResHTML("Verify ForWard Call Log List is displayed", "ForWard Call Log List is displayed","PASS",runManagerInfoObj);
				List<WebElement> FirstContact=driver.findElements(By.xpath(mbo.ForwardCallList_First));
				
				if(cnf.FnExplicitWait("XPATH", mbo.ForwardCallList_First_Status,driver)){
					List<WebElement> ForwardCallList_First_Status=driver.findElements(By.xpath(mbo.ForwardCallList_First_Status));
					forwardStatus = ForwardCallList_First_Status.get(0).getText();
					System.out.println("Foward status: "+forwardStatus);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify ForWard Call Log List with Status is displayed", "ForWard Call Log List with Status is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;	
				}

				if(cnf.JSClick(FirstContact.get(0),driver)){
					repfn.FnUpdateTestStepResHTML("Verify ForWard Call Log is clicked ", "ForWard Call Log is clicked","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify ForWard Call Log is clicked ", "ForWard Call Log is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify ForWard Call Log List is displayed", "ForWard Call Log List is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;				
			}
		}

		catch(Exception e)
		{
			blnFlag	=false;
			repfn.FnUpdateTestStepResHTML("ForWard Call Log List is displayed and clicked ", "ForWard Call Log List is not  displayed and not clicked due to some exception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	 public synchronized boolean ForwardingStatus_change(WebDriver driver, RunManagerInfo runManagerInfoObj)
		{
			try
			{
				if(cnf.FnExplicitWait("XPATH", mbo.ForwardingCall_StatusOnOff,driver)) {
					WebElement Status_OnOff = driver.findElement(By.xpath(mbo.ForwardingCall_StatusOnOff));

					System.out.println("Call toggle is present");
					repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle is available","Call Forwarding status Toggle is available", "PASS",runManagerInfoObj);
					Thread.sleep(3000);

					if (cnf.JSClick(Status_OnOff,driver)) {
						System.out.println("Call Status is turned off");
						repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle can be changed","Call Forwarding status Toggle can be changed","PASS",runManagerInfoObj);
						blnFlag = true;
					} 
					else {
						System.out.println("Call Status could not be changed ");
						repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle can be changed","Call Forwarding status Toggle cannot be changed","FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				} 
				else {
					System.out.println("Call toggle is not present");
					repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle is available","Call Forwarding status Toggle is not available","FAIL",runManagerInfoObj);
					blnFlag = false;
				}

			} 

			catch (Exception e) {
				repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle is available and clicked ","Call Forwarding status Toggle is not available and clicked due to some exception","FAIL",runManagerInfoObj);
				blnFlag = false;
				System.err.println("Message : " + e.getMessage());
				System.err.println("Cause : " + e.getCause());
			}

			m1.put("STEPSTATUS", blnFlag);
			return blnFlag;
		}
	 public synchronized boolean SaveChanges_ForwardingCallManager(WebDriver driver, RunManagerInfo runManagerInfoObj)
		{
			try
			{
				if(cnf.FnExplicitWait("XPATH", mbo.ForwardCall_SaveButton,driver)) {
					WebElement Status_Save = driver.findElement(By.xpath(mbo.ForwardCall_SaveButton));

					System.out.println("Save button is present");
					repfn.FnUpdateTestStepResHTML("Verify if Save button is available","Save button is available", "PASS",runManagerInfoObj);
					if (cnf.JSClick(Status_Save,driver)) {
						System.out.println("changes are saved");
						repfn.FnUpdateTestStepResHTML("Verify if Save button is clicked","Save button is clicked", "PASS",runManagerInfoObj);
						
						Thread.sleep(5000);
						driver.navigate().refresh();
						
						if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationTwo,driver)){
							WebElement PageVerificationTwo = driver.findElement(By.xpath(mbo.PageVerificationTwo));
							if(PageVerificationTwo.getAttribute("textContent").equalsIgnoreCase("Forwarding Manager")){
								repfn.FnUpdateTestStepResHTML("Verify User is navigated to Forwarding Manager page","User is navigated to Forwarding Manager page", "PASS",runManagerInfoObj);
								
								if(cnf.FnExplicitWait("XPATH", mbo.ForwardCallList_First_Status,driver)){
									List<WebElement> ForwardCallList_First_Status=driver.findElements(By.xpath(mbo.ForwardCallList_First_Status));
									String Status = ForwardCallList_First_Status.get(0).getText();
									if(Status.equalsIgnoreCase(forwardStatus)){
										repfn.FnUpdateTestStepResHTML("Verify if Changes are saved","Changes are not saved", "FAIL",runManagerInfoObj);
										blnFlag = false;
									}
									else{
										repfn.FnUpdateTestStepResHTML("Verify if Changes are saved","Changes are saved", "PASS",runManagerInfoObj);
										blnFlag = true;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify ForWard Call Log List with Status is displayed", "ForWard Call Log List with Status is not displayed","FAIL",runManagerInfoObj);
									blnFlag=false;	
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify User is navigated to Forwarding Manager page","User is not navigated to Forwarding Manager page", "FAIL",runManagerInfoObj);
								blnFlag = false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Forwarding Manager page","User is not navigated to Forwarding Manager page", "FAIL",runManagerInfoObj);
							blnFlag = false;
						}
					} 
					else {
						System.out.println("Changes are saved");
						repfn.FnUpdateTestStepResHTML("Verify if Save button is clicked","Save button is not clicked", "FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				} 
				else {
					System.out.println("Save button is not present");
					repfn.FnUpdateTestStepResHTML("Verify if Save button is available","Save button is not available", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}

				driver.navigate().refresh();

			} 

			catch (Exception e) {
				blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if Save button is available","Save button is not available due to some exception", "FAIL",runManagerInfoObj);
				System.err.println("Message : "+e.getMessage());
				System.err.println("Cause : "+e.getCause());
			}
			m1.put("STEPSTATUS", blnFlag);
			return blnFlag;

		}

	public synchronized boolean FN_ForwardCallLogClick(WebDriver driver, RunManagerInfo runManagerInfoObj){
		try{
			if (cnf.FnExplicitWait("XPATH", mbo.ForwardCallLink,driver)) {
				WebElement ForwardcallLogLink = driver.findElement(By.xpath(mbo.ForwardCallLink));
				repfn.FnUpdateTestStepResHTML("Verify ForWard Call Log Link is displayed ","ForWard Call Log Link is displayed ", "PASS",runManagerInfoObj);

				if (cnf.JSClick(ForwardcallLogLink,driver)) {
					repfn.FnUpdateTestStepResHTML("Verify ForWard Call Log Link is clicked ","ForWard Call Log Link is clicked ","PASS",runManagerInfoObj);

					if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationTwo,driver)){
						WebElement PageVerificationTwo = driver.findElement(By.xpath(mbo.PageVerificationTwo));
						if(PageVerificationTwo.getAttribute("textContent").equalsIgnoreCase("Forwarding Manager")){
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Forwarding Manager page","User is navigated to Forwarding Manager page", "PASS",runManagerInfoObj);
							blnFlag = true;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Forwarding Manager page","User is not navigated to Forwarding Manager page", "FAIL",runManagerInfoObj);
							blnFlag = false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User is navigated to Forwarding Manager page","User is not navigated to Forwarding Manager page", "FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				} else {
					repfn.FnUpdateTestStepResHTML("Verify ForWard Call Log Link is clicked ","ForWard Call Log Link is not clicked ", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			} else {
				repfn.FnUpdateTestStepResHTML("Verify ForWard Call Log Link is displayed","ForWard Call Log Link is not  displayed", "FAIL",runManagerInfoObj);
				blnFlag = false;
			}
		}

		catch (Exception e) {

			repfn.FnUpdateTestStepResHTML("ForWard Call Log Link is displayed and clicked ","ForWard Call Log Link is not  displayed and not clicked due to some exceptions ","FAIL",runManagerInfoObj);
			System.err.println("Message : " + e.getMessage());
			System.err.println("Cause : " + e.getCause());
			blnFlag = false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}




	public synchronized boolean FN_Access_AdminVoicePanel_StdandUser(WebDriver driver, RunManagerInfo runManagerInfoObj){
		try{

			if(cnf.FnExplicitWait("XPATH",mbo.Access_AdminVoicePanel,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Access_AdminVoicePanel should not be displayed for standard User ", "Access_AdminVoicePanel is displayed for standard User ","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Access_AdminVoicePanel should not be displayed for standard User", "Access_AdminVoicePanel is not displayed for standard User ","PASS",runManagerInfoObj);
				blnFlag=true;
			}
		}

		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify Access_AdminVoicePanel should not be displayed for standard User ", "Access_AdminVoicePanel is displayed for standard User  due to some exception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag	=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	
	public synchronized boolean Fn_CallLogClick(WebDriver driver, RunManagerInfo runManagerInfoObj)
	{
		try
		{

			if(cnf.FnExplicitWait("XPATH", mbo.Calllog_callLogLink,driver)){
				repfn.FnUpdateTestStepResHTML("Verify if Call logs link is present", "Call logs link is present", "PASS",runManagerInfoObj);
				WebElement CallLog =driver.findElement(By.xpath(mbo.Calllog_callLogLink));
				if(cnf.JSClick(CallLog,driver)){
					repfn.FnUpdateTestStepResHTML("Verify if Call Logs link is Clicked", "Call Logs link is Clicked", "PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if Call Logs link is Clicked", "Call Logs link is not Clicked", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if Call logs link is present", "Call logs link is not present", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}


		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("verify if Call Logs link is present and clicked", "Call Logs link is not present", "FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}



	
	public synchronized boolean FN_Verify_edit_Details(WebDriver driver, RunManagerInfo runManagerInfoObj){
		try{

			boolean  blnflag=false;
			WebElement searchBar=driver.findElement(By.xpath(mbo.searchBar));
			if(cnf.FnExplicitWait("XPATH", mbo.searchBar,driver))
			{

				repfn.FnUpdateTestStepResHTML("Verify whether Search bar is present or not to search edited contact", "Search bar is present ","PASS",runManagerInfoObj);
				searchBar.sendKeys(first_Name+" "+last_Name);
				WebElement ContactName=driver.findElement(By.xpath(mbo.Calllog_logList));
				String contctName=ContactName.getText();
				String ContactEdit=first_Name+" "+last_Name;
				if(contctName.contains(ContactEdit)){
					repfn.FnUpdateTestStepResHTML("Verify whether Contact edit details saved or not", "Contact edit details saved as now the contact First Name +last Name is updated to Rich Belding: "+contctName,"PASS",runManagerInfoObj);
					blnFlag=true;

				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify whether Contact edit details saved or not", " Contact edit details not saved as contact name is :"+contctName,"FAIL",runManagerInfoObj);
					blnFlag=false;
				}

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify whether Search bar is present or not to search edited contact", "Search bar is not present ","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			repfn.FnUpdateTestStepResHTML("Verify EditMode_firstName/Lastname is edited","EditMode_firstName/Lastname is not able to edit due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;

		}
		driver.navigate().refresh();
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;	

	}

	
	public synchronized boolean Fn_Verify_SearchBar(WebDriver driver, RunManagerInfo runManagerInfoObj){
		try{
			
			if(cnf.FnExplicitWait("Xpath", mbo.SearchBar,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Search Bar is displayed in Contacts Page","Search Bar is displayed in Contacts Page","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML(" Verify Search Bar is displayed in Contacts Page","Search Bar is not displayed in Contacts Page","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		
		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML(" Verify Search Bar is displayed in contact Page","Search Bar is not displayed in contact Page due to some exception","FAIL",runManagerInfoObj);
	  	    blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	


	
	public synchronized boolean CommonLogoutNavigateTohomePage(WebDriver driver, RunManagerInfo runManagerInfoObj)
	{
		try
		{

			if(cnf.FnExplicitWait("XPATH", mbo.LoginWindow,driver)){
				
				repfn.FnUpdateTestStepResHTML("Check Whether User is navigated to Login page", "User is in Login  Page","PASS",runManagerInfoObj);
				blnFlag= true;
			}else{
				repfn.FnUpdateTestStepResHTML("Check Whether User is navigated to Login page", "User is in Login Page","FAIL",runManagerInfoObj);
				blnFlag= false;
			}
		}
		catch(Exception e)
		{
			blnFlag	=false;
			repfn.FnUpdateTestStepResHTML("Login to Spectrum Business.net ", "Login is not performed due to exception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;  
	}

	
	

	public synchronized boolean Loginarrow(WebDriver driver, RunManagerInfo runManagerInfoObj) throws Exception
	{
		try
		{
			if(cnf.FnExplicitWait("XPATH", mbo.LoginWindow,driver))
			{
				WebElement LoginArrow=driver.findElement(By.xpath(mbo.LoginWindow));
				System.out.println("Login Window is displayed");
				repfn.FnUpdateTestStepResHTML("Verify if User is in Home page and the Login window is displayed", "User is in Home page and Login window is displayed", "PASS",runManagerInfoObj);
				blnFlag=true;
				
				
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify if User is in Home page and the Login window is displayed", "User is not in Home page and Login window is not displayed", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		catch (Exception e)

		{

			repfn.FnUpdateTestStepResHTML("Verify if Login window is present and clicked", "Login window is not present and not clicked due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			//repfn.FnUpdateTestStepResHTML("Verify if the shelf services and equipment in the overwiew page is displayed", "verify did not happen ","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}

	//To verify Login for an unauthenticated user//

	public synchronized boolean Verifylogin(WebDriver driver, RunManagerInfo runManagerInfoObj) throws Exception
	{
		try
		{
			blnFlag = Loginarrow(driver,runManagerInfoObj);	
			
			//UserName//

			if(blnFlag){

				if(cnf.FnExplicitWait("XPATH",mbo.AccountLoginText,driver)){
					WebElement AccountLoginText=driver.findElement(By.xpath(mbo.AccountLoginText));
					if(AccountLoginText.getAttribute("textContent").equalsIgnoreCase("Account Sign-In")){
						repfn.FnUpdateTestStepResHTML("Verify Title text displayed in Login window","Title text displayed in Login window is: "+AccountLoginText.getAttribute("textContent"),"PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Title text displayed in Login window","Title text displayed in Login window is not correct","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Title text displayed in Login window","Title text displayed in Login window is not correct","FAIL",runManagerInfoObj);
					blnFlag=false;
				}

				if(cnf.FnExplicitWait("XPATH",mbo.UserName,driver ))
				{
					repfn.FnUpdateTestStepResHTML("Verify UserName input field is displayed","UserName input field is displayed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else
				{
					repfn.FnUpdateTestStepResHTML("Verify if UserName input field is displayed","UserName input field is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}


				//Password//

				if(cnf.FnExplicitWait("XPATH",mbo.Password,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify if Password input field is displayed","Password input field is displayed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else
				{
					repfn.FnUpdateTestStepResHTML("Verify if Password input field is displayed","Password input field is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}

				//Remember Me//

				if(cnf.FnExplicitWait("XPATH", mbo.RememberMe,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify if Remember Me Checkbox is displayed","Remember Me checkbox is displayed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else
				{
					repfn.FnUpdateTestStepResHTML("Verify if Remember Me Checkbox is displayed","Remember Me checkbox is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}


				//Login Button//

				if(cnf.FnExplicitWait("XPATH", mbo.SignInBtn,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify if Login Button is displayed","Login Button is displayed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else
				{
					repfn.FnUpdateTestStepResHTML("Verify if Login Button is displayed","Login Button is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}

				//Forgot UserName/Password//

				if(cnf.FnExplicitWait("XPATH", mbo.ForgotUserNamePassword,driver)){
					repfn.FnUpdateTestStepResHTML("Verify if Forgot UserName/Password link is displayed","Forgot UserName/Password link is displayed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else
				{
					repfn.FnUpdateTestStepResHTML("Verify if Forgot UserName/Password link is displayed","Forgot UserName/Password link is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}


				//UserRecovery();
				//Loginarrow();

				//First Time Here Text//

				if(cnf.FnExplicitWait("XPATH", mbo.FirstTimeHeretext,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify if \'First Time Here\' text is displayed","\'First Time Here\' text is displayed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else
				{
					System.out.println("First Time Here text is displayed");
					repfn.FnUpdateTestStepResHTML("Verify if \'First Time Here\' text is displayed","\'First Time Here\' text is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}


				//Create New Spectrum Id//
				//CreateNewId();
				//LogoClick();

				if(cnf.FnExplicitWait("XPATH", mbo.CreateNewId,driver)){
					repfn.FnUpdateTestStepResHTML("Verify if \'Register your account\' link is displayed","\'Register your account\' link is displayed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if \'Register your account\' link is displayed","\'Register your account\' link is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify the Login window  is displayed", "Login window is not displyed", "FAIL",runManagerInfoObj);
                blnFlag=false;
			}
		}
		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is able to verify Login options for Unauthenticated user ", "User is able to verify Login options for Unauthenticated user due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
			//repfn.FnUpdateTestStepResHTML("Verify if the shelf services and equipment in the overwiew page is displayed", "verify did not happen ","FAIL",runManagerInfoObj);
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean FnManageUsers(WebDriver driver, RunManagerInfo runManagerInfoObj) throws Exception{
		try {
			if (cnf.FnExplicitWait("XPATH", mbo.ManageUsers,driver)) {
				WebElement ManageUsers = driver.findElement(By.xpath(mbo.ManageUsers));
				repfn.FnUpdateTestStepResHTML("Verify Manage Users link is displayed", "Manage Users link is displayed", "PASS",runManagerInfoObj);
				if(cnf.JSClick(ManageUsers,driver))
				{
					System.out.println("Manage users page");
					Thread.sleep(1000);
					repfn.FnUpdateTestStepResHTML("Verify Manage Users link is clicked","Manage Users link is clicked", "PASS",runManagerInfoObj);
					blnFlag = true;
				} 
				else {
					repfn.FnUpdateTestStepResHTML("Verify Manage Users link is clicked","Manage Users link is not clicked", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify Manage Users link is displayed", "Manage Users link is not displayed", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify if user is navigated to Manage Users Page","User is not navigated to Manage Users page due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : " + e.getMessage());
			System.err.println("Cause : " + e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	

	public synchronized boolean FnOverviewClickIcon(WebDriver driver, RunManagerInfo runManagerInfoObj)
	{
		try
		{
			WebElement OverviewIcon=driver.findElement(By.xpath(mbo.OverviewLink));
			if(OverviewIcon.isDisplayed()){
				cnf.JSClick(OverviewIcon,driver);
				System.out.println("Overview Icon is clicked");
				repfn.FnUpdateTestStepResHTML("Verify User in overview page","User in Overview page","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify User in overview page","User is not in overview page","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	public synchronized boolean FN_SaveButtonClick1(WebDriver driver, RunManagerInfo runManagerInfoObj){
		try{
			if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_SaveButton,driver))
			{
				WebElement Savebtn=driver.findElement(By.xpath(mbo.ManageLine_SaveButton));
				repfn.FnUpdateTestStepResHTML("Verify if Save button is present", "Save button is present", "PASS",runManagerInfoObj);
				if(Savebtn.isEnabled()){
					cnf.ElementClick(Savebtn,driver); 
					repfn.FnUpdateTestStepResHTML("Verify Save button is Enabled and  clicked ","Save button is Enabled and  clicked","PASS",runManagerInfoObj);

					driver.manage().timeouts().implicitlyWait(120, TimeUnit.SECONDS);
					WebElement SavedName=driver.findElement(By.xpath(mbo.Name));
					if(SavedName.getText().contains("Priyanka V"))
					{
						System.out.println("Name is saved");

					}
					else
					{
						System.out.println("Name is not saved");
					}
					WebElement Backbtn=driver.findElement(By.xpath(mbo.UserDetail_Backbtn));
					if(cnf.FnExplicitWait("XPATH", mbo.UserDetail_Backbtn,driver)){
						cnf.ElementClick(Backbtn,driver); 
						repfn.FnUpdateTestStepResHTML("Verify Back button is clicked ","Back button is clicked","PASS",runManagerInfoObj);
						blnFlag=true;
						driver.navigate().refresh();
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Back button is clicked ","Back button is not clicked","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Save button is Enabled and  clicked ","Save button is not Enabled and  clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify if Save button is present", "Save button is not present", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	public synchronized boolean Status_change(WebDriver driver, RunManagerInfo runManagerInfoObj)
	{
		try
		{
			if(cnf.FnExplicitWait("XPATH", mbo.ForwardingCall_StatusOnOff,driver))
			{
				WebElement Status_OnOff=driver.findElement(By.xpath(mbo.ForwardingCall_StatusOnOff));
				if(Status_OnOff.isDisplayed())
				{

					System.out.println("Call toggle is present");
					repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle is available", "Call Forwarding status Toggle is available","PASS",runManagerInfoObj);
					if(cnf.JSClick(Status_OnOff,driver))
					{
						System.out.println("Call Status is turned off");
						repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle can be changed", "Call Forwarding status Toggle can be changed","PASS",runManagerInfoObj);
						blnFlag=true;

					}
					else
					{
						System.out.println("Call Status could not be changed ");
						repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle can be changed", "Call Forwarding status Toggle cannot be changed","FAIL",runManagerInfoObj);
						blnFlag=false;

					}
				}
				else
				{
					System.out.println("Call toggle is not present");
					repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle is available", "Call Forwarding status Toggle is not available","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}


		}
		catch(Exception e)
		{
			blnFlag	=false;
			repfn.FnUpdateTestStepResHTML("Login to Charter.net ", "Login is not performed due to exception","FAIL",runManagerInfoObj);

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}

	public synchronized boolean NewNumber_ForwardingLines(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			
			int RandomInt=randomInt;
			String NewPhoneAdd="987456"+RandomInt;
			if(cnf.FnExplicitWait("XPATH", mbo.NewPhoneNo,driver))
			{
			WebElement NewAddedNum = driver.findElement(By.xpath(mbo.NewPhoneNo));
			repfn.FnUpdateTestStepResHTML("Verify the presence of New phone number", "New phone number is displayed", "PASS",runManagerInfoObj);
			System.out.println("Empty blank field");
			
				NewAddedNum.sendKeys(NewPhoneAdd);
				System.out.println("New Number" + NewPhoneAdd);
				if(NewAddedNum.getText()!=null)
				{
				repfn.FnUpdateTestStepResHTML("Verify if New Number is added","New Number is added", "PASS",runManagerInfoObj);
				blnFlag = true;
			} else {

				repfn.FnUpdateTestStepResHTML("Verify if New Number is added","New Number is not added", "FAIL",runManagerInfoObj);
				blnFlag = false;
			}
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify the presence of New phone number", "New phone number is not displayed", "FAIL",runManagerInfoObj);
				blnFlag=false;	
			}

		} catch (Exception e) {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify the presence of New phone number", "New phone number is not displayed due to some exception", "FAIL",runManagerInfoObj);

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	
	public synchronized boolean fnSearchByFirstNameMissingFilter(WebDriver driver,RunManagerInfo runManagerInfoObj) {
		try
		{
			blnFlag=false;
			List<String> callLogsName=new ArrayList<String>();
			driver.manage().timeouts().implicitlyWait(2, TimeUnit.SECONDS);
			WebElement dropDown=driver.findElement(By.id("dropdownXsFilterDropdown"));
			String searchTextFinal=null;
			if(cnf.FnExplicitWait("ID", "dropdownXsFilterDropdown",driver))
			{
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Check Whether dropdown filter is available or not"," Dropdown filter is available", "PASS",runManagerInfoObj);
				cnf.JSClick(dropDown,driver);
				WebElement missedFilter=driver.findElement(By.xpath("//a[@ng-class='isActive(missed)']"));
				if(cnf.FnExplicitWait("XPATH", "//a[@ng-class='isActive(missed)']",driver))
				{
					blnFlag=true;
					repfn.FnUpdateTestStepResHTML("Click on missed filter from the dropdown list"," Missed filter is selected", "PASS",runManagerInfoObj);
					cnf.JSClick(missedFilter,driver);
				}
				else
				{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Click on missed filter from the dropdown list"," Missed filter is not selected", "FAIL",runManagerInfoObj);
				}
			}
			else
			{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Check Whether dropdown filter is available or not"," Dropdown filter is not available", "FAIL",runManagerInfoObj);
			}
			driver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			List<WebElement> callLogsList=driver.findElements(By.xpath(mbo.callLogsList));
			//driver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			System.out.println("Name: "+callLogsList.get(0).getText()+" Name: "+callLogsList.get(0).getText().toString());
			for(WebElement call:callLogsList)
			{
				//Thread.sleep(2000);
				System.out.println("--------Name-----------"+call.getText());
				callLogsName.add(call.getText());
			}
			for(String search:callLogsName)
			{
				if(Pattern.matches(".*[a-zA-Z]+.*", search))
				{
					String searchText=search;
					String[] searchFirstName=searchText.split(" ");
					searchTextFinal=searchFirstName[0];
					break;
				}
			}
			//System.out.println(call.getText());
			System.out.println("callLogsName: "+callLogsName);

			System.out.println("Search Text Final: "+searchTextFinal);
			WebElement searchBar=driver.findElement(By.xpath(mbo.searchBar));
			if(cnf.FnExplicitWait("XPATH", mbo.searchBar,driver))
			{
				repfn.FnUpdateTestStepResHTML("Check Whether search bar is available or not"," Search bar is available", "PASS",runManagerInfoObj);
				searchBar.sendKeys(searchTextFinal);

				repfn.FnUpdateTestStepResHTML("Search text entered in search bar"," Search text entered is: "+searchTextFinal, "PASS",runManagerInfoObj);
				WebElement searchIcon=driver.findElement(By.xpath(mbo.searchMagnifyIcon));
				if(cnf.FnExplicitWait("XPATH", mbo.searchMagnifyIcon,driver))
				{
					cnf.JSClick(searchIcon,driver);

					repfn.FnUpdateTestStepResHTML("Check Whether search icon is available or not"," Search icon is available", "PASS",runManagerInfoObj);
					List<WebElement> filteredCallLogs=driver.findElements(By.xpath(mbo.callLogsList));
					for(WebElement filteredCall:filteredCallLogs)
					{
						//					for(String name:callLogsName)
						//					{
						if(filteredCall.getText().contains(searchTextFinal))
						{
							repfn.FnUpdateTestStepResHTML("Check Whether the search text is available or not: "+searchTextFinal," Search text is available: "+filteredCall.getText(), "PASS",runManagerInfoObj);
							blnFlag=true;
						}

						//}
					}
					if(!blnFlag)
					{
						repfn.FnUpdateTestStepResHTML("Check Whether the search text is available or not "," Search text is not available", "FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else
				{
					blnFlag=true;
					repfn.FnUpdateTestStepResHTML("Check Whether search icon is available or not"," Search icon is available", "PASS",runManagerInfoObj);
				}
				WebElement cancelIcon=driver.findElement(By.xpath(mbo.cancelIcon));
				if(cnf.FnExplicitWait("XPATH", mbo.cancelIcon,driver))
				{
					cnf.JSClick(cancelIcon,driver);

					repfn.FnUpdateTestStepResHTML("Check Whether cancel icon is clicked or not"," Cancel icon is clicked", "PASS",runManagerInfoObj);
					blnFlag=true;
					if(!searchBar.getText().contains(searchTextFinal))
					{
						repfn.FnUpdateTestStepResHTML("Check Whether search text is cleared or not"," Search text is cleared as no search text present in search bar", "PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Check Whether search text is cleared or not"," Search text is not cleared as search text now present in search bar is:"+searchBar.getText(), "FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else
				{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Check Whether cancel icon is clicked or not"," Cancel icon is not clicked", "FAIL",runManagerInfoObj);
				}

			}
			else
			{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Check Whether search bar is available or not"," Search icon is not available", "FAIL",runManagerInfoObj);
			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify if search by first name using missing filter is successfull"," Search by first name using missing filter is not successfull due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		driver.navigate().refresh();
		FnNavigateBackOverviewPage(driver,runManagerInfoObj);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}

	
	public synchronized boolean AddNewPhoneNumber_FillDetails(WebDriver driver,RunManagerInfo runManagerInfoObj){
		
		String AliasName = (m1.get("AliasName").toString())+randomInt;
		String AliasNumber = (m1.get("AliasNumber").toString())+randomInt;
		
		try
		{

			if (cnf.FnExplicitWait("XPATH", mbo.AddPhoneNo_ForwardingLines,driver)) {
				WebElement AddPhoneNumber = driver.findElement(By.xpath(mbo.AddPhoneNo_ForwardingLines));
				repfn.FnUpdateTestStepResHTML("Verify if Add New Phone number button is present","Add New Phone Number button is present", "PASS",runManagerInfoObj);

				if (cnf.JSClick(AddPhoneNumber,driver)) {
					System.out.println("AddNewPhone Number is clicked");
					repfn.FnUpdateTestStepResHTML("Verify if Add New Phone Number is clicked ","Add New Phone Number is clicked ", "PASS",runManagerInfoObj);

					if(cnf.FnExplicitWait("XPATH", mbo.NewAlias,driver)){
						repfn.FnUpdateTestStepResHTML("Verify if Empty field is displayed to add a new Alias","Empty field is displayed to add a new alias","PASS",runManagerInfoObj);
						WebElement NewAddedAlias = driver.findElement(By.xpath(mbo.NewAlias));
						NewAddedAlias.sendKeys(AliasName);
						repfn.FnUpdateTestStepResHTML("Verify New Alias Name is entered","New Alias Name is entered: "+AliasName,"PASS",runManagerInfoObj);
						blnFlag = true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if Empty field is displayed to add a new Alias","Empty field is not displayed to add a new alias","FAIL",runManagerInfoObj);
						blnFlag = false;
					}
					
					if(cnf.FnExplicitWait("XPATH", mbo.NewPhoneNo,driver)){
						repfn.FnUpdateTestStepResHTML("Verify if Empty field is displayed to add a new Phone Number","Empty field is displayed to add a new Phone Number","PASS",runManagerInfoObj);
						WebElement NewPhoneNo = driver.findElement(By.xpath(mbo.NewPhoneNo));
						NewPhoneNo.sendKeys(AliasNumber);
						repfn.FnUpdateTestStepResHTML("Verify New Alias Phone Number is entered","New Alias Phone Number is entered: "+AliasNumber,"PASS",runManagerInfoObj);
						blnFlag = true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if Empty field is displayed to add a new Phone Number","Empty field is not displayed to add a new Phone Number","FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				} 
				else {
					System.out.println("Add New Phone Number is not clicked");
					repfn.FnUpdateTestStepResHTML("Verify if Add New Phone Number is clicked ","Add New Phone Number is not clicked ", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			} 
			else {
				repfn.FnUpdateTestStepResHTML("Verify if Add New Phone number button is present","Add New Phone Number button is not present", "FAIL",runManagerInfoObj);
				blnFlag = false;
			}
		} 

		catch (Exception e) {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if Add New Phone Number is displayed and clicked to add a new entry","Add New Phone Number is not displayed and clicked due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	public synchronized boolean ManageForwardingLines(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			if (cnf.FnExplicitWait("XPATH", mbo.ManageForwardingLines,driver)) {
				System.out.println("Manage is found");
				WebElement ManageForwardingLines = driver.findElement(By.xpath(mbo.ManageForwardingLines));

				System.out.println("Manage Forwarding Lines is displayed");
				repfn.FnUpdateTestStepResHTML("Verify if Manage Forwarding Lines is displayed","Manage Forwarding Lines is displayed", "PASS",runManagerInfoObj);
				if (cnf.JSClick(ManageForwardingLines,driver)) {
					System.out.println("MAnage Forwarding Lines is clicked");
					repfn.FnUpdateTestStepResHTML("Verify if Manage Forwarding Lines is clicked","Manage Forwarding Lines is clicked", "PASS",runManagerInfoObj);
					blnFlag = true;
				} else {
					repfn.FnUpdateTestStepResHTML("Verify if Manage Forwarding Lines is clicked","Manage Forwarding Lines is not clicked", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			} else {
				repfn.FnUpdateTestStepResHTML("Verify if Manage Forwarding Lines is displayed","Manage Forwarding Lines is not displayed", "FAIL",runManagerInfoObj);
				blnFlag = false;
			}

		} catch (Exception e) {
			repfn.FnUpdateTestStepResHTML("Verify the presence of Manage forwarding Lines","Manage forwarding Lines is not present due to some exception", "FAIL",runManagerInfoObj);
			blnFlag = false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	public synchronized boolean ManageforwardingLines_Save(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			List <WebElement> Number_ForwardingLines=driver.findElements(By.xpath(mbo.Number_forwardingNumber)); 
					System.out.println("attribute vale"+Number_ForwardingLines.get(0).getAttribute("defaultValue"));
			if (cnf.FnExplicitWait("XPATH", mbo.ManageForwardingLines_Save,driver)) {
				WebElement ManageForwardingLine_Save = driver.findElement(By
						.xpath(mbo.ManageForwardingLines_Save));
				repfn.FnUpdateTestStepResHTML(
						"Verify if Save button is displayed",
						"Save button is displayed", "PASS",runManagerInfoObj);

				System.out.println("Save button displayed");
				if(cnf.JSClick(ManageForwardingLine_Save,driver))
				{
					System.out.println("Save button is clicked");
					repfn.FnUpdateTestStepResHTML("Click on Save",
							"Save button is clicked", "PASS",runManagerInfoObj);
					repfn.FnUpdateTestStepResHTML(
							"Verify if changes are saved", "Changes are saved",
							"PASS",runManagerInfoObj);
					blnFlag = true;
				} else {

					repfn.FnUpdateTestStepResHTML("Click on Save", "Save button is not clicked", "FAIL",runManagerInfoObj);
					repfn.FnUpdateTestStepResHTML(
							"Verify if changes are saved",
							"changes are not saved", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			} else {
				repfn.FnUpdateTestStepResHTML(
						"Verify if Save button is displayed",
						"Save button is not displayed", "FAIL",runManagerInfoObj);
				blnFlag = false;
			}
		} 
		catch (Exception e) {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify Save button is displayed and clicked",
					"Save button is not displayed and clicked due to exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean ForwardCallsToDropdown_SelectContact(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			
			if(cnf.FnExplicitWait("XPATH", mbo.ForwardAllCallsTo_Dropdown,driver))
			{
				System.out.println("Forward All Calls To dropdown present");
				WebElement ForwardAllCallsTo_dropdown=driver.findElement(By.xpath(mbo.ForwardAllCallsTo_Dropdown));
				repfn.FnUpdateTestStepResHTML("Verify if Forward All Calls to dropdown is available", "Forward All Calls to dropdown is available","PASS",runManagerInfoObj);
				if(cnf.JSClick(ForwardAllCallsTo_dropdown,driver)){
					repfn.FnUpdateTestStepResHTML("Verify if Forward All Calls to dropdown is clicked", "Forward All Calls to dropdown is clicked","PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH", mbo.ForwardCallsToList,driver))
					{
						repfn.FnUpdateTestStepResHTML("Verify if Dropdown list is displayed", "Dropdown list is displayed","PASS",runManagerInfoObj);
						List <WebElement> ForwardingCallsList=driver.findElements(By.xpath(mbo.ForwardCallsToList));
						if(cnf.JSClick(ForwardingCallsList.get(0),driver)){
							repfn.FnUpdateTestStepResHTML("Verify A number is selected from the dropdown", "A number is selected from the dropdown", "PASS",runManagerInfoObj);
							blnFlag=true;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify A number is selected from the dropdown", "A number is not selected from the dropdown", "FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if Dropdown list is displayed", "Dropdown list is not displayed","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if Forward All Calls to dropdown is clicked", "Forward All Calls to dropdown is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else
			{
				if(cnf.FnExplicitWait("XPATH", mbo.ForwardAllCallsTo_NotDropdown,driver))
				{
					WebElement ForwardAllCallsTo_NotDropdown = driver.findElement(By.xpath(mbo.ForwardAllCallsTo_NotDropdown));
					if(ForwardAllCallsTo_NotDropdown.getText().contains("No lines")){
						repfn.FnUpdateTestStepResHTML("Verify if Forward All Calls to dropdown is available","Forward All Calls to dropdown is not available. No phone line is available. Message displayed: "+ForwardAllCallsTo_NotDropdown.getText(),"PASS",runManagerInfoObj);
						boolean blnFlag1 = ManageForwardingLines(driver,runManagerInfoObj);
						if(blnFlag1){
							boolean blnFlag2 = AddNewPhoneNumber_FillDetails(driver,runManagerInfoObj);
							if(blnFlag2){
								boolean blnFlag3 = ManageforwardingLines_Save(driver,runManagerInfoObj);
								if(blnFlag3){									
									if(cnf.FnExplicitWait("XPATH", mbo.ForwardAllCallsTo_Dropdown,driver))
									{
										System.out.println("Forward All Calls To dropdown present");
										WebElement ForwardAllCallsTo_dropdown=driver.findElement(By.xpath(mbo.ForwardAllCallsTo_Dropdown));
										repfn.FnUpdateTestStepResHTML("Verify if Forward All Calls to dropdown is available", "Forward All Calls to dropdown is available","PASS",runManagerInfoObj);
										if(cnf.JSClick(ForwardAllCallsTo_dropdown,driver)){
											repfn.FnUpdateTestStepResHTML("Verify if Forward All Calls to dropdown is clicked", "Forward All Calls to dropdown is clicked","PASS",runManagerInfoObj);
											if(cnf.FnExplicitWait("XPATH", mbo.ForwardCallsToList,driver))
											{
												repfn.FnUpdateTestStepResHTML("Verify if Dropdown list is displayed", "Dropdown list is displayed","PASS",runManagerInfoObj);
												List <WebElement> ForwardingCallsList=driver.findElements(By.xpath(mbo.ForwardCallsToList));
												if(cnf.JSClick(ForwardingCallsList.get(0),driver)){
													repfn.FnUpdateTestStepResHTML("Verify A number is selected from the dropdown", "A number is selected from the dropdown", "PASS",runManagerInfoObj);
													blnFlag=true;
												}
												else{
													repfn.FnUpdateTestStepResHTML("Verify A number is selected from the dropdown", "A number is not selected from the dropdown", "FAIL",runManagerInfoObj);
													blnFlag=false;
												}
											}
											else{
												repfn.FnUpdateTestStepResHTML("Verify if Dropdown list is displayed", "Dropdown list is not displayed","FAIL",runManagerInfoObj);
												blnFlag=false;
											}
										}
										else{
											repfn.FnUpdateTestStepResHTML("Verify if Forward All Calls to dropdown is clicked", "Forward All Calls to dropdown is not clicked","FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									}
									else{
										repfn.FnUpdateTestStepResHTML("Verify if Forwarding destination is added","Forwarding destination is not added","FAIL",runManagerInfoObj); 
										blnFlag=false; 
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify Save button is displayed and clicked","Save button is not displayed and clicked", "FAIL",runManagerInfoObj);
									blnFlag = false;
								}
							}
							else{
								blnFlag = false;
								repfn.FnUpdateTestStepResHTML("Verify if Add New Phone Number is displayed and clicked to add a new entry","Add New Phone Number is not displayed and clicked", "FAIL",runManagerInfoObj);
							}
						}
						else {
							repfn.FnUpdateTestStepResHTML("Verify if Manage Forwarding Lines is displayed and clicked","Manage Forwarding Lines is not displayed and clicked", "FAIL",runManagerInfoObj);
							blnFlag = false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if Forward All Calls to dropdown is available","Forward All Calls to dropdown is not available. Single Phone Line is displayed: "+ForwardAllCallsTo_NotDropdown.getText(),"PASS",runManagerInfoObj);
						blnFlag=true;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if Forward All Calls to dropdown is available","Forward All Calls to dropdown is not available. No phone line is available. No Message displayed","FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify if Forward All Calls to dropdown is available and able to select a contact from that list", "Forward All Calls to dropdown is not available asnd and not able to select a contact from that list due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	 public synchronized boolean Close_ManageLines(WebDriver driver,RunManagerInfo runManagerInfoObj) {
			try {
				if(cnf.FnExplicitWait("XPATH", mbo.ForwardCall_CloseButton,driver)) {
					WebElement Close = driver.findElement(By.xpath(mbo.ForwardCall_CloseButton));
					repfn.FnUpdateTestStepResHTML("Verify if Close link is present","Close link is present", "PASS",runManagerInfoObj);
					Thread.sleep(1000);
					if (cnf.JSClick(Close,driver)) {
						System.out.println("Manage lines is closed");
						Thread.sleep(1000);
						repfn.FnUpdateTestStepResHTML("Verify if Close link is clicked","Close link is clicked", "PASS",runManagerInfoObj);
						blnFlag = true;
					} 
					else {
						repfn.FnUpdateTestStepResHTML("Verify if Close link is clicked","Close link is not clicked", "FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				} else {
					repfn.FnUpdateTestStepResHTML("Verify if Close link is present","Close link is not present", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}

			} catch (Exception e) {
				repfn.FnUpdateTestStepResHTML("Verify if Manage Lines is closed","Manage Lines is not closed due to some exception", "FAIL",runManagerInfoObj);
				blnFlag = false;
				System.err.println("Message : " + e.getMessage());
				System.err.println("Cause : " + e.getCause());

			}
			m1.put("STEPSTATUS", blnFlag);
			return blnFlag;

		}
	 public synchronized boolean FN_ForwardManager_OnOFFstatusCheck(WebDriver driver,RunManagerInfo runManagerInfoObj){
			try{

				// WebElement ForwardOnStatus=driver.findElement(By.xpath(mbo.ForwardOnStatus));
				if(cnf.FnExplicitWait("XPATH",mbo.ForwardOnStatus,driver)){
					repfn.FnUpdateTestStepResHTML("Verify \'Forward On\' Status is displayed  ", "\'Forward On\' Status is displayed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else if(cnf.FnExplicitWait("XPATH", mbo.ForwardOffStatus,driver)){
					repfn.FnUpdateTestStepResHTML("Verify \'Forward Off\' Status is displayed ", "\'Forward Off\' Status is displayed ","PASS",runManagerInfoObj);
					blnFlag=true;  
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify \'Forward OnOff\' Status is displayed ", "\'Forward OnOff\' Status is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			catch (Exception e)

			{
				repfn.FnUpdateTestStepResHTML("Verify ForwardOnOFFStatus is displayed  ", "ForwardOnOFFStatus is not displayed due to some exception ","FAIL",runManagerInfoObj);
				blnFlag=false;
				System.err.println("Message : "+e.getMessage());
				System.err.println("Cause : "+e.getCause());

			}
			m1.put("STEPSTATUS", blnFlag);
			return blnFlag;
		}
	
	public synchronized boolean ForwardCalls_Save(WebDriver driver,RunManagerInfo runManagerInfoObj) {
		try {
			if(cnf.FnExplicitWait("XPATH", mbo.ForwardCall_SaveButton,driver))
			{
				WebElement Save = driver.findElement(By.xpath(mbo.ForwardCall_SaveButton));

				repfn.FnUpdateTestStepResHTML("Verify if Save button is displayed","Save button is displayed", "PASS",runManagerInfoObj);
				if(Save.isEnabled()){
					repfn.FnUpdateTestStepResHTML("Verify if Save button is enabled","Save button is enabled", "PASS",runManagerInfoObj);
					if (cnf.JSClick(Save,driver)) {
						System.out.println("Save is clicked");
						repfn.FnUpdateTestStepResHTML("Verify if Save button is clicked","Save button is clicked", "PASS",runManagerInfoObj);
						blnFlag = true;
					} else {
						System.out.println("Save is not clicked");
						repfn.FnUpdateTestStepResHTML("Verify if Save button is clicked","Save button is not clicked", "FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if Save button is enabled","Save button is not enabled", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}


			} else {
				repfn.FnUpdateTestStepResHTML("Verify if Save button is displayed","Save button is not displayed", "FAIL",runManagerInfoObj);
				blnFlag = false;
			}
		} catch (Exception e) {
			repfn.FnUpdateTestStepResHTML("Verify if Save button is enabled and clicked","Save button is not enabled and not clicked due to some exception","FAIL",runManagerInfoObj);
			blnFlag = false;
			System.err.println("Message : " + e.getMessage());
			System.err.println("Cause : " + e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}


	public synchronized boolean ForwardingMethod_change(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{
			
			if(cnf.FnExplicitWait("XPATH", mbo.ForwardingMethod,driver))
			{
				System.out.println("Method toggle is present");
				WebElement Method_OnOff=driver.findElement(By.xpath(mbo.ForwardingMethod));
				repfn.FnUpdateTestStepResHTML("Verify if Forwarding Method toggle is available", "Method Forwarding Toggle is available","PASS",runManagerInfoObj);
				if(cnf.JSClick(Method_OnOff,driver))
				{
					System.out.println("Forwarding Method can be changed");
					repfn.FnUpdateTestStepResHTML("Verify if Forwarding Method can be changed", "Forwarding Method can be changed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else
				{
					System.out.println("Forwarding Method not be changed ");
					repfn.FnUpdateTestStepResHTML("Verify if Forwarding Method can be changed", "Forwarding Method  cannot be changed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else
			{
				System.out.println("Method toggle is not present");
				repfn.FnUpdateTestStepResHTML("Verify if Forwarding Method toggle is available", "Forwarding Method toggle is not available","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify if Forwarding Method toggle is available and clikced", "Forwarding Method toggle is not available and not clicked due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	}
	public synchronized boolean ForwardCallsTo_Off(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try
		{

			if(cnf.FnExplicitWait("XPATH", mbo.ForwardStatusOFFToggle,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Initially Status is OFF", "Initially Status is OFF","PASS",runManagerInfoObj);
				boolean blnFlag1 = ForwardingStatus_change(driver,runManagerInfoObj);
				if(blnFlag1){
					boolean blnFlag2 = ForwardingMethod_change(driver,runManagerInfoObj);
					boolean blnFlag3 = ForwardCallsToDropdown_SelectContact(driver,runManagerInfoObj);					
					boolean blnFlag4 = ForwardCalls_Save(driver,runManagerInfoObj);

					if(blnFlag2 && blnFlag3 && blnFlag4){
						boolean blnFlag5 = Close_ManageLines(driver,runManagerInfoObj);
						if(blnFlag5){
							boolean blnFlag6 = FN_ForwardManager_OnOFFstatusCheck(driver,runManagerInfoObj);
							if(blnFlag6){
								blnFlag = true;
							}
							else{
								blnFlag = false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify if Close link is present and clicked","Close link is not present and clicked", "FAIL",runManagerInfoObj);
							blnFlag = false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Call Forwarding Changes are saved","Call Forwarding Changes are not saved","FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle can be changed","Call Forwarding status Toggle cannot be changed","FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			}			
			else {
				if(cnf.FnExplicitWait("XPATH", mbo.ForwardStatusONToggle,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Initially Status is ON", "Initially Status is ON","PASS",runManagerInfoObj);
					boolean blnFlag1 = ForwardingStatus_change(driver,runManagerInfoObj);
					if(blnFlag1){
						boolean blnFlag2 = ForwardCalls_Save(driver,runManagerInfoObj);
						if(blnFlag2){
							boolean blnFlag3 = Close_ManageLines(driver,runManagerInfoObj);
							if(blnFlag3){
								boolean blnFlag4 = FN_ForwardManager_OnOFFstatusCheck(driver,runManagerInfoObj);
								if(blnFlag4){
									blnFlag = true;
								}
								else{
									blnFlag = false;
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify if Close link is present and clicked","Close link is not present and clicked", "FAIL",runManagerInfoObj);
								blnFlag = false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Call Forwarding Changes are saved","Call Forwarding Changes are not saved","FAIL",runManagerInfoObj);
							blnFlag = false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle can be changed","Call Forwarding status Toggle cannot be changed","FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify User is able to change status of Forward Manage Calls under Voice Settings ", "User is not able to change status of Forward Manage Calls under Voice Settings ","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
		}
		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify user is  able to change status of Forward manager from on to off viceversa", "User is not able change status of Forward manager from on to off viceversa due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;

	} 
	public synchronized boolean FnForwardingManagerClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		try{
			if(cnf.FnExplicitWait("XPATH", mbo.ForwardingManagerLink,driver)){
				WebElement ForwardingManagerLink=driver.findElement(By.xpath(mbo.ForwardingManagerLink));
				repfn.FnUpdateTestStepResHTML("Verify Forwarding Manager Link is displayed","Forwarding ManagerLink is displayed","PASS",runManagerInfoObj);
				if(cnf.JSClick(ForwardingManagerLink,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Forwarding Manager Link is Clicked ","Forwarding Manager Link is Clicked","PASS",runManagerInfoObj);
					
					Thread.sleep(5000);
					if(cnf.FnExplicitWait("XPATH", mbo.UserPageVerification,driver)){
						WebElement UserPageVerification=driver.findElement(By.xpath(mbo.UserPageVerification));
						if(UserPageVerification.getAttribute("textContent").equalsIgnoreCase("Forwarding Manager")){
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Forwarding Manager Page","User is navigated to Forwarding Manager Page","PASS",runManagerInfoObj);
							blnFlag=true;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Forwarding Manager Page","User is not navigated to Forwarding Manager Page","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User is navigated to Forwarding Manager Page","User is not navigated to Forwarding Manager Page","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Forwarding Manager Link is Clicked ","Forwarding Manager Link is not Clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}



			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Forwarding Manager Link is displayed","Forwarding Manager Link is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify Forwarding Manager Link is clicked or not","Forwarding Manager Link is not Clicked due to some exeception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	public synchronized boolean FnMyProfile(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{
			if(cnf.FnExplicitWait("XPATH", mbo.MyProfile_MyAccount,driver)){
				repfn.FnUpdateTestStepResHTML("Verify My Profile link is displayed","My Profile link is displayed","PASS",runManagerInfoObj);
				WebElement MyProf=driver.findElement(By.xpath(mbo.MyProfile_MyAccount));

				if(cnf.JSClick(MyProf,driver)){
					System.out.println("My Profile page");
					repfn.FnUpdateTestStepResHTML("Verify My Profile link is clicked","My Profile link is clicked","PASS",runManagerInfoObj);

					if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationTwo,driver)){
						WebElement payBill_PageVerification_2=driver.findElement(By.xpath(mbo.PageVerificationTwo));
						if(payBill_PageVerification_2.getAttribute("textContent").equalsIgnoreCase("My Profile")){
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to My Profile Page","User is navigated to My Profile page","PASS",runManagerInfoObj);
							blnFlag=true;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to My Profile Page","User is not navigated to My Profile page","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User is able to verify current page","User is not able to verify current page","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify My Profile link is clicked","My Profile link is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify My Profile link is displayed","My Profile link is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify if user is navigated to My Profile Page", "User is not navigated to My Profile page due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	// To verify if the Footer links are common across all pages//
	public synchronized boolean FnCompanyProfile(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{
			if(cnf.FnExplicitWait("XPATH", mbo.CompanyProfile_MyAccount,driver)){
				WebElement CompanyProfile=driver.findElement(By.xpath(mbo.CompanyProfile_MyAccount));

				repfn.FnUpdateTestStepResHTML("Verify Company Profile link is displayed","Verify Company Profile Link is displayed","PASS",runManagerInfoObj);
				if(cnf.JSClick(CompanyProfile,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Company Profile link is clicked","Verify Company Profile Link is clicked","PASS",runManagerInfoObj);
					Thread.sleep(5000);
					// if(driver.getCurrentUrl().contains("company/profile")){
					if(cnf.FnExplicitWait("XPATH", "//h1[contains(.,'Company Profile')]",driver)){
						repfn.FnUpdateTestStepResHTML("Verify User in Company Profile page","User in Company Profile page","PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User in Company Profile page","User is not in Company Profile page","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Company Profile link is clicked","Verify Company Profile Link is not  clicked","FAIL",runManagerInfoObj);
					blnFlag=true;
				}					
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Company Profile link is displayed","Verify Company Profile Link is not  displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify if User is navigated to Company Profile page", "User is not navigated to Company Profile page due to some exception", "FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	


	public synchronized boolean FN_DeleMessageLinkClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{
			cnf.FnExplicitWait("XPATH",mbo.DeleteMessagebutton,driver);
			WebElement DeleteMsgLink=driver.findElement(By.xpath(mbo.DeleteMessagebutton));
			if(DeleteMsgLink.isDisplayed() ){
				cnf.JSClick(DeleteMsgLink,driver);
				repfn.FnUpdateTestStepResHTML("Verify Delete Message Link is clicked  ", "Delete Message Link is clicked  ","PASS",runManagerInfoObj);
				blnFlag=true;  
			}



			else{
				repfn.FnUpdateTestStepResHTML("Verify Delete Message Link is clicked  ", "Delete Message Link is clicked ","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}



	public synchronized boolean FnDeleteMessage_FaxMessageOpen(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		boolean blnFlag=false;
		try
		{	cnf.FnExplicitWait("XPATH", mbo.FaxIcon,driver);
		WebElement Faxicon=driver.findElement(By.xpath(mbo.FaxIcon));
		if(Faxicon.isDisplayed()){
			System.out.println("Fax icon is prsent");
			repfn.FnUpdateTestStepResHTML("verify if Fax icon is present", "Fax icon is present", "PASS",runManagerInfoObj);
			if(cnf.ElementClick(Faxicon,driver))
			{
				System.out.println("Fax message is expanded");
				repfn.FnUpdateTestStepResHTML("verify if Fax message is expanded", "Fax Message is expanded", "PASS",runManagerInfoObj);

				blnFlag=true;


			}


			else
			{
				System.out.println("Fax message is not expanded");
				repfn.FnUpdateTestStepResHTML("verify if Fax message is expanded", "Fax Message is not expanded", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else
		{
			System.out.println("Fax icon is not prsent");
			repfn.FnUpdateTestStepResHTML("verify if Fax icon is present", "Fax icon is not present", "FAIL",runManagerInfoObj);
			blnFlag=false;
		}

		}catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		System.out.println("boolean value return to this block method: "+blnFlag);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;




	}


	public synchronized boolean FN_CheckingOpenpdfLink(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{
			cnf.FnExplicitWait("XPATH", mbo.Voice_OpenpdfBtn,driver);
			WebElement openPdf= driver.findElement(By.xpath(mbo.Voice_OpenpdfBtn));

			if(openPdf.isDisplayed()){
				repfn.FnUpdateTestStepResHTML("Verify if Open PDF file is displayed"," Open PDF file is displayed ","PASS",runManagerInfoObj);
				blnFlag=true;


			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if Open PDF file is displayed"," Open PDF file is not  displayed ","FAIL",runManagerInfoObj);
				blnFlag=false;
			} 
		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		System.out.println("boolean value return to this block method: "+blnFlag);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean FN_CheckingBlock_UnblockLink(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{


			if(cnf.isElementExist(By.xpath(mbo.Voice_BlockBtn),driver)){
				repfn.FnUpdateTestStepResHTML("Verify if Block buttonis displayed"," Block buttonis displayed ","PASS",runManagerInfoObj);
				blnFlag=true;


			}
			else if(cnf.isElementExist(By.xpath(mbo.Voice_UnblockBtn),driver)){
				repfn.FnUpdateTestStepResHTML("Verify if UnBlock button is displayed"," UNBlock button is displayed ","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if BlockBtn and Unblock button is displayed"," BlockBtn and Unblock button is not  displayed ","FAIL",runManagerInfoObj);
				blnFlag=false;
			} 
		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		System.out.println("boolean value return to this block method: "+blnFlag);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}



	public synchronized boolean FN_CheckingDeleteLink(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{
			cnf.FnExplicitWait("XPATH", mbo.Voice_DeleteBtn,driver);
			WebElement Voice_DeleteBtn= driver.findElement(By.xpath(mbo.Voice_DeleteBtn));

			if(Voice_DeleteBtn.isDisplayed()){
				repfn.FnUpdateTestStepResHTML("Verify if Voice_DeleteBtn is displayed"," Voice_DeleteBtn is displayed ","PASS",runManagerInfoObj);
				blnFlag=true;


			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if Voice_DeleteBtn is displayed"," Voice_DeleteBtn is not  displayed ","FAIL",runManagerInfoObj);
				blnFlag=false;
			} 
		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		System.out.println("boolean value return to this block method: "+blnFlag);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}


	public synchronized boolean FN_CheckingRecoverLink(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{
			cnf.FnExplicitWait("XPATH", mbo.Voice_RecoverBtn,driver);
			WebElement Voice_RecoverBtn= driver.findElement(By.xpath(mbo.Voice_RecoverBtn));

			if(Voice_RecoverBtn.isDisplayed()){
				repfn.FnUpdateTestStepResHTML("Verify if Voice_RecoverBtn is displayed"," Voice_RecoverBtn is displayed ","PASS",runManagerInfoObj);
				blnFlag=true;


			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if Voice_RecoverBtn is displayed"," Voice_RecoverBtn is not  displayed ","FAIL",runManagerInfoObj);
				blnFlag=false;
			} 
		}
		catch (Exception e)

		{
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		System.out.println("boolean value return to this block method: "+blnFlag);
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}

	public synchronized boolean CommonLogin(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
		 boolean b1nFlag=false;
	
		 String AppEnvironment=m1.get("AppURL").toString();

		 System.out.println("inside fn launch:"+ AppEnvironment);


		 String strUserName=m1.get("AppUser").toString();
		 String strPwd=m1.get("AppPwd").toString();







		 try{
			 System.out.println("inside try");
			 if(m1.get("BROWSER").toString().equalsIgnoreCase("IE"))       
			 {

				 String Appurl="http://www.engprod2-spectrumbusiness.net/#/";
				 System.out.println("App url: " + Appurl);
				 driver.navigate().to(Appurl);

			 }else
			 {
				
				 String Appurl=m1.get("AppURL").toString();
				 System.out.println("App url: " + Appurl);
				 driver.navigate().to(Appurl);
			 }

			 //Check for Login Link in Header

			 cnf.FnExplicitWait("XPATH",mbo.LoginLink,driver);
			 WebElement LoginLinkText=driver.findElement(By.xpath(mbo.LoginLink));
			 if(LoginLinkText.isDisplayed())
			 {
				 repfn.FnUpdateTestStepResHTML("Verify Login Link is displaying in Header","Login Link is displaying in Header","PASS",runManagerInfoObj);	
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify Login Link is displaying in Header","Login Link not displaying in Header ","FAIL",runManagerInfoObj);	
			 }


			 //Check Login Dropdown

			 cnf.FnExplicitWait("XPATH",mbo.LoginLinkDropDown,driver);
			 WebElement LoginLinkDropdown=driver.findElement(By.xpath(mbo.LoginLinkDropDown));
			 if(LoginLinkDropdown.isDisplayed())
			 {
				 repfn.FnUpdateTestStepResHTML("Verify Login Link is displaying in Header","Login Link is displaying in Header","PASS",runManagerInfoObj);
				 b1nFlag=cnf.JSClick(LoginLinkDropdown,driver);
				 repfn.FnUpdateTestStepResHTML("Verify Login Link is clicked","Login Link is clicked","PASS",runManagerInfoObj);	
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify Login Link is displaying in Header","Login Link not displaying in Header ","FAIL",runManagerInfoObj);	
			 }

			 cnf.FnExplicitWait("XPATH",mbo.HeaderUserName,driver);
			 String AppuserName2=m1.get("AppUsernameChangeUser").toString();
			 System.out.println("App url: " + AppuserName2);

			 if(cnf.FnSetWebEdit(mbo.HeaderUserName,AppuserName2,driver))	
			 {
				 repfn.FnUpdateTestStepResHTML("Enter Spectrum Business User ID: " , "User ID is entered","PASS",runManagerInfoObj);

				 //Enter Password
				 cnf.FnExplicitWait("XPATH",mbo.HeaderPassword,driver);
				 String AppPassword=m1.get("AppPassword").toString();
				 System.out.println("App url: " + AppPassword);
				 if(cnf.FnSetWebEdit(mbo.HeaderPassword,AppPassword,driver))	
				 {
					 repfn.FnUpdateTestStepResHTML("Enter Password", "Password is entered","PASS",runManagerInfoObj);	
				 }
				 else
				 {
					 repfn.FnUpdateTestStepResHTML("Enter Password", "Password is entered","FAIL",runManagerInfoObj);	
				 }
			 }
		 }
		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Login to Spectrum Business application", "Login operation not performed","FAIL",runManagerInfoObj);
			 b1nFlag=false;
		 }             
		 m1.put("STEPSTATUS", blnFlag);
		 System.out.println( "launch flag: "+blnFlag);
		 return b1nFlag;
	 }

	 public synchronized boolean FnVerifyViewDeletedFaxMessage(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

		 try{

			 if(cnf.FnExplicitWait("XPATH", mbo.showDeleteMessages,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify user has an option to view Deleted Messages", "User has an option to view Deleted Messages","PASS",runManagerInfoObj);
				 WebElement showDeleteMessages= driver.findElement(By.xpath(mbo.showDeleteMessages));
				 if(cnf.JSClick(showDeleteMessages,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify user has clicked the option to view Deleted Messages or not", 
							 "User has clicked the option to view Deleted Messages","PASS",runManagerInfoObj);
					 Thread.sleep(5000);

					 if(cnf.FnExplicitWait("XPATH", mbo.Voice_Pdf,driver)){
						 List <WebElement> FaxMessageList=driver.findElements(By.xpath(mbo.Voice_Pdf));
						 if(FaxMessageList.size() > 0){
							 repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are displayed","PASS",runManagerInfoObj);
							 WebElement one = FaxMessageList.get(0);
							 if(cnf.JSClick(one,driver)){
								 repfn.FnUpdateTestStepResHTML("Verify if any Fax message is clicked or not from the fax list","Fax message is clicked from Fax Message List","PASS",runManagerInfoObj);

								 if(cnf.FnExplicitWait("XPATH", mbo.Voice_Openpdf,driver)){
									 List<WebElement> Voice_Openpdf= driver.findElements(By.xpath(mbo.Voice_Openpdf));
									 if(Voice_Openpdf.get(0).isDisplayed()){
										 repfn.FnUpdateTestStepResHTML("Verify if Open PDF Option is displayed","Open PDF Option is displayed","PASS",runManagerInfoObj);
										 blnFlag	= true;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify if Open PDF Option is displayed","Open PDF Option is not displayed","FAIL",runManagerInfoObj);
										 blnFlag	= false;

									 }
								 }
								 else{
									 repfn.FnUpdateTestStepResHTML("Verify if Open PDF Option is displayed","Open PDF Option is not displayed","FAIL",runManagerInfoObj);
									 blnFlag	= false;
								 }

								 if(cnf.FnExplicitWait("XPATH", mbo.Voice_PdfBlock,driver)){
									 List<WebElement> Voice_Block= driver.findElements(By.xpath(mbo.Voice_PdfBlock));
									 if(Voice_Block.get(0).isDisplayed()){
										 repfn.FnUpdateTestStepResHTML("Verify if Block Option is displayed","Block Option is displayed","PASS",runManagerInfoObj);
										 blnFlag	= true;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify if Block Option is displayed","Block Option is not displayed","FAIL",runManagerInfoObj);
										 blnFlag	= false;

									 }
								 }
								 else{
									 repfn.FnUpdateTestStepResHTML("Verify if Block Option is displayed","Block Option is not displayed","FAIL",runManagerInfoObj);
									 blnFlag	= false;
								 }

								 if(cnf.FnExplicitWait("XPATH", mbo.Voice_Delete,driver)){
									 List<WebElement> Voice_Delete= driver.findElements(By.xpath(mbo.Voice_Delete));
									 if(Voice_Delete.get(0).isDisplayed()){
										 repfn.FnUpdateTestStepResHTML("Verify if Delete Option is displayed","Delete Option is displayed","PASS",runManagerInfoObj);
										 blnFlag	= true;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify if Delete Option is displayed","Delete Option is not displayed","FAIL",runManagerInfoObj);
										 blnFlag	= false;

									 }
								 }
								 else{
									 repfn.FnUpdateTestStepResHTML("Verify if Delete Option is displayed","Delete Option is not displayed","FAIL",runManagerInfoObj);
									 blnFlag	= false;
								 }

								 if(cnf.FnExplicitWait("XPATH", mbo.Voice_Recover,driver)){
									 List<WebElement> Voice_Recover= driver.findElements(By.xpath(mbo.Voice_Recover));
									 if(Voice_Recover.get(0).isDisplayed()){
										 repfn.FnUpdateTestStepResHTML("Verify if Recover Option is displayed","Recover Option is displayed","PASS",runManagerInfoObj);
										 blnFlag	= true;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify if Recover Option is displayed","Recover Option is not displayed","FAIL",runManagerInfoObj);
										 blnFlag	= false;

									 }
								 }
								 else{
									 repfn.FnUpdateTestStepResHTML("Verify if Recover Option is displayed","Recover Option is not displayed","FAIL",runManagerInfoObj);
									 blnFlag	= false;
								 }

							 }
							 else{
								 repfn.FnUpdateTestStepResHTML("Verify if any Fax message is clicked or not from the fax list","Fax message is not clicked from Fax Message List","FAIL",runManagerInfoObj);
								 blnFlag	= false;
							 }
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are not displayed","FAIL",runManagerInfoObj);
							 blnFlag	= false;
						 }
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify user has clicked the option to view Deleted Messages or not", 
							 "User has not clicked the option to view Deleted Messages","FAIL",runManagerInfoObj);
					 blnFlag	= false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify user has an option to view Deleted Messages", "User does not have an option to view Deleted Messages","FAIL",runManagerInfoObj);
				 blnFlag	= false;
			 }

		 }

		 catch(Exception e)
		 {

			 repfn.FnUpdateTestStepResHTML("Verify user is able to see Deleted Fax Messages options.", "User is not able to see Deleted Fax Messages options due to some exception.","FAIL",runManagerInfoObj);
			 blnFlag	=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }

		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	 public synchronized boolean FnVerifyDeleteFaxMessage_Cancel(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{

			 if(cnf.FnExplicitWait("XPATH", mbo.showDeleteMessages,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify user has an option to view Deleted Messages", "User has an option to view Deleted Messages","PASS",runManagerInfoObj);
				 WebElement showDeleteMessages= driver.findElement(By.xpath(mbo.showDeleteMessages));
				 if(cnf.JSClick(showDeleteMessages,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify Deleted Messages link is clicked or not", "Deleted Messages link is clicked","PASS",runManagerInfoObj);
					 Thread.sleep(5000);

					 if(cnf.FnExplicitWait("XPATH", mbo.Voice_FaxMessageList,driver)){
						 List <WebElement> FaxMessageList=driver.findElements(By.xpath(mbo.Voice_FaxMessageList));
						 if(FaxMessageList.size() > 0){
							 repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are displayed","PASS",runManagerInfoObj);
							 if(cnf.FnExplicitWait("XPATH", mbo.selectFaxMessage,driver)){
								 List <WebElement> selectFaxMessageList=driver.findElements(By.xpath(mbo.selectFaxMessage));
								 if(selectFaxMessageList.size() > 0){
									 String fax_msg=selectFaxMessageList.get(0).getText();
									 WebElement selectFaxMessage= selectFaxMessageList.get(0);

									 if(cnf.JSClick(selectFaxMessage,driver)){
										 repfn.FnUpdateTestStepResHTML("Verify Single Fax message is selected", "Single Fax message is selected","PASS",runManagerInfoObj);
										 if(cnf.FnExplicitWait("XPATH", mbo.deletePermanent,driver)){
											 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanently delete the fax message", 
													 "User has an option to permanently delete the fax message","PASS",runManagerInfoObj);
											 WebElement deletePermanent= driver.findElement(By.xpath(mbo.deletePermanent));
											 if(cnf.JSClick(deletePermanent,driver)){
												 repfn.FnUpdateTestStepResHTML("Verify Permanently Delete link is clicked or not", "Permanently Delete link is clicked","PASS",runManagerInfoObj);
												 if(cnf.FnExplicitWait("XPATH", mbo.CancelDelete,driver)){
													 repfn.FnUpdateTestStepResHTML("Verify popup to confirm permanent delete is present or not", "Popup to confirm permanent delete is present","PASS",runManagerInfoObj);
													 repfn.FnUpdateTestStepResHTML("Verify user has an option to cancel permanent deleting Fax message ", 
															 "User has an option to cancel permanent deleting Fax message","PASS",runManagerInfoObj);
													 WebElement CancelDeleteMessages= driver.findElement(By.xpath(mbo.CancelDelete));
													 if(cnf.JSClick(CancelDeleteMessages,driver)){
														 repfn.FnUpdateTestStepResHTML("Verify cancel link is clicked or not", "Cancel link is clicked","PASS",runManagerInfoObj);
														 Thread.sleep(5000);
														 cnf.JSClick(selectFaxMessage,driver);
														 if(cnf.FnExplicitWait("XPATH", mbo.Voice_FaxMessageList,driver)){
															 repfn.FnUpdateTestStepResHTML("Verify User is navigated back to deleted messages page or not", 
																	 "User is navigated back to deleted messages page","PASS",runManagerInfoObj);
															 List <WebElement> Voice_FaxMessageList=driver.findElements(By.xpath(mbo.Voice_FaxMessageList));
															 if(Voice_FaxMessageList.get(0).getText().equalsIgnoreCase(fax_msg))
															 {
																 repfn.FnUpdateTestStepResHTML("Verify Fax message is permanently deleted or not", "Fax message is not permanently deleted","PASS",runManagerInfoObj);
																 blnFlag	= true;
															 }
															 else{
																 repfn.FnUpdateTestStepResHTML("Verify Fax message is permanently deleted or not", "Fax message is permanently deleted","FAIL",runManagerInfoObj);
																 blnFlag	= false;
															 }
														 }
														 else{
															 repfn.FnUpdateTestStepResHTML("Verify User is navigated back to deleted messages page or not", "User is not navigated back to deleted messages page","PASS",runManagerInfoObj);
															 blnFlag	= false;
														 }
													 }
													 else{
														 repfn.FnUpdateTestStepResHTML("Verify cancel link is clicked or not", "Cancel link is not clicked","FAIL",runManagerInfoObj);
														 blnFlag	= false;
													 }
												 }
												 else{
													 repfn.FnUpdateTestStepResHTML("Verify popup to confirm permanent delete is present or not", "Popup to confirm permanent delete is not present","FAIL",runManagerInfoObj);
													 repfn.FnUpdateTestStepResHTML("Verify user has an option to cancel permanent deleting Fax message ", 
															 "User does not have an option to cancel permanent deleting Fax message","FAIL",runManagerInfoObj);
													 blnFlag	= false;
												 }
											 }
											 else{
												 repfn.FnUpdateTestStepResHTML("Verify Permanently Delete link is clicked or not", "Permanently Delete link is not clicked","FAIL",runManagerInfoObj);
												 blnFlag	= false;
											 }
										 }
										 else{
											 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanently delete the fax message", 
													 "User does not have an option to permanently delete the fax message","FAIL",runManagerInfoObj);
											 blnFlag	= false;
										 }
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify Single Fax message is selected", "Single Fax message is not selected","FAIL",runManagerInfoObj);
										 blnFlag	= false;
									 }
								 }
							 }
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are not displayed","FAIL",runManagerInfoObj);
							 blnFlag	= false;
						 }
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Deleted Messages link is clicked or not", "Deleted Messages link is not clicked","FAIL",runManagerInfoObj);
					 blnFlag	= false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify user has an option to view Deleted Messages", "User does not have an option to view Deleted Messages","FAIL",runManagerInfoObj);
				 blnFlag	= false;
			 }
		 }

		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify user has an option to cancel permanent deleting the fax message", 
					 "User does not have an option to cancel permanent deleting the fax message due to some exception.","FAIL",runManagerInfoObj);
			 blnFlag	= false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }


	 public synchronized boolean FnVerifyDeleteFaxMessage(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{



			 if(cnf.FnExplicitWait("XPATH", mbo.showDeleteMessages,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify user has an option to view Deleted Messages", "User has an option to view Deleted Messages","PASS",runManagerInfoObj);
				 WebElement showDeleteMessages= driver.findElement(By.xpath(mbo.showDeleteMessages));
				 if(cnf.JSClick(showDeleteMessages,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify Deleted Messages link is clicked or not", "Deleted Messages link is clicked","PASS",runManagerInfoObj);
					 Thread.sleep(5000);

					 if(cnf.FnExplicitWait("XPATH", mbo.Voice_FaxMessageList,driver)){
						 List <WebElement> FaxMessageList=driver.findElements(By.xpath(mbo.Voice_FaxMessageList));
						 if(FaxMessageList.size() > 0){
							 repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are displayed","PASS",runManagerInfoObj);
							 if(cnf.FnExplicitWait("XPATH", mbo.selectFaxMessage,driver)){
								 List <WebElement> selectFaxMessageList=driver.findElements(By.xpath(mbo.selectFaxMessage));
								 if(selectFaxMessageList.size() > 0){
									 String fax_msg=selectFaxMessageList.get(0).getText();
									 WebElement selectFaxMessage= selectFaxMessageList.get(0);

									 if(cnf.JSClick(selectFaxMessage,driver)){
										 repfn.FnUpdateTestStepResHTML("Verify Single Fax message is selected", "Single Fax message is selected","PASS",runManagerInfoObj);
										 if(cnf.FnExplicitWait("XPATH", mbo.deletePermanent,driver)){
											 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanently delete the fax message", 
													 "User has an option to permanently delete the fax message","PASS",runManagerInfoObj);
											 WebElement deletePermanent= driver.findElement(By.xpath(mbo.deletePermanent));
											 if(cnf.JSClick(deletePermanent,driver)){
												 repfn.FnUpdateTestStepResHTML("Verify Permanently Delete link is clicked or not", "Permanently Delete link is clicked","PASS",runManagerInfoObj);
												 if(cnf.FnExplicitWait("XPATH", mbo.ConfirmBtn,driver)){
													 repfn.FnUpdateTestStepResHTML("Verify popup to confirm permanent delete is present or not", "Popup to confirm permanent delete is present","PASS",runManagerInfoObj);
													 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanent delete Fax message ", 
															 "User has an option to permanent delete Fax message","PASS",runManagerInfoObj);
													 WebElement ConfirmBtn= driver.findElement(By.xpath(mbo.ConfirmBtn));
													 if(cnf.JSClick(ConfirmBtn,driver)){
														 repfn.FnUpdateTestStepResHTML("Verify Confirm link is clicked or not", "Confirm link is clicked","PASS",runManagerInfoObj);
														 Thread.sleep(5000);
														 //cnf.JSClick(selectFaxMessage);
														 if(cnf.FnExplicitWait("XPATH", mbo.Voice_FaxMessageList,driver)){
															 repfn.FnUpdateTestStepResHTML("Verify User is navigated back to deleted messages page or not", 
																	 "User is navigated back to deleted messages page","PASS",runManagerInfoObj);
															 List <WebElement> Voice_FaxMessageList=driver.findElements(By.xpath(mbo.Voice_FaxMessageList));
															 if(Voice_FaxMessageList.get(0).getText().equalsIgnoreCase(fax_msg))
															 {
																 repfn.FnUpdateTestStepResHTML("Verify Fax message is permanently deleted or not", "Fax message is not permanently deleted","FAIL",runManagerInfoObj);
																 blnFlag	= false;
															 }
															 else{
																 repfn.FnUpdateTestStepResHTML("Verify Fax message is permanently deleted or not", "Fax message is permanently deleted","PASS",runManagerInfoObj);
																 blnFlag	= true;
															 }
														 }
														 else{
															 repfn.FnUpdateTestStepResHTML("Verify User is navigated back to deleted messages page or not", "User is not navigated back to deleted messages page","PASS",runManagerInfoObj);
															 blnFlag	= false;
														 }
													 }
													 else{
														 repfn.FnUpdateTestStepResHTML("Verify cancel link is clicked or not", "Cancel link is not clicked","FAIL",runManagerInfoObj);
														 blnFlag	= false;
													 }
												 }
												 else{
													 repfn.FnUpdateTestStepResHTML("Verify popup to confirm permanent delete is present or not", "Popup to confirm permanent delete is not present","FAIL",runManagerInfoObj);
													 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanent delete Fax message ", 
															 "User does not have an option to permanent delete Fax message","FAIL",runManagerInfoObj);
													 blnFlag	= false;
												 }
											 }
											 else{
												 repfn.FnUpdateTestStepResHTML("Verify Permanently Delete link is clicked or not", "Permanently Delete link is not clicked","FAIL",runManagerInfoObj);
												 blnFlag	= false;
											 }
										 }
										 else{
											 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanently delete the fax message", 
													 "User does not have an option to permanently delete the fax message","FAIL",runManagerInfoObj);
											 blnFlag	= false;
										 }
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify Single Fax message is selected", "Single Fax message is not selected","FAIL",runManagerInfoObj);
										 blnFlag	= false;
									 }
								 }
							 }
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are not displayed","FAIL",runManagerInfoObj);
							 blnFlag	= false;
						 }
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Deleted Messages link is clicked or not", "Deleted Messages link is not clicked","FAIL",runManagerInfoObj);
					 blnFlag	= false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify user has an option to view Deleted Messages", "User does not have an option to view Deleted Messages","FAIL",runManagerInfoObj);
				 blnFlag	= false;
			 }

		 }

		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanently delete the fax message", 
					 "User does not have an option to permanently delete the fax message due to some exception","FAIL",runManagerInfoObj);
			 blnFlag	= false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }

		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }

	 public synchronized boolean FnVerifyDeleteFaxMessagesCancel(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{

			 if(cnf.FnExplicitWait("XPATH", mbo.showDeleteMessages,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify user has an option to view Deleted Messages", "User has an option to view Deleted Messages","PASS",runManagerInfoObj);
				 WebElement showDeleteMessages= driver.findElement(By.xpath(mbo.showDeleteMessages));
				 if(cnf.JSClick(showDeleteMessages,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify Deleted Messages link is clicked or not", "Deleted Messages link is clicked","PASS",runManagerInfoObj);
					 Thread.sleep(5000);

					 if(cnf.FnExplicitWait("XPATH", mbo.Voice_FaxMessageList,driver)){
						 List <WebElement> FaxMessageList=driver.findElements(By.xpath(mbo.Voice_FaxMessageList));
						 if(FaxMessageList.size() > 0){
							 repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are displayed","PASS",runManagerInfoObj);
							 if(cnf.FnExplicitWait("XPATH", mbo.selectFaxMessage,driver)){
								 List <WebElement> selectFaxMessageList=driver.findElements(By.xpath(mbo.selectFaxMessage));
								 if(selectFaxMessageList.size() > 0){
									 repfn.FnUpdateTestStepResHTML("Verify user has an option to select check-box against each fax message",
											 "User has an option to select check-box against each fax message","PASS",runManagerInfoObj);
									 if(cnf.FnExplicitWait("XPATH", mbo.deletePermanent,driver)){
										 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanently delete the fax message", 
												 "User has an option to permanently delete the fax message","PASS",runManagerInfoObj);
										 blnFlag	= true;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanent delete the fax message", 
												 "User does not have an option to permanent delete the fax message","FAIL",runManagerInfoObj);
										 blnFlag	= false;
									 }

									 WebElement selectFaxMessage= selectFaxMessageList.get(0);
									 if(cnf.JSClick(selectFaxMessage,driver)){
										 repfn.FnUpdateTestStepResHTML("Verify Single Fax message is selected", "Single Fax message is selected","PASS",runManagerInfoObj);
										 if(cnf.FnExplicitWait("XPATH", mbo.deletePermanent,driver)){
											 WebElement deletePermanentSingle= driver.findElement(By.xpath(mbo.deletePermanent));
											 if(deletePermanentSingle.isDisplayed() &&  deletePermanentSingle.isEnabled()){
												 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is enabled", "Delete Permanent option is enabled after selecting a message","PASS",runManagerInfoObj);
												 blnFlag	= true;
											 }
											 else{
												 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is enabled", "Delete Permanent option is not enabled after selecting a message","FAIL",runManagerInfoObj);
												 blnFlag	= false;
											 }	 
										 }
										 else{
											 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is displayed", "Delete Permanent option is not displayed","FAIL",runManagerInfoObj);
											 blnFlag	= false;
										 } 
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify Single Fax message is selected", "Single Fax message is not selected","FAIL",runManagerInfoObj);
										 blnFlag	= false;
									 }

									 cnf.JSClick(selectFaxMessage,driver);
									 if(cnf.FnExplicitWait("XPATH", mbo.deletePermanent,driver)){
										 WebElement deletePermanentSingleTwo= driver.findElement(By.xpath(mbo.deletePermanent));
										 if(deletePermanentSingleTwo.isDisplayed() && !deletePermanentSingleTwo.isEnabled()){
											 repfn.FnUpdateTestStepResHTML("Verify Delete option is disabled", "Delete option is not enabled after de-selecting a message","PASS",runManagerInfoObj);
										 }
										 else{
											 repfn.FnUpdateTestStepResHTML("Verify Delete option is disabled", "Delete option is enabled after de-selecting a message","FAIL",runManagerInfoObj);
											 blnFlag	= false;
										 }
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is displayed", "Delete Permanent option is not displayed","FAIL",runManagerInfoObj);
										 blnFlag	= false;
									 }

									 for(int i=0;i<selectFaxMessageList.size();i++){
										 cnf.JSClick(selectFaxMessageList.get(i),driver);
									 }

									 if(cnf.FnExplicitWait("XPATH", mbo.deletePermanent,driver)){
										 WebElement deletePermanentMultiple= driver.findElement(By.xpath(mbo.deletePermanent));
										 cnf.ScrollToView(deletePermanentMultiple,driver);
										 if(deletePermanentMultiple.isDisplayed() && deletePermanentMultiple.isEnabled()){
											 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is enabled", "Delete Permanent option is enabled after selecting all fax messages","PASS",runManagerInfoObj);
											 if(cnf.JSClick(deletePermanentMultiple,driver)){
												 repfn.FnUpdateTestStepResHTML("Verify Delete permanently link is clicked or not", 
														 "Delete permanently link is clicked","PASS",runManagerInfoObj);
												 if(cnf.FnExplicitWait("XPATH", mbo.CancelDelete,driver)){
													 repfn.FnUpdateTestStepResHTML("Verify popup to confirm permanent delete is present or not", "Popup to confirm permanent delete is present","PASS",runManagerInfoObj);
													 repfn.FnUpdateTestStepResHTML("Verify user has an option to cancel permanent deleting Fax messages ", 
															 "User has an option to cancel permanent deleting Fax messages","PASS",runManagerInfoObj);
													 WebElement CancelDeleteMessages= driver.findElement(By.xpath(mbo.CancelDelete));
													 if(cnf.JSClick(CancelDeleteMessages,driver)){
														 repfn.FnUpdateTestStepResHTML("Verify cancel link is clicked or not", "Cancel link is clicked","PASS",runManagerInfoObj);
														 blnFlag	= true;
														 Thread.sleep(5000);
													 }
													 else{
														 repfn.FnUpdateTestStepResHTML("Verify cancel link is clicked or not", "Cancel link is not clicked","FAIL",runManagerInfoObj);
														 blnFlag	= false;
													 }
												 }
												 else{
													 repfn.FnUpdateTestStepResHTML("Verify popup to confirm permanent delete is present or not", "Popup to confirm permanent delete is not present","FAIL",runManagerInfoObj);
													 repfn.FnUpdateTestStepResHTML("Verify user has an option to cancel permanent deleting Fax message ", 
															 "User does not have an option to cancel permanent deleting Fax message","FAIL",runManagerInfoObj);
													 blnFlag	= false;
												 }
											 }
											 else{
												 repfn.FnUpdateTestStepResHTML("Verify Delete permanently link is clicked or not", 
														 "Delete permanently link is not clicked","FAIL",runManagerInfoObj);
												 blnFlag	= false;
											 }
										 }
										 else{
											 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is enabled", "Delete Permanent option is not enabled after selecting all fax messages","PASS",runManagerInfoObj);
											 blnFlag	= false;
										 }

									 }

									 List <WebElement> selectFaxMessageListNew=driver.findElements(By.xpath(mbo.selectFaxMessage));
									 if(selectFaxMessageListNew.size()>0)
									 {
										 repfn.FnUpdateTestStepResHTML("Verify fax messages are permanently deleted or not", 
												 "Fax messages are not permanently deleted","PASS",runManagerInfoObj);
										 blnFlag	= true;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify user fax messages are permanently deleted or not", 
												 "Fax messages are permanently deleted","FAIL",runManagerInfoObj);
										 blnFlag	= false;
									 }

								 }
								 else{
									 repfn.FnUpdateTestStepResHTML("Verify user has an option to select check-box against each fax message",
											 "User does not have an option to select check-box against each fax message","FAIL",runManagerInfoObj);
									 blnFlag	= false;
								 }
							 }
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are not displayed","FAIL",runManagerInfoObj);
							 blnFlag	= false;
						 }
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Deleted Messages link is clicked or not", "Deleted Messages link is not clicked","FAIL",runManagerInfoObj);
					 blnFlag	= false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify user has an option to view Deleted Messages", "User does not have an option to view Deleted Messages","FAIL",runManagerInfoObj);
				 blnFlag	= false;
			 }
		 }

		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify user has an option to cancel permanent deleting the fax messages", 
					 "User does not have an option to cancel permanent deleting the fax messages","FAIL",runManagerInfoObj);
			 blnFlag	= false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }

		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	 public synchronized boolean FnVerifyDeleteFaxMessages(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{

			 if(cnf.FnExplicitWait("XPATH", mbo.showDeleteMessages,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify user has an option to view Deleted Messages", "User has an option to view Deleted Messages","PASS",runManagerInfoObj);
				 WebElement showDeleteMessages= driver.findElement(By.xpath(mbo.showDeleteMessages));
				 if(cnf.JSClick(showDeleteMessages,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify Deleted Messages link is clicked or not", "Deleted Messages link is clicked","PASS",runManagerInfoObj);
					 Thread.sleep(5000);

					 if(cnf.FnExplicitWait("XPATH", mbo.Voice_FaxMessageList,driver)){
						 List <WebElement> FaxMessageList=driver.findElements(By.xpath(mbo.Voice_FaxMessageList));
						 if(FaxMessageList.size() > 0){
							 repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are displayed","PASS",runManagerInfoObj);
							 if(cnf.FnExplicitWait("XPATH", mbo.selectFaxMessage,driver)){
								 List <WebElement> selectFaxMessageList=driver.findElements(By.xpath(mbo.selectFaxMessage));
								 if(selectFaxMessageList.size() > 0){
									 repfn.FnUpdateTestStepResHTML("Verify user has an option to select check-box against each fax message",
											 "User has an option to select check-box against each fax message","PASS",runManagerInfoObj);
									 if(cnf.FnExplicitWait("XPATH", mbo.deletePermanent,driver)){
										 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanently delete the fax message", 
												 "User has an option to permanently delete the fax message","PASS",runManagerInfoObj);
										 blnFlag	= true;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanent delete the fax message", 
												 "User does not have an option to permanent delete the fax message","FAIL",runManagerInfoObj);
										 blnFlag	= false;
									 }

									 WebElement selectFaxMessage= selectFaxMessageList.get(0);
									 if(cnf.JSClick(selectFaxMessage,driver)){
										 repfn.FnUpdateTestStepResHTML("Verify Single Fax message is selected", "Single Fax message is selected","PASS",runManagerInfoObj);
										 if(cnf.FnExplicitWait("XPATH", mbo.deletePermanent,driver)){
											 WebElement deletePermanentSingle= driver.findElement(By.xpath(mbo.deletePermanent));
											 if(deletePermanentSingle.isDisplayed() &&  deletePermanentSingle.isEnabled()){
												 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is enabled", "Delete Permanent option is enabled after selecting a message","PASS",runManagerInfoObj);
												 blnFlag	= true;
											 }
											 else{
												 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is enabled", "Delete Permanent option is not enabled after selecting a message","FAIL",runManagerInfoObj);
												 blnFlag	= false;
											 }	 
										 }
										 else{
											 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is displayed", "Delete Permanent option is not displayed","FAIL",runManagerInfoObj);
											 blnFlag	= false;
										 } 
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify Single Fax message is selected", "Single Fax message is not selected","FAIL",runManagerInfoObj);
										 blnFlag	= false;
									 }

									 cnf.JSClick(selectFaxMessage,driver);
									 if(cnf.FnExplicitWait("XPATH", mbo.deletePermanent,driver)){
										 WebElement deletePermanentSingleTwo= driver.findElement(By.xpath(mbo.deletePermanent));
										 if(deletePermanentSingleTwo.isDisplayed() && !deletePermanentSingleTwo.isEnabled()){
											 repfn.FnUpdateTestStepResHTML("Verify Delete option is disabled", "Delete option is not enabled after de-selecting a message","PASS",runManagerInfoObj);
										 }
										 else{
											 repfn.FnUpdateTestStepResHTML("Verify Delete option is disabled", "Delete option is enabled after de-selecting a message","FAIL",runManagerInfoObj);
											 blnFlag	= false;
										 }
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is displayed", "Delete Permanent option is not displayed","FAIL",runManagerInfoObj);
										 blnFlag	= false;
									 }

									 for(int i=0;i<selectFaxMessageList.size();i++){
										 cnf.JSClick(selectFaxMessageList.get(i),driver);
									 }

									 if(cnf.FnExplicitWait("XPATH", mbo.deletePermanent,driver)){
										 WebElement deletePermanentMultiple= driver.findElement(By.xpath(mbo.deletePermanent));
										 cnf.ScrollToView(deletePermanentMultiple,driver);
										 if(deletePermanentMultiple.isDisplayed() && deletePermanentMultiple.isEnabled()){
											 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is enabled", "Delete Permanent option is enabled after selecting all fax messages","PASS",runManagerInfoObj);
											 if(cnf.JSClick(deletePermanentMultiple,driver)){
												 repfn.FnUpdateTestStepResHTML("Verify Delete permanently link is clicked or not", 
														 "Delete permanently link is clicked","PASS",runManagerInfoObj);
												 if(cnf.FnExplicitWait("XPATH", mbo.ConfirmCancel,driver)){
													 repfn.FnUpdateTestStepResHTML("Verify popup to confirm permanent delete is present or not", "Popup to confirm permanent delete is present","PASS",runManagerInfoObj);
													 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanent delete Fax messages ", 
															 "User has an option to permanent delete Fax messages","PASS",runManagerInfoObj);
													 WebElement ConfirmCancel= driver.findElement(By.xpath(mbo.ConfirmCancel));
													 if(cnf.JSClick(ConfirmCancel,driver)){
														 repfn.FnUpdateTestStepResHTML("Verify Confirm link is clicked or not", "Confirm link is clicked","PASS",runManagerInfoObj);
														 blnFlag	= true;
														 Thread.sleep(5000);
													 }
													 else{
														 repfn.FnUpdateTestStepResHTML("Verify Confirm link is clicked or not", "Confirm link is not clicked","FAIL",runManagerInfoObj);
														 blnFlag	= false;
													 }
												 }
												 else{
													 repfn.FnUpdateTestStepResHTML("Verify popup to confirm permanent delete is present or not", "Popup to confirm permanent delete is not present","FAIL",runManagerInfoObj);
													 repfn.FnUpdateTestStepResHTML("Verify user has an option to cancel permanent deleting Fax message ", 
															 "User does not have an option to cancel permanent deleting Fax message","FAIL",runManagerInfoObj);
													 blnFlag	= false;
												 }
											 }
											 else{
												 repfn.FnUpdateTestStepResHTML("Verify Delete permanently link is clicked or not", 
														 "Delete permanently link is not clicked","FAIL",runManagerInfoObj);
												 blnFlag	= false;
											 }
										 }
										 else{
											 repfn.FnUpdateTestStepResHTML("Verify Delete Permanent option is enabled", "Delete Permanent option is not enabled after selecting all fax messages","PASS",runManagerInfoObj);
											 blnFlag	= false;
										 }

									 }

									 List <WebElement> selectFaxMessageListNew=driver.findElements(By.xpath(mbo.selectFaxMessage));
									 if(selectFaxMessageListNew.size()>0)
									 {
										 repfn.FnUpdateTestStepResHTML("Verify the fax messages are permanently deleted ", 
												 "Fax messages are not permanently deleted","FAIL",runManagerInfoObj);
										 blnFlag	= false;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify the fax messages are permanently deleted ", 
												 "Fax messages permanently deleted","PASS",runManagerInfoObj);
										 blnFlag	= true;
									 }

								 }
								 else{
									 repfn.FnUpdateTestStepResHTML("Verify user has an option to select check-box against each fax message",
											 "User does not have an option to select check-box against each fax message","FAIL",runManagerInfoObj);
									 blnFlag	= false;
								 }
							 }
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify if Fax messages are displayed","Fax messages are not displayed","FAIL",runManagerInfoObj);
							 blnFlag	= false;
						 }
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Deleted Messages link is clicked or not", "Deleted Messages link is not clicked","FAIL",runManagerInfoObj);
					 blnFlag	= false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify user has an option to view Deleted Messages", "User does not have an option to view Deleted Messages","FAIL",runManagerInfoObj);
				 blnFlag	= false;
			 }
		 }

		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify user has an option to permanent delete the fax messages", 
					 "User does not have an option to permanent delete the fax messages","FAIL",runManagerInfoObj);
			 blnFlag	= false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }

		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	 public synchronized boolean fn_MissedCalls_SearchByLastName(WebDriver driver,RunManagerInfo runManagerInfoObj) throws InterruptedException {

		 try{
			 blnFlag=false;
			 List<String> callLogsName=new ArrayList<String>();
			
			 WebElement dropDown=driver.findElement(By.id(mbo.Call_Filter));
			 String searchTextFinal=null;
			 if(cnf.FnExplicitWait("ID", mbo.Call_Filter,driver))
			 {
				 repfn.FnUpdateTestStepResHTML("Check Whether dropdown filter is available or not"," Dropdown filter is available", "PASS",runManagerInfoObj);
				 cnf.JSClick(dropDown,driver);
				 WebElement missedFilter=driver.findElement(By.xpath(mbo.Call_MissedFilter));
				 if(cnf.FnExplicitWait("XPATH", mbo.Call_MissedFilter,driver))
				 {
					 repfn.FnUpdateTestStepResHTML("Click on missed filter from the dropdown list"," Missed filter is selected", "PASS",runManagerInfoObj);
					 cnf.JSClick(missedFilter,driver);
					 driver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
					 List<WebElement> callLogsList=driver.findElements(By.xpath(mbo.callLogsList));

					 System.out.println("Name: "+callLogsList.get(0).getText()+" Name: "+callLogsList.get(0).getText().toString());
					 for(WebElement call:callLogsList)
					 {

						 System.out.println("-----Name-----"+call.getText());
						 callLogsName.add(call.getText());
					 }
					 for(String search:callLogsName)
					 {
						 if(Pattern.matches(".*[a-zA-Z]+.*", search))
						 {
							 String searchText=search;
							 String[] searchLastName=searchText.split(" ");
							 searchTextFinal=searchLastName[1];
							 break;
						 }
					 }

					 System.out.println("callLogsName: "+callLogsName);

					 System.out.println("Search Text Final: "+searchTextFinal);
					 WebElement searchBar=driver.findElement(By.xpath(mbo.searchBar));
					 if(cnf.FnExplicitWait("XPATH", mbo.searchBar,driver))
					 {
						 searchBar.sendKeys(searchTextFinal);
						 repfn.FnUpdateTestStepResHTML("Check Whether search bar is available or not"," Search bar is available", "PASS",runManagerInfoObj);
						 WebElement searchIcon=driver.findElement(By.xpath(mbo.searchMagnifyIcon));
						 if(cnf.FnExplicitWait("XPATH", mbo.searchMagnifyIcon,driver))
						 {
							 cnf.JSClick(searchIcon,driver);
							 repfn.FnUpdateTestStepResHTML("Check Whether search icon is available or not"," Search icon is available", "PASS",runManagerInfoObj);
							 List<WebElement> filteredCallLogs=driver.findElements(By.xpath(mbo.callLogsList));
							 for(WebElement filteredCall:filteredCallLogs)
							 {
								 //							
								 if(filteredCall.getText().contains(searchTextFinal))
								 {
									 repfn.FnUpdateTestStepResHTML("Check Whether the search text is available or not: "+searchTextFinal," Search text is available: "+filteredCall.getText(), "PASS",runManagerInfoObj);
									 blnFlag=true;
								 }


							 }
							 if(!blnFlag)
							 {
								 repfn.FnUpdateTestStepResHTML("Check Whether the search text is available or not "," Search text is not available", "FAIL",runManagerInfoObj);

							 }
						 }
						 else
						 {
							 repfn.FnUpdateTestStepResHTML("Check Whether search icon is available or not"," Search icon is available", "PASS",runManagerInfoObj);
							 blnFlag=false;
						 }
						 WebElement cancelIcon=driver.findElement(By.xpath(mbo.cancelIcon));
						 if(cnf.FnExplicitWait("XPATH", mbo.cancelIcon,driver))
						 {
							 cnf.JSClick(cancelIcon,driver);
							 repfn.FnUpdateTestStepResHTML("Check Whether cancel icon is available or not"," Cancel icon is available", "PASS",runManagerInfoObj);
							 blnFlag=true;
						 }
						 else
						 {
							 repfn.FnUpdateTestStepResHTML("Check Whether cancel icon is available or not"," Cancel icon is available", "FAIL",runManagerInfoObj);
							 blnFlag=false;
						 }

					 }
					 else
					 {
						 repfn.FnUpdateTestStepResHTML("Check Whether search bar is available or not"," Search icon is available", "FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }

				 }
				 else
				 {
					 repfn.FnUpdateTestStepResHTML("Click on missed filter from the dropdown list"," Missed filter is selected", "FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Check Whether dropdown filter is available or not"," Dropdown filter is available", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }catch(Exception e)
		 {

			 repfn.FnUpdateTestStepResHTML("Verifying if the user is able to search call log by 'Last name' when 'Missed' filter is selected ", " user is not able to search call log by 'Last name' when 'Missed' filter is selected due to exception","FAIL",runManagerInfoObj);
			 blnFlag	=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 driver.navigate().refresh();		
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;



	 }

	 public synchronized boolean fn_MissedCalls_SearchByPhoneNo(WebDriver driver,RunManagerInfo runManagerInfoObj) throws InterruptedException {

		 String searchTextFinal=null;

		 try{

			 blnFlag=false;
			 List<String> callLogsName=new ArrayList<String>();
			 Thread.sleep(3000);
			 if(cnf.FnExplicitWait("ID", mbo.Call_Filter,driver)){
				 repfn.FnUpdateTestStepResHTML("Check Whether dropdown filter is available or not"," Dropdown filter is available", "PASS",runManagerInfoObj);
				 WebElement dropDown=driver.findElement(By.id(mbo.Call_Filter));
				 if(cnf.JSClick(dropDown,driver)){
					 repfn.FnUpdateTestStepResHTML("Check Whether dropdown filter is clicked"," Dropdown filter is clicked", "PASS",runManagerInfoObj);
					 if(cnf.FnExplicitWait("XPATH", mbo.Call_MissedFilter,driver)){
						 repfn.FnUpdateTestStepResHTML("Check Whether Missed Calls value is displayed in drop-down filter"," Missed Calls value is displayed in drop-down filter", "PASS",runManagerInfoObj);
						 WebElement missedFilter=driver.findElement(By.xpath(mbo.Call_MissedFilter));
						 if(cnf.JSClick(missedFilter,driver)){
							 repfn.FnUpdateTestStepResHTML("Verify if Missed Calls value is clicked in drop-down filter"," Missed Calls value is clicked in drop-down filter", "PASS",runManagerInfoObj);
							 Thread.sleep(5000);

							 if(cnf.FnExplicitWait("XPATH", mbo.callLogsList,driver)){
								 repfn.FnUpdateTestStepResHTML("Verify Call Logs are displayed after selecting 'Missed Call' filter"," Call Logs are displayed after selecting 'Missed Call' filter", "PASS",runManagerInfoObj);
								 List<WebElement> callLogsList=driver.findElements(By.xpath(mbo.callLogsList));
								 for(WebElement call:callLogsList)
								 {
									 System.out.println("----Name---"+call.getText());
									 callLogsName.add(call.getText());
								 }

								 for(String search:callLogsName)
								 {
									 if(!Pattern.matches(".*[a-zA-Z]+.*", search))
									 {
										 searchTextFinal=search;
										 break;
									 }
								 }

								 blnFlag=true;
							 }
							 else{
								 repfn.FnUpdateTestStepResHTML("Verify Call Logs are displayed after selecting 'Missed Call' filter"," Call Logs are not displayed after selecting 'Missed Call' filter", "FAIL",runManagerInfoObj);
								 blnFlag=false;
							 }

							 if(cnf.FnExplicitWait("XPATH", mbo.searchBar,driver)){
								 WebElement searchBar=driver.findElement(By.xpath(mbo.searchBar));
								 searchBar.sendKeys(searchTextFinal);
								 repfn.FnUpdateTestStepResHTML("Check Search text is entered in Search Bar"," Search text is entered in Search Bar", "PASS",runManagerInfoObj);
								 if(cnf.FnExplicitWait("XPATH", mbo.searchMagnifyIcon,driver)){
									 WebElement searchIcon=driver.findElement(By.xpath(mbo.searchMagnifyIcon));
									 if(cnf.JSClick(searchIcon,driver)){
										 repfn.FnUpdateTestStepResHTML("Check Search icon is clicked in Search Bar"," Search icon is clicked in Search Bar", "PASS",runManagerInfoObj);

										 if(cnf.FnExplicitWait("XPATH", mbo.callLogsList,driver)){
											 repfn.FnUpdateTestStepResHTML("Verify Call Logs are displayed after clicking Search icon","Call Logs are displayed after clicking Search icon", "PASS",runManagerInfoObj);
											 List<WebElement> filteredCallLogs=driver.findElements(By.xpath(mbo.callLogsList));
											 for(WebElement filteredCall:filteredCallLogs)
											 {								
												 if(filteredCall.getText().contains(searchTextFinal))
												 {
													 repfn.FnUpdateTestStepResHTML("Check Whether phone number is available or not: "+searchTextFinal," Phone number is available: "+filteredCall.getText(), "PASS",runManagerInfoObj);
													 blnFlag=true;
												 }


											 }
											 if(!blnFlag)
											 {
												 repfn.FnUpdateTestStepResHTML("Check Whether phone number is available or not "," Phone number is not available", "FAIL",runManagerInfoObj);
												 blnFlag=false;
											 }

											 if(cnf.FnExplicitWait("XPATH", mbo.cancelIcon,driver)){
												 repfn.FnUpdateTestStepResHTML("Check Whether Cancel icon 'X' is available or not"," Cancel icon 'X' is available", "PASS",runManagerInfoObj);
												 WebElement cancelIcon=driver.findElement(By.xpath(mbo.cancelIcon));
												 if(cnf.JSClick(cancelIcon,driver)){
													 repfn.FnUpdateTestStepResHTML("Check Whether Cancel icon 'X' is clicked"," Cancel icon 'X' is clicked", "PASS",runManagerInfoObj);
													 Thread.sleep(2000);
													 if(searchBar.getAttribute("textContent").equalsIgnoreCase("")){
														 repfn.FnUpdateTestStepResHTML("Check Phone Number is cleared in Search bar"," CPhone Number is cleared in Search bar", "PASS",runManagerInfoObj);
														 blnFlag=true;
													 }
													 else{
														 repfn.FnUpdateTestStepResHTML("Check Phone Number is cleared in Search bar"," CPhone Number is not cleared in Search bar", "FAIL",runManagerInfoObj);
														 blnFlag=false;
													 }
												 }
												 else{
													 repfn.FnUpdateTestStepResHTML("Check Whether Cancel icon 'X' is clicked"," Cancel icon 'X' is not clicked", "FAIL",runManagerInfoObj);
													 blnFlag=false;
												 }

											 }
											 else{
												 repfn.FnUpdateTestStepResHTML("Check Whether Cancel icon 'X' is available or not"," Cancel icon 'X' is not available", "FAIL",runManagerInfoObj);
												 blnFlag=false;
											 }
										 }
										 else{
											 repfn.FnUpdateTestStepResHTML("Verify Call Logs are displayed after clicking Search icon","Call Logs are not displayed after clicking Search icon", "FAIL",runManagerInfoObj);
											 blnFlag=false;
										 }
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Check Search icon is clicked in Search Bar"," Search icon is not clicked in Search Bar", "FAIL",runManagerInfoObj);
										 blnFlag=false;
									 }
								 }
							 }

						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify if Missed Calls value is clicked in drop-down filter"," Missed Calls value is not clicked in drop-down filter", "FAIL",runManagerInfoObj);
							 blnFlag=false;
						 }
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Check Whether Missed Calls value is displayed in drop-down filter"," Missed Calls value is not displayed in drop-down filter", "FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Check Whether dropdown filter is clicked"," Dropdown filter is not clicked", "FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }

			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Check Whether dropdown filter is available or not"," Dropdown filter is not available", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }






		 }

		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verifying if the user is able to search call log by 'Phone number' when 'Missed' filter is selected","user is not able to search call log by 'Phone number' when 'Missed' filter is selected due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }

		 driver.navigate().refresh();		
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;



	 }	

	 public synchronized boolean FnPhoneNumberVerification(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{


			 List<WebElement>  Addcontact_PhoneNumberVerification=driver.findElements(By.xpath(mbo. Addcontact_PhoneNumberVerification));
			 if(cnf.FnExplicitWait("XPATH", mbo.Addcontact_PhoneNumberVerification,driver)){
				 for(int i=0;i<Addcontact_PhoneNumberVerification.size();i++){
					 if(Addcontact_PhoneNumberVerification.get(i).getAttribute("innerHTML").contains("777")){
						 repfn.FnUpdateTestStepResHTML("Verify PhoneNumber is added ","PhoneNumber is added" ,"PASS",runManagerInfoObj);
						 blnFlag=true;
						 break;
					 }
					 else{
						 //repfn.FnUpdateTestStepResHTML("Verify PhoneNumber is added  ","PhoneNumber is not added","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }

				 }
			 }

		 }
		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify newly added phone numbers are getting saved. ","Newly added phone numbers are not getting saved due to some exception." ,"PASS",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	 public synchronized boolean FnEditContactAndVerify(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

		 String fullName = "";

		 try{

			 if(cnf.FnExplicitWait("XPATH", mbo.EditMode_firstName,driver)){
				 WebElement firstName=driver.findElement(By.xpath(mbo.EditMode_firstName));

				 String oldFirstName = firstName.getAttribute("value");
				 firstName.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"Ruchi");
				 String newFirstName = firstName.getAttribute("value");
				 if(newFirstName != oldFirstName){
					 repfn.FnUpdateTestStepResHTML("Verify First Name field is modified ","First Name field is modified","PASS",runManagerInfoObj); 
					 blnFlag	=true;
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify First Name field is modified ","First Name field is not modified","FAIL",runManagerInfoObj);
					 blnFlag	=false;
				 }

			 }

			 else{
				 repfn.FnUpdateTestStepResHTML("Verify First Name field is displayed ","First Name field is not displayed","FAIL",runManagerInfoObj);
				 blnFlag	=false;
			 }

			 WebElement FirstName=driver.findElement(By.xpath(mbo.EditMode_firstName));
			 String newNameFirst = FirstName.getAttribute("value");

			 if(cnf.FnExplicitWait("XPATH", mbo.EditMode_LastName,driver)){
				 WebElement LastName=driver.findElement(By.xpath(mbo.EditMode_LastName));

				 String oldLastName = LastName.getAttribute("value");
				 LastName.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"Dallas");
				 String newLastName = LastName.getAttribute("value");
				 if(newLastName != oldLastName){
					 repfn.FnUpdateTestStepResHTML("Verify Last Name field is modified ","Last Name field is modified","PASS",runManagerInfoObj);
					 blnFlag=true;
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Last Name field is modified ","Last Name field is not modified","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }

			 }

			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Last Name field is displayed ","Last Name field is not displayed","FAIL",runManagerInfoObj);
				 blnFlag	=false;
			 }

			 WebElement lastName=driver.findElement(By.xpath(mbo.EditMode_LastName));
			 String newNameLast = lastName.getAttribute("value");

			 if(cnf.FnExplicitWait("XPATH", mbo.ContactTitle,driver)){
				 WebElement contactTitle=driver.findElement(By.xpath(mbo.ContactTitle));

				 String oldTitle = contactTitle.getAttribute("value");
				 contactTitle.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"Developer");
				 String newTitle = contactTitle.getAttribute("value");
				 if(newTitle != oldTitle){
					 repfn.FnUpdateTestStepResHTML("Verify Contact Title field is modified ","Contact Title field is modified","PASS",runManagerInfoObj);
					 blnFlag=true;
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Contact Title field is modified ","Contact Title field is not modified","FAIL",runManagerInfoObj);
					 blnFlag=false;	
				 }


			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Contact Title field is displayed ","Contact Title field is not displayed","FAIL",runManagerInfoObj);
				 blnFlag	=false;
			 }



			 if(cnf.FnExplicitWait("XPATH", mbo.ContactCompany,driver)){
				 WebElement contactCompany=driver.findElement(By.xpath(mbo.ContactCompany));

				 String oldCompany = contactCompany.getAttribute("value");
				 contactCompany.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"TestCo.");
				 String newCompany = contactCompany.getAttribute("value");
				 if(newCompany != oldCompany){
					 repfn.FnUpdateTestStepResHTML("Verify Contact Company field is modified ","Contact Company field is modified","PASS",runManagerInfoObj);
					 blnFlag=true;	
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Contact Company field is modified ","Contact Company field is not modified","FAIL",runManagerInfoObj);
					 blnFlag=false;	
				 }


			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Contact Company field is displayed ","Contact Company field is not displayed","FAIL",runManagerInfoObj);
				 blnFlag	=false;
			 }



			 if(cnf.FnExplicitWait("XPATH", mbo.Addcontact_PhoneNumber_inputText,driver)){
				 List<WebElement> Addcontact_PhoneNumber_inputTextList=driver.findElements(By.xpath(mbo.Addcontact_PhoneNumber_inputText));
				 Addcontact_PhoneNumber_inputTextList.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"998877"+randomInt);
				 repfn.FnUpdateTestStepResHTML("Verify Phone Number is Entered ","Phone Number is Entered","PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Phone Number is displayed ","Phone Number is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

			 List<WebElement> phoneNumberList=driver.findElements(By.xpath(mbo.Addcontact_PhoneNumber_inputText));
			 String phoneNumber = phoneNumberList.get(0).getAttribute("value");

			 if(cnf.FnExplicitWait("XPATH", mbo.EmailList,driver)){
				 List<WebElement> EmailList=driver.findElements(By.xpath(mbo.EmailList));
				 EmailList.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"Ruchi_D@abc.com");
				 repfn.FnUpdateTestStepResHTML("Verify Email is Entered ","Email is Entered","PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Email is displayed ","Email is not Entered","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }


			 if(cnf.FnExplicitWait("XPATH", mbo.AddressList,driver)){
				 List<WebElement> AddressList= driver.findElements(By.xpath(mbo.AddressList));
				 WebElement addressOne = AddressList.get(0);
				 if(addressOne.isDisplayed()){
					 //cnf.ScrollToView(addressOne);
					 blnFlag = FnAddAddress(driver,runManagerInfoObj);
					 if(blnFlag){
						 repfn.FnUpdateTestStepResHTML("Verify Address is added","Address is added","PASS",runManagerInfoObj);
						 blnFlag=true;
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify Address is added","Address is not added","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Address fields are displayed ","Address fields are not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

			 fullName = newNameFirst+ " " +newNameLast;
			 driver.manage().window().setSize(new Dimension(100, 100));
			 driver.manage().window().maximize();

			 boolean blnFlag1=FnSaveDataAndGoBack(driver,runManagerInfoObj);
			 cnf.scrollUp(driver);		

			 if(blnFlag1){
				 if(cnf.FnExplicitWait("XPATH",mbo.SearchField,driver)){
					 WebElement Search_Field=driver.findElement(By.xpath(mbo.SearchField));
					 cnf.ScrollToView(Search_Field,driver);
					 Search_Field.sendKeys(fullName);
					 repfn.FnUpdateTestStepResHTML("Verify User Name is entered in Search field ","User Name:  " +newNameFirst+ " is entered in Search field ","PASS",runManagerInfoObj);
					 Thread.sleep(2000);

					 List<WebElement> Contacts_Arrow=driver.findElements(By.xpath(mbo.Contacts_Arrow));
					 if(Contacts_Arrow.get(0).isDisplayed()){
						 repfn.FnUpdateTestStepResHTML("Verify User is present in Contacts List","User- "+newNameFirst+ " is present in Contacts List","PASS",runManagerInfoObj);
						 if(cnf.JSClick(Contacts_Arrow.get(0),driver)){
							 repfn.FnUpdateTestStepResHTML("Verify User Details Arrow is clicked","User Details Arrow is clicked","PASS",runManagerInfoObj);
							 if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
								 repfn.FnUpdateTestStepResHTML("Verify UserDetailpopup is displayed ","UserDetailpopup is displayed","PASS",runManagerInfoObj);

								 Thread.sleep(2000);
								 if(cnf.FnExplicitWait("XPATH", mbo.personalDetailVerificationName,driver)){
									 WebElement personalDetails_Verification=driver.findElement(By.xpath(mbo.personalDetailVerificationName));
									 if(personalDetails_Verification.getAttribute("textContent").contains(newNameFirst + " " + newNameLast)){
										 repfn.FnUpdateTestStepResHTML("Verify Contact Name is displayed ","Contact Name: " +fullName+ " is displayed" ,"PASS",runManagerInfoObj);
										 blnFlag=true;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify Contact Name is displayed ","Contact Name is not displayed" ,"FAIL",runManagerInfoObj);
										 blnFlag=false;
									 }
								 }
								 else{
									 repfn.FnUpdateTestStepResHTML("Verify Contact Name is displayed ","Contact Name is not displayed" ,"FAIL",runManagerInfoObj);
									 blnFlag=false;
								 }
							 }
							 else{
								 repfn.FnUpdateTestStepResHTML("Verify UserDetailpopup is displayed ","UserDetailpopup is not displayed","FAIL",runManagerInfoObj);
								 blnFlag=false;
							 }
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify User Details Arrow is clicked","User Details Arrow is not clicked","FAIL",runManagerInfoObj);
							 blnFlag=false;
						 }
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify User is present in Contacts List","User- "+newNameFirst+ " is not present in Contacts List","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Search field is displayed ","Search field is not displayed","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if the user is able to save the changes in Edit Contact form. ", "User is not able to save the changes in Edit Contact form","FAIL",runManagerInfoObj);
				 blnFlag = false;
			 }
		 }

		 catch(Exception e)
		 {

			 repfn.FnUpdateTestStepResHTML("Verify if the changes made in Edit Contact form are saved.", "Changes made in Edit Contact form are not saved due to some exception.","FAIL",runManagerInfoObj);
			 blnFlag	=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }

		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }

		public synchronized boolean FnAddAddress(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
			int listSize = 0;
			try{

				if(cnf.FnExplicitWait("XPATH", mbo.AddressList,driver)){
					List<WebElement> addressCount= driver.findElements(By.xpath(mbo.AddressList));
					listSize = addressCount.size();
				}

				System.out.println(listSize);

				if(listSize == 1){
					if(cnf.FnExplicitWait("XPATH", mbo.addressStreet,driver)){
						List<WebElement> addressStreet=driver.findElements(By.xpath(mbo.addressStreet));
						if(addressStreet.get(0).isDisplayed()){
							String oldAddressStreetValue = addressStreet.get(0).getAttribute("value");
							System.out.println("old value: " +oldAddressStreetValue);
							addressStreet.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"12,"+randomInt+"Ford Street");
							String newAddressStreetValue = addressStreet.get(0).getAttribute("value");
							System.out.println("new value: " +newAddressStreetValue);
							if(newAddressStreetValue != oldAddressStreetValue){
								repfn.FnUpdateTestStepResHTML("Verify Address Street value is modified "," Address Street value is modified ","PASS",runManagerInfoObj);
								blnFlag	= true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Address Street value is modified "," Address Street value is not modified ","FAIL",runManagerInfoObj);
								blnFlag = false;
							}
						}

					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Address Street field is displayed "," Address Street field is not displayed ","FAIL",runManagerInfoObj);
						blnFlag = false;
					}



					if(cnf.FnExplicitWait("XPATH", mbo.city,driver)){
						List<WebElement> city=driver.findElements(By.xpath(mbo.city));
						if(city.get(0).isDisplayed()){
							String oldCityValue = city.get(0).getAttribute("value");
							System.out.println("old value: " +oldCityValue);
							city.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"NY");
							String newCityValue = city.get(0).getAttribute("value");
							System.out.println("new value: " +newCityValue);
							if(newCityValue != oldCityValue){
								repfn.FnUpdateTestStepResHTML("Verify City value is modified "," City value is modified ","PASS",runManagerInfoObj);
								blnFlag	= true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify City value is modified "," City value is not modified ","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify City field is displayed "," City field is not displayed ","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}


					if(cnf.FnExplicitWait("XPATH", mbo.state,driver)){
						List<WebElement> state=driver.findElements(By.xpath(mbo.state));
						if(state.get(0).isDisplayed()){
							String oldStateValue = state.get(0).getAttribute("value");
							System.out.println("old value: " +oldStateValue);
							state.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"NY");
							String newStateValue = state.get(0).getAttribute("value");
							System.out.println("new value: " +newStateValue);
							if(newStateValue != oldStateValue){
								repfn.FnUpdateTestStepResHTML("Verify State value is modified "," State value is modified ","PASS",runManagerInfoObj);	
								blnFlag	= true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify State value is modified "," State value is not modified ","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify State field is displayed "," State field is not displayed ","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}


					if(cnf.FnExplicitWait("XPATH", mbo.zip,driver)){
						List<WebElement> zip=driver.findElements(By.xpath(mbo.zip));
						if(zip.get(0).isDisplayed()){
							String oldZipValue = zip.get(0).getAttribute("value");
							System.out.println("old value: " +oldZipValue);
							zip.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"16004");
							String newZipValue = zip.get(0).getAttribute("value");
							System.out.println("new value: " +newZipValue);
							if(newZipValue != oldZipValue){
								repfn.FnUpdateTestStepResHTML("Verify Zip value is modified "," Zip value is modified ","PASS",runManagerInfoObj);
								blnFlag	= true;		
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Zip value is modified "," Zip value is not modified ","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Zip field is displayed "," Zip field is not displayed ","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}


					if(cnf.FnExplicitWait("XPATH", mbo.country,driver)){
						List<WebElement> country=driver.findElements(By.xpath(mbo.country));
						if(country.get(0).isDisplayed()){
							String oldCountryValue = country.get(0).getAttribute("value");
							System.out.println("old value: " +oldCountryValue);
							country.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"USA");
							String newCountryValue = country.get(0).getAttribute("value");
							System.out.println("new value: " +newCountryValue);
							if(newCountryValue != oldCountryValue){
								repfn.FnUpdateTestStepResHTML("Verify Country value is modified "," Country value is modified ","PASS",runManagerInfoObj);
								blnFlag = true;			
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Country value is modified "," Country value is not modified ","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}	
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Country field is displayed "," Country field is not displayed ","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}

				}

				if(listSize == 2){
					if(cnf.FnExplicitWait("XPATH", mbo.addressStreet1,driver)){
						List<WebElement> addressStreet=driver.findElements(By.xpath(mbo.addressStreet1));
						if(addressStreet.get(0).isDisplayed()){
							String oldAddressStreetValue = addressStreet.get(0).getAttribute("value");
							System.out.println("old value: " +oldAddressStreetValue);
							addressStreet.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"12,"+randomInt+"Ford Street");
							String newAddressStreetValue = addressStreet.get(0).getAttribute("value");
							System.out.println("new value: " +newAddressStreetValue);
							if(newAddressStreetValue != oldAddressStreetValue){
								repfn.FnUpdateTestStepResHTML("Verify Address Street value is modified "," Address Street value is modified ","PASS",runManagerInfoObj);
								blnFlag	= true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Address Street value is modified "," Address Street value is not modified ","FAIL",runManagerInfoObj);
								blnFlag = false;
							}
						}

					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Address Street field is displayed "," Address Street field is not displayed ","FAIL",runManagerInfoObj);
						blnFlag = false;
					}



					if(cnf.FnExplicitWait("XPATH", mbo.city1,driver)){
						List<WebElement> city=driver.findElements(By.xpath(mbo.city1));
						if(city.get(0).isDisplayed()){
							String oldCityValue = city.get(0).getAttribute("value");
							System.out.println("old value: " +oldCityValue);
							city.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"NY");
							String newCityValue = city.get(0).getAttribute("value");
							System.out.println("new value: " +newCityValue);
							if(newCityValue != oldCityValue){
								repfn.FnUpdateTestStepResHTML("Verify City value is modified "," City value is modified ","PASS",runManagerInfoObj);
								blnFlag	= true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify City value is modified "," City value is not modified ","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify City field is displayed "," City field is not displayed ","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}


					if(cnf.FnExplicitWait("XPATH", mbo.state1,driver)){
						List<WebElement> state=driver.findElements(By.xpath(mbo.state1));
						if(state.get(0).isDisplayed()){
							String oldStateValue = state.get(0).getAttribute("value");
							System.out.println("old value: " +oldStateValue);
							state.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"NY");
							String newStateValue = state.get(0).getAttribute("value");
							System.out.println("new value: " +newStateValue);
							if(newStateValue != oldStateValue){
								repfn.FnUpdateTestStepResHTML("Verify State value is modified "," State value is modified ","PASS",runManagerInfoObj);	
								blnFlag	= true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify State value is modified "," State value is not modified ","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify State field is displayed "," State field is not displayed ","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}


					if(cnf.FnExplicitWait("XPATH", mbo.zip1,driver)){
						List<WebElement> zip=driver.findElements(By.xpath(mbo.zip1));
						if(zip.get(0).isDisplayed()){
							String oldZipValue = zip.get(0).getAttribute("value");
							System.out.println("old value: " +oldZipValue);
							zip.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"16004");
							String newZipValue = zip.get(0).getAttribute("value");
							System.out.println("new value: " +newZipValue);
							if(newZipValue != oldZipValue){
								repfn.FnUpdateTestStepResHTML("Verify Zip value is modified "," Zip value is modified ","PASS",runManagerInfoObj);
								blnFlag	= true;		
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Zip value is modified "," Zip value is not modified ","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Zip field is displayed "," Zip field is not displayed ","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}


					if(cnf.FnExplicitWait("XPATH", mbo.country1,driver)){
						List<WebElement> country=driver.findElements(By.xpath(mbo.country1));
						if(country.get(0).isDisplayed()){
							String oldCountryValue = country.get(0).getAttribute("value");
							System.out.println("old value: " +oldCountryValue);
							country.get(0).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"USA");
							String newCountryValue = country.get(0).getAttribute("value");
							System.out.println("new value: " +newCountryValue);
							if(newCountryValue != oldCountryValue){
								repfn.FnUpdateTestStepResHTML("Verify Country value is modified "," Country value is modified ","PASS",runManagerInfoObj);
								blnFlag = true;			
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Country value is modified "," Country value is not modified ","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}	
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Country field is displayed "," Country field is not displayed ","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}
				}



			}

			catch(Exception e)
			{

				repfn.FnUpdateTestStepResHTML("Verify new address is added.", "New address is not added due to some exception.","FAIL",runManagerInfoObj);
				blnFlag	=false;
				System.err.println("Message : "+e.getMessage());
				System.err.println("Cause : "+e.getCause());

			}

			m1.put("STEPSTATUS", blnFlag);
			return blnFlag;
		}
		
 public synchronized boolean AlertDismiss(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
		 try
		 {
			 Alert alert = driver.switchTo().alert();
			 Thread.sleep(4000);
			 alert.dismiss();
			 repfn.FnUpdateTestStepResHTML("Verify if alertpopup is displayed and it has to be handled", "Alert popup is displayed and it can be handled", "PASS",runManagerInfoObj);
			 repfn.FnUpdateTestStepResHTML("Verify if alert popup is closed", "Alert popup is closed", "PASS",runManagerInfoObj);
			 blnFlag=true;
		 }
		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify if Alert popup is displayed and it has to be handled", "Alert popup is not displayed and does not have to be handled", "PASS",runManagerInfoObj);
			 blnFlag=false;
		 }
		 return blnFlag;
	 }


	
	 public synchronized boolean fnUnsavedContactsSave(WebDriver driver,RunManagerInfo runManagerInfoObj)
		{
			boolean blnFlag=false;	
			String Name="Alex_";
			String lastName = "Pinto";
			String FirstName=cnf.generateRandomString();
			try{

				//Call log lists received
				if(cnf.FnExplicitWait("XPATH", mbo.Calllog_logList,driver)){
					repfn.FnUpdateTestStepResHTML("Verify whether any Call Log present or not", "Call Logs are present","PASS",runManagerInfoObj);
					List <WebElement> ContactNumber=driver.findElements(By.xpath(mbo.Calllog_logList));
					List <WebElement> ContactNumbers=new ArrayList<WebElement>();
					for(WebElement Contacts:ContactNumber)
					{
						if(Contacts.getText().startsWith("(")||Contacts.getText().matches("[0-9]+"))
						{
							ContactNumbers.add(Contacts);

						}
					}


					if(ContactNumbers.size()>0){

						String ContactsText=ContactNumbers.get(0).getText();	
						repfn.FnUpdateTestStepResHTML("Verify whether any call present from Unsaved Contact", "Call present from Unsaved Contact: "+ContactsText,"PASS",runManagerInfoObj);
						if(cnf.JSClick(ContactNumbers.get(0),driver)){
							repfn.FnUpdateTestStepResHTML("Verify Unsaved Contact is clicked", "Unsaved Contact is clicked","PASS",runManagerInfoObj);

							if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
								repfn.FnUpdateTestStepResHTML("Verify Call details section is loaded", "Call details section is loaded","PASS",runManagerInfoObj);

								try{
									Thread.sleep(5000);
									if(cnf.FnExplicitWait("XPATH", mbo.Voice_UnBlock,driver)){
										WebElement Call_UnBlock=driver.findElement(By.xpath(mbo.Voice_UnBlock));
										cnf.JSClick(Call_UnBlock,driver);
										blnFlag=true;
									}
									else{
										blnFlag=false;
									}
								}
								catch(NoSuchElementException e)
								{
									System.out.println("Contact is not blocked , Add contact Link is present for Contact");
								}

								if(cnf.FnExplicitWait("XPATH", mbo.Call_CreateNewContactLink,driver)){
									WebElement Call_CreateNewContactLink=driver.findElement(By.xpath(mbo.Call_CreateNewContactLink));
									Thread.sleep(5000);
									repfn.FnUpdateTestStepResHTML("Verify Create New Contact option is present", "Create New Contact is present","PASS",runManagerInfoObj);
									if(cnf.JSClick(Call_CreateNewContactLink,driver)){
										repfn.FnUpdateTestStepResHTML("Verify Create New Contact option is clicked or not", "Create New Contact is clicked","PASS",runManagerInfoObj);
										if(cnf.FnExplicitWait("ID", mbo.Call_ContactFirstName,driver)){
											repfn.FnUpdateTestStepResHTML("Verify First Name field is displayed", "First Name field is displayed","PASS",runManagerInfoObj);
											WebElement Call_ContactFirstName=driver.findElement(By.id(mbo.Call_ContactFirstName));
											Call_ContactFirstName.sendKeys(Name+FirstName);
											repfn.FnUpdateTestStepResHTML("Verify whether Contact First Name is added or not", "Contact First Name added as: "+Name+FirstName,"PASS",runManagerInfoObj);
											
											if(cnf.FnExplicitWait("ID", mbo.Call_ContactLastName,driver)){
												repfn.FnUpdateTestStepResHTML("Verify Last Name field is displayed", "Last Name field is displayed","PASS",runManagerInfoObj);
												WebElement Call_ContactLastName=driver.findElement(By.id(mbo.Call_ContactLastName));
												Call_ContactLastName.sendKeys(lastName);
												repfn.FnUpdateTestStepResHTML("Verify whether Contact Last Name is added or not", "Contact Last Name added as: "+lastName,"PASS",runManagerInfoObj);
											}
											else{
												repfn.FnUpdateTestStepResHTML("Verify Last Name field is displayed", "Last Name field is not displayed","FAIL",runManagerInfoObj);
												repfn.FnUpdateTestStepResHTML("Verify whether Contact Last Name is added or not", "Contact Last Name is not added","FAIL",runManagerInfoObj);
												blnFlag=false;
											}

											driver.manage().window().setSize(new Dimension(100, 100));
											driver.manage().window().maximize();

											if(cnf.FnExplicitWait("XPATH", mbo.Call_ContactSave,driver)){
												WebElement Call_ContactSave=driver.findElement(By.xpath(mbo.Call_ContactSave));
												repfn.FnUpdateTestStepResHTML("Verify whether Contact save option is present or not", "Contact save option is present ","PASS",runManagerInfoObj);

												if(cnf.JSClick(Call_ContactSave,driver)){
													repfn.FnUpdateTestStepResHTML("Verify whether Contact save option is clicked or not", "Contact save option is clicked ","PASS",runManagerInfoObj);

													if(cnf.FnExplicitWait("XPATH", mbo.SaveNotWorkingText,driver)){
														repfn.FnUpdateTestStepResHTML("Verify Save functionality working or not","Save functionality not working","FAIL",runManagerInfoObj);
														blnFlag=false;
														if(cnf.FnExplicitWaitFeedback("XPATH", mbo.Cancel_Button,driver))
														{
															WebElement close=driver.findElement(By.xpath(mbo.Cancel_Button));
															if(cnf.JSClick(close,driver)){
																repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked","Cancel button is clicked","PASS",runManagerInfoObj);
																blnFlag=false;
																Thread.sleep(2000);
																WebElement Confrm=driver.findElement(By.xpath(mbo.Confirm_btn));
																System.out.println("click aftr save not working");
																if(cnf.JSClick(Confrm,driver))
																{
																	repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked","Confirm button is clicked","PASS",runManagerInfoObj);
																	Thread.sleep(2000);
																	driver.navigate().refresh();
																	Thread.sleep(2000);
																	//repfn.FnUpdateTestStepResHTML("Verify User is moved back to contacts page","User is moved back to contacts page","PASS",runManagerInfoObj);
																	blnFlag=false;
																}
																else{
																	repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked","Confirm button is not clicked","FAIL",runManagerInfoObj);
																	blnFlag=false;
																}
															}
															else{
																repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked","Cancel button is not clicked","FAIL",runManagerInfoObj);
																blnFlag=false;
															}
														}
														else{
															repfn.FnUpdateTestStepResHTML("Verify Cancel button is displayed","Cancel button is not displayed","FAIL",runManagerInfoObj);
															blnFlag=false;
														}
													}
													else{
														Thread.sleep(5000);
														if(cnf.FnExplicitWait("XPATH", mbo.Call_Searchbox,driver)){
															WebElement Searchbox=driver.findElement(By.xpath(mbo.Call_Searchbox));
															Searchbox.sendKeys(Name+FirstName);
															if(cnf.FnExplicitWait("XPATH", mbo.Calllog_logList,driver)){
																List<WebElement> ContactName=driver.findElements(By.xpath(mbo.Calllog_logList));
																String contctName=ContactName.get(0).getText();
																if(contctName.contains(Name+FirstName)){
																	repfn.FnUpdateTestStepResHTML("Verify whether Contact is saved or not", "Contact is saved in the list as :"+Name+FirstName,"PASS",runManagerInfoObj);
																	blnFlag=true;
																	Searchbox.clear();
																}
																else{
																	repfn.FnUpdateTestStepResHTML("Verify whether Contact is saved or not", "Contact is not saved in the list ","FAIL",runManagerInfoObj);
																	blnFlag=false;
																	Searchbox.clear();
																}
															}
															else{
																repfn.FnUpdateTestStepResHTML("Verify whether Contact is saved or not", "Contact is not saved in the list ","FAIL",runManagerInfoObj);
																blnFlag=false;
															}
														}
														else{
															repfn.FnUpdateTestStepResHTML("Verify Search field is displayed ","Search field is not displayed","FAIL",runManagerInfoObj);
															blnFlag=false;
														}
													}
												}
												else{
													repfn.FnUpdateTestStepResHTML("Verify whether Contact save option is clicked or not", "Contact save option is not clicked ","FAIL",runManagerInfoObj);
													blnFlag=false;
												}
											}
											else{
												repfn.FnUpdateTestStepResHTML("Verify whether Contact save option is present or not", "Contact save option is not present ","FAIL",runManagerInfoObj);
												blnFlag=false;
											}
										}
										else{
											repfn.FnUpdateTestStepResHTML("Verify First Name field is displayed", "First Name field is not displayed","FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									}
									else{
										repfn.FnUpdateTestStepResHTML("Verify Create New Contact option is clicked or not", "Create New Contact is not clicked","FAIL",runManagerInfoObj);
										blnFlag=false;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify Create New Contact option is present", "Create New contact option is not present for: "+ContactsText,"FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Call details section is loaded", "Call details section is not loaded","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Unsaved Contact is clicked", "Unsaved Contact is not clicked","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}else{
						repfn.FnUpdateTestStepResHTML("Verify whether any Call present for unsaved Number", "No call present in Call log for unsaved Number","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}else{
					repfn.FnUpdateTestStepResHTML("Verify whether any Call Log present or not", "Call Logs are not present","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}

			catch (Exception e)
			{	
				repfn.FnUpdateTestStepResHTML("Verifying if the user is able to create new contact for calls from unsaved numbers from the call details window in the call logs page and save the changes.", " user is not able to create new contact for calls from unsaved numbers from the call details window in the call logs page and save the changes due to some exception","FAIL",runManagerInfoObj);
				blnFlag=false;
				System.err.println("Message : "+e.getMessage());
				System.err.println("Cause : "+e.getCause());
			}
			driver.navigate().refresh();
			m1.put("STEPSTATUS", blnFlag);
			System.out.println("Add to contact"+blnFlag);
			return blnFlag;
		}


	 public synchronized boolean FnCallLog_Search_FNLN(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
		 try
		 {
			 if(cnf.FnExplicitWait("XPATH", mbo.CallLog_SearchBar,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Search bar is displayed", "Search bar is displayed","PASS",runManagerInfoObj);
				 WebElement SearchBar= driver.findElement(By.xpath(mbo.CallLog_SearchBar));
				 SearchBar.clear();
				 SearchBar.sendKeys("Lisa");
				 repfn.FnUpdateTestStepResHTML("Verify text is entered in Search field", "Text is entered in Search field","PASS",runManagerInfoObj);
				 if(cnf.FnExplicitWait("XPATH", mbo.CallLog_SearchBar_XIcon,driver)){
					 WebElement clearIcon= driver.findElement(By.xpath(mbo.CallLog_SearchBar_XIcon));
					 repfn.FnUpdateTestStepResHTML("Verify the presence of 'x' icon when user puts focus on the search field ", "'x' icon is present when user puts focus on the search field","PASS",runManagerInfoObj);
					 if(cnf.JSClick(clearIcon,driver)){
						 repfn.FnUpdateTestStepResHTML("Verify 'X' option is clicked to clear the Search field", "'X' option is clicked to clear the Search field","PASS",runManagerInfoObj);
						 if(SearchBar.getAttribute("textContent").equalsIgnoreCase("")){
							 repfn.FnUpdateTestStepResHTML("Verify Search text is cleared", "Search text is cleared","PASS",runManagerInfoObj); 

							 if(cnf.FnExplicitWait("XPATH", mbo.Savedcontacts,driver)){
								 repfn.FnUpdateTestStepResHTML("Verify Call Log List is displayed", "Call Log List is displayed","PASS",runManagerInfoObj);
								 List <WebElement> ContactNumber=driver.findElements(By.xpath(mbo.Savedcontacts));  
								 List <WebElement> ContactNumbers=new ArrayList<WebElement>(); 

								 for(WebElement Contact:ContactNumber){
									 String Contacts=Contact.getText();
									 if(!(Contacts.contains("Unknown") || Contacts.contains("(")))
									 {
										 ContactNumbers.add(Contact);
									 }					
								 }
								 
								 if(ContactNumbers.size() > 0){
									 repfn.FnUpdateTestStepResHTML("Verify if Saved contacts exist in the Call Log List", "Saved contacts exist in the Call Log List ","PASS",runManagerInfoObj);
									 String[] FirstSavedContact = ContactNumbers.get(0).getText().split(" ");
									 String firstName = FirstSavedContact[0];
									 
									 SearchBar.clear();
									 SearchBar.sendKeys(firstName);
									 repfn.FnUpdateTestStepResHTML("Verify First Name is entered in Search field", "First Name is entered in Search field: "+firstName,"PASS",runManagerInfoObj);
									 
									 if(cnf.FnExplicitWait("XPATH", mbo.CallLog_AllFilter_FN_FilteredList,driver)){
										 List<WebElement> FilteredList =driver.findElements(By.xpath(mbo.CallLog_AllFilter_FN_FilteredList));
										 for(int j=0; j<FilteredList.size();j++)
										 {
											 String filteredName=driver.findElements(By.xpath(mbo.CallLog_AllFilter_FN_FilteredListName)).get(j).getText();
											 if(filteredName.contains(firstName)){
												 blnFlag=true; 
												 break;
											 }
											 else{
												 blnFlag=false;
												 break;
											 }
										 }
										 if(blnFlag){
											 repfn.FnUpdateTestStepResHTML("Verify the filtered call logs are the search results of the entered FirstName","Filtered call logs are the search results of the entered FirstName: "+firstName,"PASS",runManagerInfoObj);
											 blnFlag=true;
										 }
										 else{
											 repfn.FnUpdateTestStepResHTML("Verify the filtered call logs are the search results of the entered FirstName","Filtered call logs are not the search results of the entered FirstName: "+firstName,"FAIL",runManagerInfoObj);
											 blnFlag=false;
										 }
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify Call log is displayed after searching with First Name", "Call log is not displayed after searching with First Name","FAIL",runManagerInfoObj);
										 blnFlag=false;
									 }
								 }
								 else{
									 repfn.FnUpdateTestStepResHTML("Verify if Saved contacts exist in the Call Log List", "Saved contacts does not exist in the Call Log List ","PASS",runManagerInfoObj);
									 boolean blnFlag1 = fnUnsavedContactsSave(driver,runManagerInfoObj);
									 if(blnFlag1){
										 boolean blnFlag2 = FnCallLog_Search_FNLN(driver,runManagerInfoObj);
										 if(blnFlag2){
											 blnFlag=true;
										 }
										 else{
											 blnFlag=false;
										 }
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify whether Contact is saved or not", "Contact is not saved in the list ","FAIL",runManagerInfoObj);
										 blnFlag=false;
									 }
								 }
							 }
							 else{
								 repfn.FnUpdateTestStepResHTML("Verify Call Log List is displayed", "Call Log List is not displayed","FAIL",runManagerInfoObj);
								 blnFlag=false;
							 }
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify Search text is cleared", "Search text is not cleared","FAIL",runManagerInfoObj);
							 blnFlag=false;
						 }
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify 'X' option is clicked to clear the Search field", "'X' option is not clicked to clear the Search field","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify the presence of 'x' icon when user puts focus on the search field ", "'x' icon is absent when user puts focus on the search field","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Search bar is displayed", "Search bar is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }

		 catch(Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 repfn.FnUpdateTestStepResHTML("Verify the filtered call logs are the search results of the FirstName keyword","Filtered call logs are not the search results of the Firstname keyword due to some  exception","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	
	 public synchronized boolean FN_ExportbuttonClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{
			 
			 String message = null;
			 
			 if(cnf.FnExplicitWait("XPATH", mbo.Exportbutton,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify the Export button is displayed", "Export button is displayed","PASS",runManagerInfoObj);
				 WebElement Exportbutton=driver.findElement(By.xpath(mbo.Exportbutton));
				 if(cnf.JSClick(Exportbutton,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify the Export button is clicked", "Export button is clicked","PASS",runManagerInfoObj);
					 
					 message = cnf.listFile(cnf.FILE_DIR, cnf.FILE_TEXT_EXT1);
					 if(!message.contains("no files end with"))
					 {
						 repfn.FnUpdateTestStepResHTML("Verify if Export call can be read in CSV form","Export call can be read in CSV form","PASS",runManagerInfoObj);
						 blnFlag=true;

					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify if Export call can be read in CSV form","Export call cannot be read in CSV form","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify the Export button is clicked", "Export button is not clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify the Export button is displayed", "Export button is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }

		 catch(Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 repfn.FnUpdateTestStepResHTML("Verify the Export button is displayed and clicked ", "Export button is  not displayed and  not clicked due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }
	 public synchronized boolean FnClickPayBillOption(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	  		try{
	  			

	  			  Thread.sleep(10000);
	  			  if(cnf.FnExplicitWait("XPATH", mbo.PayBillSideLink,driver)){
	  				  repfn.FnUpdateTestStepResHTML("Verify Pay Bill Link is displayed","Pay Bill Link is displayed","PASS",runManagerInfoObj);
	  				  WebElement PayBillSideLink=driver.findElement(By.xpath(mbo.PayBillSideLink));
	  				  if(cnf.JSClick(PayBillSideLink,driver)){
	  					  repfn.FnUpdateTestStepResHTML("Verify Pay Bill Link is clicked","Pay Bill Link is clicked","PASS",runManagerInfoObj);
	  					  Thread.sleep(5000);

	  					  if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationOne,driver)){
	  						  WebElement payBill_PageVerification_1=driver.findElement(By.xpath(mbo.PageVerificationOne));
	  						  if(payBill_PageVerification_1.getAttribute("textContent").equalsIgnoreCase("Billing")){
	  							  if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationTwo,driver)){
	  								  WebElement payBill_PageVerification_2=driver.findElement(By.xpath(mbo.PageVerificationTwo));
	  								  if(payBill_PageVerification_2.getAttribute("textContent").equalsIgnoreCase("Pay Bill")){
	  									  repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is navigated to Pay Bill page","PASS",runManagerInfoObj);
	  									  blnFlag=true;
	  								  }

	  								  else{
	  									  repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is not navigated to Pay Bill page","FAIL",runManagerInfoObj);
	  									  blnFlag=false;
	  								  }
	  							  }
	  						  }
	  					  }
	  				  }
	  				  else{
	  					  repfn.FnUpdateTestStepResHTML("Verify Pay Bill Link is clicked","Pay Bill Link is not clicked","FAIL",runManagerInfoObj);
	  					  blnFlag=false;
	  				  }

	  			  }
	  			  else{
	  				  repfn.FnUpdateTestStepResHTML("Verify Pay Bill Link is displayed","Pay Bill Link is not displayed","FAIL",runManagerInfoObj);
	  				  blnFlag=false;
	  			  }
	  		  
	  			
	  		}
	  		
	  		catch (Exception e)
	  		 {
	  			 repfn.FnUpdateTestStepResHTML("Verify if user is able to verify and click Pay Bill option", "User is not able to verify and click Pay Bill option due to some exception", "FAIL",runManagerInfoObj);
	  			 System.err.println("Message : "+e.getMessage());
	  			 System.err.println("Cause : "+e.getCause());
	  			 blnFlag=false;
	  		 }
	  		 m1.put("STEPSTATUS", blnFlag);
	  		 return blnFlag;
	  		
	  	}
	     
	 public synchronized boolean FnPaymentHistoryTab(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{			
			 if(cnf.FnExplicitWait("XPATH", mbo.paymentHistory,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Payment History link is displayed","Payment History link is displayed","PASS",runManagerInfoObj);
				 WebElement paymentHistory=driver.findElement(By.xpath(mbo.paymentHistory));
				 if(cnf.JSClick(paymentHistory,driver))
				 {
					 repfn.FnUpdateTestStepResHTML("Verify Payment History link is clicked","Payment History link is clicked","PASS",runManagerInfoObj);
					 if(cnf.FnExplicitWait("XPATH",mbo.PageVerificationTwo,driver)){
						 WebElement PageVerificationTwo=driver.findElement(By.xpath(mbo.PageVerificationTwo));
						 if(PageVerificationTwo.getAttribute("textContent").equalsIgnoreCase("Payment History")){
							 repfn.FnUpdateTestStepResHTML("Verify User is navigated to Payment History page", "User is navigated to Payment History page","PASS",runManagerInfoObj);
							 blnFlag=true;
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify User is navigated to Payment History page", "User is not navigated to Payment History page","FAIL",runManagerInfoObj);
							 blnFlag=false;
						 }
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify User is able to verify current page","User is not able to verify current page","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }
				 }
				 else
				 {
					 repfn.FnUpdateTestStepResHTML("Verify Payment History link is clicked","Payment History link is not clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }

			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Payment History link is displayed","Payment History link is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

		 }

		 catch (Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify if user is navigated to payment history Page", "User is not navigated to payment history page due to some exception", "FAIL",runManagerInfoObj);
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 blnFlag=false;
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }
	 
	
	
	 public synchronized boolean EditCreditCard(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
	 {
		 try
		 {
			 driver.switchTo().frame("iFrameResizer0");
			 //String Card=m1.get("CardNum").toString();
			 if(cnf.FnExplicitWait("XPATH", mbo.PayBill_CardNum,driver))
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if Credit Card Text field is present", "Credit Card text field is present", "PASS",runManagerInfoObj);
				 WebElement Editcard=driver.findElement(By.xpath(mbo.PayBill_CardNum));
				 String Card=m1.get("CardNum").toString();
				 Editcard.sendKeys(Card);
				 repfn.FnUpdateTestStepResHTML("Enter a valid Credit Card number", "A valid Credit Card number is entered: "+Card, "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify if Credit Card Text field is present", "Credit Card text field is not present", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 
			 driver.switchTo().defaultContent();

		 }
		 catch(Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 repfn.FnUpdateTestStepResHTML("Verify if Credit Card Text field is present", "Credit Card text field is not present due to some exception", "FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }

	 //To key-in valid Payment Amount//

	 public synchronized boolean EditPayAmnt(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
	 {
		 try
		 {
			 driver.switchTo().frame("iFrameResizer0");
			 //String Pay=m1.get("Amount").toString();
			 if(cnf.FnExplicitWait("XPATH", mbo.Paybill_Amount,driver))
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if Payment Amount field is present", "Payment Amount field is present", "PASS",runManagerInfoObj);
				 WebElement EditPay=driver.findElement(By.xpath(mbo.Paybill_Amount));
				 String Pay=m1.get("Amount").toString();
				 EditPay.sendKeys(Pay);
				 repfn.FnUpdateTestStepResHTML("Enter a valid Payment amount", "A valid Payment Amount is entered: "+Pay, "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify if Payment Amount field is present", "Payment Amount field is not present", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 
			 driver.switchTo().defaultContent();

		 }
		 catch(Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 repfn.FnUpdateTestStepResHTML("Verify if Payment Amount field is present", "Payment Amount field is not present due to some exception", "FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }
	    public synchronized boolean Fn_VerifyPaymentDateField_FutureDate(WebDriver driver,RunManagerInfo runManagerInfoObj){
        	
	    	   Calendar cal   =Calendar.getInstance();
	    	   cal.add(Calendar.MONTH,1);
	    	   cal.add(Calendar.DATE,-1);
	    	   Date d=cal.getTime();
	           SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
	           
	           String currentDate=sdf.format(d);
	           
	           String dateArray[]=currentDate.split("/");
	           String year=dateArray[0];
	           String month=dateArray[1];
	           String day=dateArray[2];
	    	   String FuturePaymentDate = (month)+"/"+(day)+"/"+year;
	    	   String FuturePaymentDateChrome = (month)+"/"+(day);
	       
	       	
	       	try{
	       		
	       		driver.switchTo().frame("iFrameResizer0");
	       		
	       		if(cnf.FnExplicitWait("XPATH", mbo.PaymentDate,driver)){
	       			repfn.FnUpdateTestStepResHTML("Verify Payment Date field is displayed under Payment Information option",
	         					"Payment Amount Number field is displayed under Payment Information option","PASS",runManagerInfoObj);
	       			WebElement PaymentDate=driver.findElement(By.xpath(mbo.PaymentDate));
	       		
	       			String Browser=m1.get("BROWSER").toString();
	       			System.out.println("Browser is:   "+Browser);
	       		if(Browser.equalsIgnoreCase("chrome"))
	       		{
	       			PaymentDate.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),FuturePaymentDateChrome,Keys.TAB);
	       			repfn.FnUpdateTestStepResHTML("Verify Future Payment Date is entered","Payment date entered: " +FuturePaymentDateChrome ,"PASS",runManagerInfoObj);
	       			
	       			
	       		}else {
	       			PaymentDate.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),FuturePaymentDate);
	       			repfn.FnUpdateTestStepResHTML("Verify Future Payment Date is entered","Payment date entered: " +FuturePaymentDate ,"PASS",runManagerInfoObj);
	       		}
	       		
	       			
	       			if(cnf.FnExplicitWait("XPATH", mbo.PaymentInformationHeader,driver)){
	       				WebElement PaymentInformationHeader=driver.findElement(By.xpath(mbo.PaymentInformationHeader));
	           			cnf.JSClick(PaymentInformationHeader,driver);
	       			}
	       			else{
	       				repfn.FnUpdateTestStepResHTML("Verify Payment Information Header is displayed and clicked","Payment Information Header is not displayed and clicked","FAIL",runManagerInfoObj);
	       				blnFlag=false;
	       			}
	       			
	       			
	    				
	       			
	       		}
	       		else{
	       			repfn.FnUpdateTestStepResHTML("Verify Payment Date field is displayed under Payment Information option",
	         					"Payment Date field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	       			blnFlag=false;
	       		}
	       		
	       		driver.switchTo().defaultContent();
	       		
	       		
	       	}
	      	
	      	catch (Exception e)

	    		{
	    			repfn.FnUpdateTestStepResHTML("Verify User is able to verify blank Payment date",
	    					"User is not able to verify blank Payment date due to some exception","FAIL",runManagerInfoObj);

	    	      	 blnFlag=false;
	    			System.err.println("Message : "+e.getMessage());
	    			System.err.println("Cause : "+e.getCause());
	    			
	    		}
	    		m1.put("STEPSTATUS", blnFlag);
	    		return blnFlag;
	      	
	        	
	        }
	    public synchronized boolean PayBill_PayNow(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
		 {
			 try
			 {
				 driver.switchTo().frame("iFrameResizer0");
				 if(cnf.FnExplicitWait("XPATH", mbo.PayNowButton,driver)){
					 ((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.PayNowButton)));  
					 repfn.FnUpdateTestStepResHTML("Verify if Pay Now button is present", "Pay Now button is present", "PASS",runManagerInfoObj);
					 WebElement PayNow=driver.findElement(By.xpath(mbo.PayNowButton));

					 if(cnf.JSClick(PayNow,driver)){
						 repfn.FnUpdateTestStepResHTML("Verify Click on Pay Now button", "Pay Now button is clicked", "PASS",runManagerInfoObj);
						 Thread.sleep(4000);

						 if(cnf.FnExplicitWait("XPATH", mbo.PayBill_VerifyPaymentPage,driver))
						 {
							 repfn.FnUpdateTestStepResHTML("Verify if user is navigated to Verify Payment Information", "User is navigated to Verify Payment Information", "PASS",runManagerInfoObj);
							 blnFlag=true;
						 }
						 else
						 {
							 repfn.FnUpdateTestStepResHTML("Verify if user is navigated to Verify Payment Information", "User is not navigated to Verify Payment Information", "FAIL",runManagerInfoObj);
							 blnFlag=false;
						 }
					 }
					 else
					 {
						 repfn.FnUpdateTestStepResHTML("Verify Click on Pay Now button", "Pay Now button is not clicked", "FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }
				 }
				 else	
				 {
					 repfn.FnUpdateTestStepResHTML("Verify if Pay Now button is present", "Pay Now button is not present", "FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
				 
				 driver.switchTo().defaultContent();

			 }

			 catch(Exception e)
			 {
				 System.err.println("Message : "+e.getMessage());
				 System.err.println("Cause : "+e.getCause());	
				 repfn.FnUpdateTestStepResHTML("Verify if Pay Now button is present and clicked", "Pay Now button is not present and clicked due to some exception", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 m1.put("STEPSTATUS", blnFlag);
			 return blnFlag;

		 }
	 public synchronized boolean Paybill_completePaymentconfirm_Overview_New(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
  	 {
  		 try
  		 {
  			 boolean blnFlag1 = EditCreditCard(driver,runManagerInfoObj);
  			 boolean blnFlag2 = EditExpDate_New(driver,runManagerInfoObj);
  			 boolean blnFlag3 = EditPayAmnt(driver,runManagerInfoObj);
  			 boolean blnFlag4 = Fn_VerifyPaymentDateField_FutureDate(driver,runManagerInfoObj);
  			 boolean blnFlag5 = PayBill_PayNow(driver,runManagerInfoObj);
  			 boolean blnFlag6 = PayBill_completePayment(driver,runManagerInfoObj);
  			 boolean blnFlag7 = PayBill_confirmSuccess(driver,runManagerInfoObj);
  			 boolean blnFlag8 = PayBill_ReturnToOverview(driver,runManagerInfoObj);
  			 driver.navigate().refresh();

  			 if(blnFlag1 && blnFlag2 && blnFlag3 && blnFlag4 && blnFlag5 && blnFlag6 && blnFlag7 && blnFlag8){
  				 repfn.FnUpdateTestStepResHTML("Verify User is able to complete payment sucessfully and navigate back to Overview page","User is able to complete payment sucessfully and navigate back to Overview page","PASS",runManagerInfoObj);
  				 blnFlag=true;
  			 }
  			 else{
  				 repfn.FnUpdateTestStepResHTML("Verify User is able to complete payment sucessfully and navigate back to Overview page","User is not able to complete payment sucessfully and navigate back to Overview page","FAIL",runManagerInfoObj);
  				 blnFlag=false;
  			 }

  		 }
  		 catch(Exception e)
  		 {
  			 System.err.println("Message : "+e.getMessage());
  			 System.err.println("Cause : "+e.getCause());	
  			 repfn.FnUpdateTestStepResHTML("Verify User is able to complete payment sucessfully and navigate back to Overview page","User is not able to complete payment sucessfully and navigate back to Overview page due to some exception","FAIL",runManagerInfoObj);
  			 blnFlag=false;

  		 }
  		 m1.put("STEPSTATUS", blnFlag);
  		 return blnFlag;
  	 }
	 public synchronized boolean PayBill_ReturnToOverview(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{
			 driver.switchTo().frame("iFrameResizer0");
			 if(cnf.FnExplicitWait("XPATH", mbo.PayBill_complete_returnverview,driver))
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if Return To Overview button is present", "Return To Overview button is present", "PASS",runManagerInfoObj);
				 WebElement Overviewreturn=driver.findElement(By.xpath(mbo.PayBill_complete_returnverview));

				 if(cnf.ElementClick1(Overviewreturn)){
					 repfn.FnUpdateTestStepResHTML("Verify Click on Return to Overview button", "Return to Overview button is clicked", "PASS",runManagerInfoObj);
					 Thread.sleep(9000);
					 if(cnf.FnExplicitWait("XPATH",mbo.Home_OverviewLabel,driver))
					 {
						 repfn.FnUpdateTestStepResHTML("Verify User is navigated back to Overview Page","User is navigated back to Overview Page","PASS",runManagerInfoObj);
						 blnFlag=true;
						 Thread.sleep(1000);
						 driver.switchTo().defaultContent();
					 }
					 else
					 {
						 repfn.FnUpdateTestStepResHTML("Verify User is navigated back to Overview Page","User is not navigated back to Overview Page","FAIL",runManagerInfoObj);
						 blnFlag=false;  
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Click on Return to Overview button", "Return to Overview button is not clicked", "FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if Return To Overview button is present", "Return To Overview button is not present", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 driver.switchTo().defaultContent();
		 }

		 catch (Exception e)

		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 repfn.FnUpdateTestStepResHTML("Verify User is navigated back to Overview Page","User is not navigated back to Overview Page due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	 public synchronized boolean PayBill_confirmSuccess(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

		 try{
			 driver.switchTo().frame("iFrameResizer0");
			 if(cnf.FnExplicitWait("XPATH", mbo.Paybill_CompleteTitle,driver))
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if \"Payment Complete\" Title is present", "\"Payment Complete\" title is present", "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if \"Payment Complete\" Title is present", "\"Payment Complete\" title is not present", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

			 if(cnf.FnExplicitWait("XPATH", mbo.PayBill_success1,driver))
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if \"Thank You for your payment\" message is displayed", "\"Thank You For your payment\" message is displayed", "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if \"Thank You for your payment\" message is displayed", "\"Thank You For your payment\" message is not displayed", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

			 if(cnf.FnExplicitWait("XPATH", mbo.PayBill_success2,driver))
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if \"Your Payment has been successfully completed\" message is displayed", "\"Your Payment has been successfully completed\" message is displayed", "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if \"Your Payment has been successfully completed\" message is displayed", "\"Your Payment has been successfully completed\" message is not displayed", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 
			 driver.switchTo().defaultContent();
		 }

		 catch (Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 repfn.FnUpdateTestStepResHTML("Verify if Payment Completion Success message is displayed", "Payment Completion Success message is not displayed due to some exception", "FAIL",runManagerInfoObj);
			 blnFlag=false;	            
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }
	 public synchronized boolean PayBill_completePayment(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{
			 driver.switchTo().frame("iFrameResizer0");
			 if(cnf.FnExplicitWait("XPATH", mbo.PayBill_completePaymentbutton,driver))
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if Complete Payment button is present", "Complete Payment button is present", "PASS",runManagerInfoObj);
				 WebElement CPay=driver.findElement(By.xpath(mbo.PayBill_completePaymentbutton));

				 if(cnf.JSClick(CPay,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify if Complete Payment button is clicked or not", "Complete Payment is clicked", "PASS",runManagerInfoObj);
					 Thread.sleep(8000);
					 if(cnf.FnExplicitWait("XPATH", mbo.Paybill_CompleteTitle,driver))
					 {
						 repfn.FnUpdateTestStepResHTML("Verify if Payment confirmation screen is displayed", "Payment confirmation screen is displayed", "PASS",runManagerInfoObj);
						 blnFlag=true;
					 }
					 else
					 {
						 repfn.FnUpdateTestStepResHTML("Verify if Payment confirmation screen is displayed", "Payment confirmation screen is not displayed", "FAIL",runManagerInfoObj);
						 blnFlag=false;	
					 }
				 }
				 else
				 {
					 repfn.FnUpdateTestStepResHTML("Verify if Complete Payment button is clicked or not", "Complete Payment button is not clicked", "FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if Complete Payment button is present", "Complete Payment button is not present", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

			 driver.switchTo().defaultContent();

		 }

		 catch (Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 repfn.FnUpdateTestStepResHTML("Verify if Payment confirmation screen is displayed", "Payment confirmation screen is not displayed due to some exception", "FAIL",runManagerInfoObj);
			 blnFlag=false;

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	 public synchronized boolean EditExpDate_New(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
	 {
		 try
		 {
			 
			 driver.switchTo().frame("iFrameResizer0");
			 String Date=m1.get("ExpDate").toString();


			 if(cnf.FnExplicitWait("XPATH", mbo.PayBill_ExpiryDate,driver))
			 {
				 System.out.println("Exp date present");
				 repfn.FnUpdateTestStepResHTML("Verify if Expiry Date field is present", "Expiry Date field is present", "PASS",runManagerInfoObj);
				 WebElement EditEDate=driver.findElement(By.xpath(mbo.PayBill_ExpiryDate));

				 EditEDate.sendKeys(Date);
				 repfn.FnUpdateTestStepResHTML("Enter a valid Expiry Date", "A valid Expiry Date is entered: "+EditEDate.getAttribute("value"), "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify if Expiry Date field is present", "Expiry Date field is not present", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 
			 driver.switchTo().defaultContent();

		 }
		 catch(Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());	
			 repfn.FnUpdateTestStepResHTML("Verify if Expiry Date field is present", "Expiry Date field is not present due to some exception", "FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }
	  public synchronized boolean FnMakeFuturePayment(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	  		 try{
	  			 boolean blnFlag1 = FnClickPayBillOption(driver,runManagerInfoObj);
	  			 if(blnFlag1){
	  				 boolean blnFlag2 = fnCancelAutoPay(driver,runManagerInfoObj);
	  				 if(blnFlag2){
	  					 boolean blnFlag3 = Paybill_completePaymentconfirm_Overview_New(driver,runManagerInfoObj);
	  					 if(blnFlag3){
	  						 boolean blnFlag4 = FnBilling(driver,runManagerInfoObj);
	  						 if(blnFlag4){
	  							 boolean blnFlag5 = FnPaymentHistoryTab(driver,runManagerInfoObj);
	  							 if(blnFlag5){
	  								 blnFlag=true;
	  							 }
	  							 else{
	  								 blnFlag=false;
	  							 }
	  						 }
	  						 else{
	  							 repfn.FnUpdateTestStepResHTML("Verify User in Billing page","User is not in billing page","FAIL",runManagerInfoObj);
	  							 blnFlag=false;
	  						 }
	  					 }
	  					 else{
	  						 repfn.FnUpdateTestStepResHTML("Verify User is able to complete payment sucessfully and navigate back to Overview page","User is not able to complete payment sucessfully and navigate back to Overview page","FAIL",runManagerInfoObj);
	  						 blnFlag=false;
	  					 }
	  				 }
	  				 else{
	  					 blnFlag=false;
	  					 repfn.FnUpdateTestStepResHTML("Verify if auto pay is cancelled for the user", "Auto pay is not cancelled for the user", "FAIL",runManagerInfoObj);
	  				 }
	  			 }
	  			 else{
	  				 repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is not navigated to Pay Bill page","FAIL",runManagerInfoObj);
	  				  blnFlag=false;
	  			 }
	  		 }
	  		 
	  		 catch (Exception e)
	  		 {
	  			 repfn.FnUpdateTestStepResHTML("Verify if user is navigated to payment history Page", "User is not navigated to payment history page due to some exception", "FAIL",runManagerInfoObj);
	  			 System.err.println("Message : "+e.getMessage());
	  			 System.err.println("Cause : "+e.getCause());
	  			 blnFlag=false;
	  		 }
	  		 m1.put("STEPSTATUS", blnFlag);
	  		 return blnFlag;
	  	 }
	
	

	 public synchronized boolean VerifySave(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
		 try
		 {
			 String City="Chennai";

			
			 if( cnf.FnExplicitWait("XPATH", mbo.CompanyProfile_City_Editable,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify City Text feild is present", " City Text feild is present" , "PASS",runManagerInfoObj);
				 WebElement EmailCheck=driver.findElement(By.xpath(mbo.CompanyProfile_City_Editable));
				 System.out.println("City name"+City);
				 if(EmailCheck.getAttribute("value").contains(City))
				 {
					 System.out.println("changes saved");
					 repfn.FnUpdateTestStepResHTML("Verify if the changes made are saved", "Changes made are saved" +EmailCheck.getText(), "PASS",runManagerInfoObj);
					 blnFlag=true;
				 }
				 else
				 {
					 System.out.println("changes not saved");
					 repfn.FnUpdateTestStepResHTML("Verify if the changes made are saved", "Changes made are not saved" +EmailCheck.getText(), "FAIL",runManagerInfoObj);
					 blnFlag=false;


				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify City Text feild is present", " City Text feild is not  present" , "FAIL",runManagerInfoObj);
                 blnFlag=false;
			 }
			

		 }
		 catch(Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 repfn.FnUpdateTestStepResHTML("Verify if the changes made are saved", "Changes made are not saved due to some exception" , "FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }
	 //To edit Phone Number//

	 public synchronized boolean EditPhone(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
		 try
		 {
			 String Phone1=m1.get("Phone").toString();
			 cnf.FnExplicitWait("XPATH", mbo.CompanyProfile_Phone1,driver);
			 WebElement EditPhone1=driver.findElement(By.xpath(mbo.CompanyProfile_Phone1));
			 if(EditPhone1.isDisplayed())
			 {
				 EditPhone1.clear();
				 EditPhone1.sendKeys(Phone1);
				 repfn.FnUpdateTestStepResHTML("Verify if Phone Area Code can be edited", "Phone Area Code can be edited: "+Phone1, "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if Phone Area Code can be edited", "Phone Area Code cannot be edited", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

			 String Phone2=m1.get("SubCode").toString();
			 cnf.FnExplicitWait("XPATH",mbo.CompanyProfile_Phone2,driver);
			 WebElement EditPhone2=driver.findElement(By.xpath(mbo.CompanyProfile_Phone2));
			 if(EditPhone2.isDisplayed())
			 {
				 EditPhone2.clear();
				 EditPhone2.sendKeys(Phone2);
				 repfn.FnUpdateTestStepResHTML("Verify if Phone Prefix can be edited", "Phone Prefix can be edited: "+Phone2, "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if Phone Prefix can be edited", "Phone Prefix cannot be edited", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

			 String Phone3=m1.get("Postcode").toString();
			 cnf.FnExplicitWait("XPATH",mbo.CompanyProfile_Phone3,driver);
			 WebElement EditPhone3=driver.findElement(By.xpath(mbo.CompanyProfile_Phone3));
			 if(EditPhone3.isDisplayed())
			 {
				 EditPhone3.clear();
				 EditPhone3.sendKeys(Phone3);
				 repfn.FnUpdateTestStepResHTML("Verify if Phone Postfix can be edited", "Phone Postfix can be edited: "+Phone3, "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if Phone Postfix can be edited", "Phone Postfix cannot be edited", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }
		 catch(Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());	
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }



	 public synchronized boolean EditEmail(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
		 try
		 {
			 String Email=m1.get("Email").toString();
			 cnf.FnExplicitWait("XPATH", mbo.CompanyProfile_email,driver);
			 WebElement EditEmail=driver.findElement(By.xpath(mbo.CompanyProfile_email));
			 if(EditEmail.isDisplayed())
			 {
				 EditEmail.clear();
				 EditEmail.sendKeys(Email, Keys.TAB);
				 repfn.FnUpdateTestStepResHTML("Verify if Email can be edited", "Email can be edited" +Email, "PASS",runManagerInfoObj);


				 blnFlag=true;
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if Email can be edited", "Email cannot be edited", "FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }
		 catch(Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());	
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }
	
	 
	 public synchronized boolean FnVerifyLoggedInUserName(WebDriver driver,RunManagerInfo runManagerInfoObj){

		 String AppUser = "";
		 try{

			 AppUser = repfn.getAppUser();
			 System.out.println("AppUser: " +AppUser);
			 String logInText = "Hello," + " " + AppUser;
			 System.out.println(logInText);

			 Thread.sleep(2000);
			 WebElement LoggedInUser=driver.findElement(By.xpath(mbo.LoggedInUser));
			 if(cnf.FnExplicitWait("XPATH", mbo.LoggedInUser,driver)){
				 if(LoggedInUser.getAttribute("textContent").equalsIgnoreCase(logInText)){
					 repfn.FnUpdateTestStepResHTML("Verify Logged-in state of user is reflected", "Logged-in state of user is reflected as:" +logInText ,"PASS",runManagerInfoObj);
					 blnFlag=true;
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Logged-in state of user is reflected", "Logged-in state of user is not reflected","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }

				 driver.navigate().refresh();
			 }
		 }

		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify Logged-in state of user is reflected", "Logged-in state of user is not reflected due to some exception.","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }

	 

	 public synchronized boolean FnVerifySupportLink(WebDriver driver,RunManagerInfo runManagerInfoObj){

		 try{
			 WebElement Support_Link=driver.findElement(By.xpath(mbo.Support_Link));
			 if(cnf.FnExplicitWait("XPATH", mbo.Support_Link,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Support Link is present on Index Page for Non-logged in user", 
						 "Support Link is present on Index Page for Non-logged in user","PASS",runManagerInfoObj);
				 Thread.sleep(2000);
				 blnFlag=true;

			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Support Link is present on Index Page for Non-logged in user", 
						 "Support Link is not present on Index Page for Non-logged in user","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }

		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify Support Link is present on Index Page for Non-logged in user", 
					 "Support Link is not present on Index Page for Non-logged in user due to some exception.","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	
	 public synchronized boolean Voice_Line1(WebDriver driver,RunManagerInfo runManagerInfoObj)
		{
			try
			{
				
				String Line1="";
				String UnreadMessagecount="";
				boolean blnFlag1 = false;
				boolean blnFlag2 = false;
				
				if(cnf.FnExplicitWait("XPATH", mbo.Voice_LineNumber,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify Voice line dropdown is displayed", "Voice line dropdown is displayed.", "PASS",runManagerInfoObj);
					WebElement LineNumber=driver.findElement(By.xpath(mbo.Voice_LineNumber));
					Line1 = LineNumber.getText();
					repfn.FnUpdateTestStepResHTML("Verify Messages are displayed for Phone Line", "Messages are displayed for Phone Line: "+LineNumber.getText(), "PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH", mbo.Voice_UnreadMessage,driver))
					{
						repfn.FnUpdateTestStepResHTML("Verify if Unread Voice messages are present", "Unread Voice messages are present", "PASS",runManagerInfoObj);
						List <WebElement> Unread=driver.findElements(By.xpath(mbo.Voice_UnreadMessage));
						int Number=Unread.size();
						UnreadMessagecount= Integer.toString(Number);
						repfn.FnUpdateTestStepResHTML("Check the number of unread voice messages", "Total number of unread voice messages: "+UnreadMessagecount, "PASS",runManagerInfoObj);
						boolean blnFlag3=FnCallLogClick(driver,runManagerInfoObj);
						if(blnFlag3)
						{
							if( cnf.FnExplicitWait("XPATH", mbo.Voice_MissedCall,driver))
							{
								repfn.FnUpdateTestStepResHTML("Verify if Missed Calls are present", "Missed Calls are present", "PASS",runManagerInfoObj);
								//List <WebElement> Unread_missedcall=driver.findElements(By.xpath(mbo.Voice_MissedCall));
								//repfn.FnUpdateTestStepResHTML("Check the number of missed calls", "Total number of missed calls: "+MissedCallscount, "PASS",runManagerInfoObj);
								boolean blnFlag4=FnNavigateBackOverviewPage(driver,runManagerInfoObj);
								if(blnFlag4)
								{
									Thread.sleep(5000);
									if(cnf.FnExplicitWait("XPATH", mbo.Voice_Notifications_Line,driver))
									{
										repfn.FnUpdateTestStepResHTML("Verify if Voice Notifications are present", "Voice Notifications are present", "PASS",runManagerInfoObj);
										List<WebElement> Phone=driver.findElements(By.xpath(mbo.Voice_Notifications_Line));
										for(WebElement we:Phone)
										{
											if(we.getText().contains(Line1))
											{
											    blnFlag1=true;
											}
											else{
												blnFlag1=false;
											}									 
										}
										
										if(blnFlag1){
											repfn.FnUpdateTestStepResHTML("Check if the Line displayed in the Notifications panel is the same as in the voice page", "Line displayed in the Notification panel is the same that is present in the voice page", "PASS",runManagerInfoObj);

											if(cnf.FnExplicitWait("XPATH", mbo.Voice_Notifications_UnreadMessages,driver))
											{
												repfn.FnUpdateTestStepResHTML("Verify if Notifications is displayed for Unread messages", "Notifications is displayed for unread messages", "PASS",runManagerInfoObj);
												List <WebElement> Voice_Notifications_UnreadMessages=driver.findElements(By.xpath(mbo.Voice_Notifications_UnreadMessages));

												for(WebElement we1:Voice_Notifications_UnreadMessages)
												{
													if(we1.getText().contains(UnreadMessagecount))
													{
														blnFlag2=true;
													}
													else{
														blnFlag2=false;
													}									 
												}

												if(blnFlag2)
												{
													repfn.FnUpdateTestStepResHTML("Verify if the number of unread messages displayed in the Notifications panel is the same as those in the voice page", "Correct number of unread messages is being displayed", "PASS",runManagerInfoObj);
													blnFlag=true;
												}
												else
												{
													repfn.FnUpdateTestStepResHTML("Verify if the number of unread messages displayed in the Notifications panel is the same as those in the voice page", "InCorrect number of unread messages is being displayed", "FAIL",runManagerInfoObj);
													blnFlag=false;
												}
											}
											else
											{
												repfn.FnUpdateTestStepResHTML("Verify if Notifications is displayed for Unread messages", "Notifications is not displayed for unread messages", "FAIL",runManagerInfoObj);
												blnFlag=false;
											}

											if(cnf.FnExplicitWait("XPATH", mbo.Voice_Notifications_MissedCalls,driver))
											{
												repfn.FnUpdateTestStepResHTML("Verify if Notifications is displayed when there are missed calls", "Notification is displayed when there are missed calls", "PASS",runManagerInfoObj);
												List <WebElement> Voice_Notifications_MissedCalls=driver.findElements(By.xpath(mbo.Voice_Notifications_MissedCalls));
												repfn.FnUpdateTestStepResHTML("Verify if the number of missed calls is displayed in the Notifications panel", "Missed calls notification is being displayed. Text displayed is: "+Voice_Notifications_MissedCalls.get(0).getText(), "PASS",runManagerInfoObj);
												blnFlag=true;										 
											}
											else
											{
												repfn.FnUpdateTestStepResHTML("Verify if Notifications is displayed when there are missed calls", "Notification is not displayed even when there are missed calls", "FAIL",runManagerInfoObj);
												blnFlag=false;
											}								 
										}
										else{
											repfn.FnUpdateTestStepResHTML("Check if the Line displayed in the Notifications panel is the same as in the voice page", "Line displayed in the Notification panel is not the same that is present in the voice page", "FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									}
									else{
										repfn.FnUpdateTestStepResHTML("Verify if Voice Notifications are present", "Voice Notifications are not present", "FAIL",runManagerInfoObj);
										blnFlag=false;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify User is navigated back to Overview page", "User is not navigated back to Overview page", "FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}
							else
							{
								repfn.FnUpdateTestStepResHTML("Verify if Missed Calls are present", "Missed Calls are not present", "FAIL",runManagerInfoObj);
								blnFlag=false;	
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Call logs page", "User is not navigated to Call logs page", "FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else
					{
						repfn.FnUpdateTestStepResHTML("Verify if Unread Voice Messages are present", "Unread Voice messages are not present", "PASS",runManagerInfoObj);
						blnFlag=true;	
					}
				}
				else{
					if(cnf.FnExplicitWait("XPATH", mbo.Voice_LineNumber_Single,driver)){
						WebElement Voice_LineNumber_Single=driver.findElement(By.xpath(mbo.Voice_LineNumber_Single));
						repfn.FnUpdateTestStepResHTML("Verify Voice line dropdown is displayed", "Voice line dropdown is not displayed. Single phone line is displayed: "+Voice_LineNumber_Single.getText(), "PASS",runManagerInfoObj);
						Line1 = Voice_LineNumber_Single.getText();
						repfn.FnUpdateTestStepResHTML("Verify Messages are displayed for Phone Line", "Messages are displayed for Phone Line: "+Line1, "PASS",runManagerInfoObj);
						
						if(cnf.FnExplicitWait("XPATH", mbo.Voice_UnreadMessage,driver))
						{
							repfn.FnUpdateTestStepResHTML("Verify if Unread Voice messages are present", "Unread Voice messages are present", "PASS",runManagerInfoObj);
							List <WebElement> Unread=driver.findElements(By.xpath(mbo.Voice_UnreadMessage));
							int Number=Unread.size();
							UnreadMessagecount= Integer.toString(Number);
							repfn.FnUpdateTestStepResHTML("Check the number of unread voice messages", "Total number of unread voice messages: "+UnreadMessagecount, "PASS",runManagerInfoObj);
							boolean blnFlag3=FnCallLogClick(driver,runManagerInfoObj);
							if(blnFlag3)
							{
								if( cnf.FnExplicitWait("XPATH", mbo.Voice_MissedCall,driver))
								{
									repfn.FnUpdateTestStepResHTML("Verify if Missed Calls are present", "Missed Calls are present", "PASS",runManagerInfoObj);
									//List <WebElement> Unread_missedcall=driver.findElements(By.xpath(mbo.Voice_MissedCall));
									//repfn.FnUpdateTestStepResHTML("Check the number of missed calls", "Total number of missed calls: "+MissedCallscount, "PASS",runManagerInfoObj);
									boolean blnFlag4=FnNavigateBackOverviewPage(driver,runManagerInfoObj);
									if(blnFlag4)
									{
										Thread.sleep(5000);
										if(cnf.FnExplicitWait("XPATH", mbo.Voice_Notifications_Line,driver))
										{
											repfn.FnUpdateTestStepResHTML("Verify if Voice Notifications are present", "Voice Notifications are present", "PASS",runManagerInfoObj);
											List<WebElement> Phone=driver.findElements(By.xpath(mbo.Voice_Notifications_Line));
											for(WebElement we:Phone)
											{
												if(we.getText().contains(Line1))
												{
												    blnFlag1=true;
												}
												else{
													blnFlag1=false;
												}									 
											}
											
											if(blnFlag1){
												repfn.FnUpdateTestStepResHTML("Check if the Line displayed in the Notifications panel is the same as in the voice page", "Line displayed in the Notification panel is the same that is present in the voice page", "PASS",runManagerInfoObj);

												if(cnf.FnExplicitWait("XPATH", mbo.Voice_Notifications_UnreadMessages,driver))
												{
													repfn.FnUpdateTestStepResHTML("Verify if Notifications is displayed for Unread messages", "Notifications is displayed for unread messages", "PASS",runManagerInfoObj);
													List <WebElement> Voice_Notifications_UnreadMessages=driver.findElements(By.xpath(mbo.Voice_Notifications_UnreadMessages));

													for(WebElement we1:Voice_Notifications_UnreadMessages)
													{
														if(we1.getText().contains(UnreadMessagecount))
														{
															blnFlag2=true;
														}
														else{
															blnFlag2=false;
														}									 
													}

													if(blnFlag2)
													{
														repfn.FnUpdateTestStepResHTML("Verify if the number of unread messages displayed in the Notifications panel is the same as those in the voice page", "Correct number of unread messages is being displayed", "PASS",runManagerInfoObj);
														blnFlag=true;
													}
													else
													{
														repfn.FnUpdateTestStepResHTML("Verify if the number of unread messages displayed in the Notifications panel is the same as those in the voice page", "InCorrect number of unread messages is being displayed", "FAIL",runManagerInfoObj);
														blnFlag=false;
													}
												}
												else
												{
													repfn.FnUpdateTestStepResHTML("Verify if Notifications is displayed for Unread messages", "Notifications is not displayed for unread messages", "FAIL",runManagerInfoObj);
													blnFlag=false;
												}

												if(cnf.FnExplicitWait("XPATH", mbo.Voice_Notifications_MissedCalls,driver))
												{
													repfn.FnUpdateTestStepResHTML("Verify if Notifications is displayed when there are missed calls", "Notification is displayed when there are missed calls", "PASS",runManagerInfoObj);
													List <WebElement> Voice_Notifications_MissedCalls=driver.findElements(By.xpath(mbo.Voice_Notifications_MissedCalls));
													repfn.FnUpdateTestStepResHTML("Verify if the number of missed calls is displayed in the Notifications panel", "Missed calls notification is being displayed. Text displayed is: "+Voice_Notifications_MissedCalls.get(0).getText(), "PASS",runManagerInfoObj);
													blnFlag=true;										 
												}
												else
												{
													repfn.FnUpdateTestStepResHTML("Verify if Notifications is displayed when there are missed calls", "Notification is not displayed even when there are missed calls", "FAIL",runManagerInfoObj);
													blnFlag=false;
												}								 
											}
											else{
												repfn.FnUpdateTestStepResHTML("Check if the Line displayed in the Notifications panel is the same as in the voice page", "Line displayed in the Notification panel is not the same that is present in the voice page", "FAIL",runManagerInfoObj);
												blnFlag=false;
											}
										}
										else{
											repfn.FnUpdateTestStepResHTML("Verify if Voice Notifications are present", "Voice Notifications are not present", "FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									}
									else{
										repfn.FnUpdateTestStepResHTML("Verify User is navigated back to Overview page", "User is not navigated back to Overview page", "FAIL",runManagerInfoObj);
										blnFlag=false;
									}
								}
								else
								{
									repfn.FnUpdateTestStepResHTML("Verify if Missed Calls are present", "Missed Calls are not present", "FAIL",runManagerInfoObj);
									blnFlag=false;	
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify User is navigated to Call logs page", "User is not navigated to Call logs page", "FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else
						{
							repfn.FnUpdateTestStepResHTML("Verify if Unread Voice Messages are present", "Unread Voice messages are not present", "FAIL",runManagerInfoObj);
							blnFlag=false;	
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Voice line dropdown is displayed", "Voice line dropdown is not displayed. Single phone line is also not displayed", "FAIL",runManagerInfoObj);
						blnFlag=false;	
					}
				}
			}
			catch(Exception e)
			{
				repfn.FnUpdateTestStepResHTML("Verify if User is able to verify Voice Notifications", "User is not able to verify Voice Notifications due to some exception", "FAIL",runManagerInfoObj);
				System.err.println("Message : "+e.getMessage());
				System.err.println("Cause : "+e.getCause());
				blnFlag=false;
			}
			m1.put("STEPSTATUS", blnFlag);
			return blnFlag;

		}


	 

	

	 public synchronized boolean FN_ConfirmationPop_Cancelclick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{
			 if(cnf.FnExplicitWait("XPATH", mbo.Confirmationpopup_Block,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Confirmation pop-up is displayed after clicking Block link", "Confirmation pop-up is displayed after clicking Block link","PASS",runManagerInfoObj);
				 //Cancel Block Popup

				 if(cnf.FnExplicitWait("XPATH", mbo.Calllog_Blockcancel,driver)){

					 repfn.FnUpdateTestStepResHTML("Verify Cancel button is displayed in confirmation popup", "Cancel button is displayed in confirmation popup","PASS",runManagerInfoObj);

					 WebElement BlockMessagesCancel=driver.findElement(By.xpath(mbo.Calllog_Blockcancel));

					 if(cnf.JSClick(BlockMessagesCancel,driver)){
						 repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked", "Cancel button is clicked","PASS",runManagerInfoObj);
						 Thread.sleep(1000);
						 if(cnf.FnExplicitWait("XPATH", mbo.Confirmationpopup_Block,driver)){
							 repfn.FnUpdateTestStepResHTML("Verify Confirmation popup appears after clicking cancel button", "Confirmation pop appears after clicking cancel button","FAIL",runManagerInfoObj);
							 blnFlag=false;
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify Confirmation popup appears after clicking cancel button ", "Confirmation pop disappears after clicking cancel button","PASS",runManagerInfoObj);

							 if(cnf.FnExplicitWait("XPATH", mbo.Calllog_block,driver)){

								 repfn.FnUpdateTestStepResHTML("Verify the User is returned to Contact window and the contact status should be Block as there were no changes made ", "User is returned to Contact window and the contact status should be Block as there were no changes made ","PASS",runManagerInfoObj);
								 blnFlag=true;
							 }
							 else{
								 repfn.FnUpdateTestStepResHTML("Verify the User is returned to Contact window and the contact status should be Block as there were no changes made  ", "User is not returned to Contact window and the contact status is not Block","FAIL",runManagerInfoObj);
								 blnFlag=false;
							 }
						 }
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked", "Cancel button is not clicked","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }

				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Cancel button is displayed in confirmation popup", "Cancel button is  not displayed in confirmation popup","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }


			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Confirmation pop-up is displayed after clicking Block link", "Confirmation pop-up is  not displayed after clicking Block link","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }


		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify Confirmation pop is appears after clicking cancel button", "Confirmation pop is appears after clicking cancel button","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }


	 public synchronized boolean FN_ConfirmationPop_Saveclick(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{
			 if(cnf.FnExplicitWait("XPATH", mbo.Confirmationpopup_Block,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Confirmation pop is displayed after clicking Block button", "Confirmation pop is displayed after clicking Block button","PASS",runManagerInfoObj);
				 //Save

				 if(cnf.FnExplicitWait("XPATH", mbo.ConfirmBtn,driver)){

					 repfn.FnUpdateTestStepResHTML("Verify Confirm button is displayed in confirmation popup", "Confirm button is displayed in confirmation popup","PASS",runManagerInfoObj);

					 WebElement ConfirmBtn=driver.findElement(By.xpath(mbo.ConfirmBtn));

					 if(cnf.ElementClick(ConfirmBtn,driver)){
						 repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked", "Confirm button is clicked","PASS",runManagerInfoObj);
						 Thread.sleep(3000);
						 if(cnf.FnExplicitWait("XPATH", mbo.Confirmationpopup_Block,driver)){						 
							 if(cnf.FnExplicitWait("XPATH", mbo.Block_Error,driver)){
								 WebElement Block_Error=driver.findElement(By.xpath(mbo.Block_Error));
								 repfn.FnUpdateTestStepResHTML("Verify Confirmation pop appears after clicking confirm button", "Confirmation pop appears after clicking confirm button. Blocking opeartion failed. Error message displayed: "+Block_Error.getText(),"FAIL",runManagerInfoObj);
								 blnFlag=false;
							 }
							 else{
								 repfn.FnUpdateTestStepResHTML("Verify Confirmation pop appears after clicking confirm button", "Confirmation pop appears after clicking confirm button. Blocking opeartion failed. Error message not displayed ","FAIL",runManagerInfoObj);
								 blnFlag=false;
							 }
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify Confirmation pop disappears after clicking confirm button ", "Confirmation pop disappears after clicking confirm button","PASS",runManagerInfoObj);
							 if(cnf.FnExplicitWait("XPATH", mbo.Calllog_Unblock,driver)){
								 repfn.FnUpdateTestStepResHTML("Verify the user return to contact window and the  contact status should be unblock ", "The user is  return to contact window and the  contact status is unblock status","PASS",runManagerInfoObj);
								 blnFlag=true;
							 }
							 else{
								 repfn.FnUpdateTestStepResHTML("Verify the user return to contact window and the  contact status should be block as there was no changes made ", "The user is not return to contact window and the  contact status is not in block status","FAIL",runManagerInfoObj);
								 blnFlag=false;
							 }
						 }

					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked", "Confirm button is not clicked","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }

				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Confirm button is displayed in confirmation popup", "Confirm button is  not displayed in confirmation popup","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }


			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Confirmation pop is displayed after clicking Block button", "Confirmation pop is  not displayed after clicking Block button","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }


		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify Confirmation pop is appears after clicking cancel button", "Confirmation pop is appears after clicking cancel button","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }



	 public synchronized boolean SecuritySettings_Fair(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
		 try
		 {
			
			 cnf.FnExplicitWait("XPATH", mbo.Passwordstrength_Fairenabled,driver);
			 WebElement Fairshow=driver.findElement(By.xpath(mbo.Passwordstrength_Fairenabled));

			 if(Fairshow.isDisplayed())
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if the password entered is of Fair strength", "Password entered is of Fair strength", "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if the password entered is of Fair strength", "Password entered is not of Fair strength", "FAIL",runManagerInfoObj);
				 blnFlag=false;	
			 }
		 }
		 catch(Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());	
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }

	

	 public synchronized boolean SecuritySettings_Moderate(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
		 try
		 {
			
			 cnf.FnExplicitWait("XPATH", mbo.Passwordstrength_Moderateenabled,driver);
			 WebElement Moderateshow=driver.findElement(By.xpath(mbo.Passwordstrength_Moderateenabled));

			 if(Moderateshow.isEnabled())
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if the password entered is of Moderate strength", "Password entered is of Moderate strength", "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if the password entered is of Moderate strength", "Password entered is not of Moderate strength", "FAIL",runManagerInfoObj);
				 blnFlag=false;	
			 }
		 }
		 catch(Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());	
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }

	 public synchronized boolean fnForgotUsernameCancelRecovery(WebDriver driver,RunManagerInfo runManagerInfoObj) {
		 try
		 {
			 accountNumber = m1.get("ValidAccountNumber").toString();
			 String securityCodeValue = m1.get("ValidSecurityCode").toString();
			 if (cnf.FnExplicitWait("XPATH", mbo.forgotPasswordLink,driver)) {
				 blnFlag=true;
				 WebElement forgotPassword = driver.findElement(By
						 .xpath(mbo.forgotPasswordLink));
				 cnf.JSClick(forgotPassword,driver);
				 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the forgot password link"
						 , " User has clicked the forgot password link", "PASS",runManagerInfoObj);
			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the forgot password link"
						 , " User has not clicked the forgot password link", "FAIL",runManagerInfoObj);
			 }
			 WebElement accountNumberField = driver.findElement(By.xpath(mbo.accountNumber));
			 WebElement usernameRadioButton = driver.findElement(By.xpath(mbo.usernameRadioButton));
			 WebElement securityCode = driver.findElement(By.xpath(mbo.securityCode));
			 WebElement cancelButton = driver.findElement(By.xpath(mbo.cancelButton));
			 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.usernameRadioButton,driver))
			 {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Launch username recovery page "
						 , " Recovery page is launched", "PASS",runManagerInfoObj);

				 if(cnf.JSClick(usernameRadioButton,driver))
				 {
					 blnFlag=true;
					 repfn.FnUpdateTestStepResHTML("Verify if user has selected the recover username radio button "
							 , " User has selected the recover username radio button ", "PASS",runManagerInfoObj);
					 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.accountNumber,driver))
					 {
						 blnFlag=true;
						 driver.findElement(By.xpath(mbo.accountNumber)).sendKeys(accountNumber);
						 repfn.FnUpdateTestStepResHTML("Verify if user has entered the account number "
								 , " User has entered the account number: "+accountNumber, "PASS",runManagerInfoObj);
						 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.securityCode,driver))
						 {
							 blnFlag=true;
							 driver.findElement(By.xpath(mbo.securityCode)).sendKeys(securityCodeValue);
							 repfn.FnUpdateTestStepResHTML("Verify if user has entered the security code "
									 , " User has entered the security code ", "PASS",runManagerInfoObj);
							 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.cancelButton,driver))
							 {
								 cnf.JSClick(cancelButton,driver);
								 Thread.sleep(5000);
								 blnFlag=true;
								 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the cancel button "
										 , " User has clicked the cancel button ", "PASS",runManagerInfoObj);
								 Alert alert=driver.switchTo().alert();
								 alert.dismiss();
								 Thread.sleep(5000);
								 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the cancel button in confirmation pop up "
										 , " User has clicked the cancel button in confirmation pop up", "PASS",runManagerInfoObj);
								 if(!accountNumberField.getAttribute("value").toString().isEmpty())
								 {
									 blnFlag=true;
									 repfn.FnUpdateTestStepResHTML("Check whether the account number is retained afer clicking cancel from confimation popup "
											 , " Account number is retained: "+accountNumberField.getAttribute("value").toString(), "PASS",runManagerInfoObj);
									 if(!securityCode.getAttribute("value").toString().isEmpty())
									 {
										 blnFlag=true;
										 repfn.FnUpdateTestStepResHTML("Check whether the security code is retained afer clicking cancel from confimation popup "
												 , " Security code is retained ", "PASS",runManagerInfoObj);
										 if(cnf.JSClick(cancelButton,driver))
										 {
											 blnFlag=true;
											 Thread.sleep(5000);
											 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the cancel button again "
													 , " User has clicked the cancel button again", "PASS",runManagerInfoObj);
											 Alert alertTemp=driver.switchTo().alert();
											 alertTemp.accept();
											 Thread.sleep(5000);
											 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the ok button in confirmation pop up "
													 , " User has clicked the ok button in confirmation pop up", "PASS",runManagerInfoObj);
										 }
										 else
										 {
											 blnFlag=false;
											 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the cancel button again"
													 , " User has not clicked the cancel button again", "FAIL",runManagerInfoObj);
										 }
									 }
									 else
									 {
										 blnFlag=false;
										 repfn.FnUpdateTestStepResHTML("Check whether the security code is retained afer clicking cancel from confimation popup "
												 , " Security code is not retained ", "FAIL",runManagerInfoObj);
									 }
								 }
								 else
								 {
									 blnFlag=false;
									 repfn.FnUpdateTestStepResHTML("Check whether the account number is retained afer clicking cancel from confimation popup "
											 , " Account number is not retained: ", "FAIL",runManagerInfoObj);
								 }

							 }
							 else
							 {
								 blnFlag=false;
								 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the cancel button "
										 , " User has not clicked the cancel button ", "FAIL",runManagerInfoObj);


							 }
						 }
						 else
						 {
							 blnFlag=false;
							 repfn.FnUpdateTestStepResHTML("Verify if user has entered the security code "
									 , " User has not entered the security code ", "FAIL",runManagerInfoObj);
						 }
					 }
					 else
					 {
						 blnFlag=false;
						 repfn.FnUpdateTestStepResHTML("Verify if user has entered the account number "
								 , " User has not entered the account number ", "FAIL",runManagerInfoObj);
					 }
				 }
				 else
				 {
					 blnFlag=false;
					 repfn.FnUpdateTestStepResHTML("Verify if user has selected the recover username radio button "
							 , " User has not selected the recover username radio button ", "FAIL",runManagerInfoObj);
				 }
			 }
			 else
			 {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Launch username recovery page "
						 , " Recovery page is launched", "FAIL",runManagerInfoObj);
			 }
		 }
		 catch (Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify if user is able to cancel the details entered to recover the username "
					 , " User is not able to cancel the details entered to recover the username due to some exception", "FAIL",runManagerInfoObj);
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }	


	 public synchronized boolean FN_VerifyNoMissedCallFilter(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{

			 if(cnf.FnExplicitWait("XPATH",mbo.Voice_VoiceLineDropdown,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify if VoicelineDropdown is displayed","VoicelineDropdown is displayed","PASS",runManagerInfoObj);
				 WebElement VoicelineDropdown=driver.findElement(By.xpath(mbo.Voice_VoiceLineDropdown));
				 if(cnf.JSClick(VoicelineDropdown,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify if VoicelineDropdown is clicked","VoicelineDropdown is clicked","PASS",runManagerInfoObj);

					 if(cnf.FnExplicitWait("XPATH",mbo.Voice_LineList,driver)){
						 repfn.FnUpdateTestStepResHTML("Verify  Voiceline list is displayed","Voiceline list is displayed","PASS",runManagerInfoObj); 
						 List<WebElement> voiceLineList=driver.findElements(By.xpath(mbo.Voice_LineList));
						 if(voiceLineList.get(1).isDisplayed()){
							 if(cnf.JSClick(voiceLineList.get(1),driver)){
								 repfn.FnUpdateTestStepResHTML("Verify New Voiceline is clicked and User is able to change the Line","New Voiceline is clicked and User is able to change the Line","PASS",runManagerInfoObj);

								 if(cnf.FnExplicitWait("XPATH", mbo.Voice_CallLogFilterDisabled,driver)){
									 WebElement callLogsFilter = driver.findElement(By.xpath(mbo.Voice_CallLogFilterDisabled));
									 if(callLogsFilter.getText().contains("All")){
										 repfn.FnUpdateTestStepResHTML("Verify Missed callLog filter is not displayed and only All call fiter is displayed by default", "Missed callLog filter is not displayed and only All call fiter is displayed by default", "PASS",runManagerInfoObj);
										 blnFlag=true;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify Missed callLog filter is not displayed and only All call fiter is displayed by default", "Missed callLog filter is displayed and only All call fiter is not displayed by default", "FAIL",runManagerInfoObj);
										 blnFlag=false;
									 }
								 }
								 
							 }
							 else{
								 repfn.FnUpdateTestStepResHTML("Verify New Voiceline is clicked and User is able to change the Line","New Voiceline is not clicked and User is not able to change the Line","FAIL",runManagerInfoObj);
								 blnFlag=false;
							 }
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify New Voiceline is displayed","New Voiceline is not displayed","FAIL",runManagerInfoObj);
							 blnFlag=false;
						 }
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify  Voiceline list is displayed","Voiceline list is not displayed","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify if VoicelineDropdown is clicked","VoicelineDropdown is not clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else{
				 if(cnf.FnExplicitWait("XPATH",mbo.Voice_SingleLine,driver)){
					 WebElement Voice_SingleLine=driver.findElement(By.xpath(mbo.Voice_SingleLine));
					 repfn.FnUpdateTestStepResHTML("Verify if VoicelineDropdown is displayed","VoicelineDropdown is not displayed. Only Single Voice Line is assigned. "+Voice_SingleLine.getText(),"PASS",runManagerInfoObj);
					 if(cnf.FnExplicitWait("XPATH", mbo.Voice_CallLogFilterDisabled,driver)){
						 WebElement callLogsFilter = driver.findElement(By.xpath(mbo.Voice_CallLogFilterDisabled));
						 if(callLogsFilter.getText().contains("All")){
							 repfn.FnUpdateTestStepResHTML("Verify Missed callLog filter is not displayed and only All call fiter is displayed by default", "Missed callLog filter is not displayed and only All call fiter is displayed by default", "PASS",runManagerInfoObj);
							 blnFlag=true;
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify Missed callLog filter is not displayed and only All call fiter is displayed by default", "Missed callLog filter is displayed and only All call fiter is not displayed by default", "FAIL",runManagerInfoObj);
							 blnFlag=false;
						 }
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify if VoicelineDropdown is displayed","VoicelineDropdown is not displayed. Single Voice Line is also not assigned.","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
				 
			 }
		 }
		 catch (Exception e)

		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 repfn.FnUpdateTestStepResHTML("Verify Missed callLog filter is  not displayed and only All call fiter is displayed by default", "Missed callLog filter is  displayed and only All call fiter is not  displayed by default due to some exception", "FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }	

	
	
	 
	 public synchronized boolean fnForgotUsernameRecovery(WebDriver driver,RunManagerInfo runManagerInfoObj) {
		 try
		 {
			 accountNumber = m1.get("ValidAccountNumber").toString();
			 String securityCodeValue = m1.get("ValidSecurityCode").toString();
			 if (cnf.FnExplicitWait("XPATH", mbo.forgotPasswordLink,driver)) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the forgot password link "
						 , " User has clicked the forgot password link ", "PASS",runManagerInfoObj);

				 WebElement forgotPassword = driver.findElement(By.xpath(mbo.forgotPasswordLink));
				 blnFlag = cnf.JSClick(forgotPassword,driver);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the forgot password link "
						 , " User has not clicked the forgot password link ", "FAIL",runManagerInfoObj);
			 }
			 WebElement accountNumberField = driver.findElement(By.xpath(mbo.accountNumber));
			 WebElement recoveryOption = driver.findElement(By.xpath(mbo.recoveryOption));
			 WebElement requiredText = driver.findElement(By.xpath(mbo.requiredText));
			 WebElement description = driver.findElement(By.xpath(mbo.description));
			 WebElement selectRecoveryOption = driver.findElement(By.xpath(mbo.selectRecoveryOption));
			 WebElement usernameRadioButton = driver.findElement(By.xpath(mbo.usernameRadioButton));
			 WebElement passwordRadioButton = driver.findElement(By.xpath(mbo.passwordRadioButton));
			 WebElement securityCode = driver.findElement(By.xpath(mbo.securityCode));
			 WebElement cancelButton = driver.findElement(By.xpath(mbo.cancelButton));
			 WebElement nextButton =driver.findElement(By.xpath(mbo.nextButton));

			 WebElement accountNumberHelpIcon=driver.findElement(By.xpath("//a[@ng-click='openAccountNumberTooltip()']"));
			 WebElement securityCodeHelpIcon=driver.findElement(By.xpath("//a[@ng-click='openSecurityCodeTooltip()']"));
			 if (recoveryOption.isDisplayed()) {
				 blnFlag=true;

				 repfn.FnUpdateTestStepResHTML(
						 "Verify if user has navigated to username recovery page",
						 "User has navigated to username recovery page", "PASS",runManagerInfoObj);
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the text \"Recovery Option & Credentials\" is displayed or not",
						 "\"Recovery Option & Credentials\" text is displayed", "PASS",runManagerInfoObj);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if user has navigated to username recovery page",
						 "User has not navigated to username recovery page", "PASS",runManagerInfoObj);
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the text \"Recovery Option & Credentials\" is displayed or not",
						 "\"Recovery Option & Credentials\" text is not displayed", "FAIL",runManagerInfoObj);

			 }
			 if (description.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the text \"Description\" is displayed or not",
						 "\"Description\" text is displayed", "PASS",runManagerInfoObj);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the text \"Description\" is displayed or not",
						 "\"Description\" text is not displayed", "FAIL",runManagerInfoObj);

			 }
			 if (selectRecoveryOption.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the text \"Select Recovery option\" is displayed or not",
						 "\"Select Recovery option\" text is displayed", "PASS",runManagerInfoObj);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the text \"Select Recovery option\" is displayed or not",
						 "\"Select Recovery option\" text is not displayed", "FAIL",runManagerInfoObj);

			 }
			 if (usernameRadioButton.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if \"Recover username radio button\" is present",
						 "\"Recover username radio button\"  is present", "PASS",runManagerInfoObj);


			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if \"Recover username radio button\" is present",
						 "\"Recover username radio button\"  is not present", "FAIL",runManagerInfoObj);


			 }
			 if (passwordRadioButton.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if \"Reset password radio button\" is present",
						 "\"Reset password radio button\"  is present", "PASS",runManagerInfoObj);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if \"Reset password radio button\" is present",
						 "\"Reset password radio button\"  is not present", "FAIL",runManagerInfoObj);

			 }
			 if (accountNumberField.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the input field \"Account Number\" is present",
						 "\"Account Number\" input field is present", "PASS",runManagerInfoObj);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the input field \"Account Number\" is present",
						 "\"Account Number\" input field is not present", "FAIL",runManagerInfoObj);

			 }
			 if (accountNumberHelpIcon.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if help icon is present next to account number field",
						 "Help icon is present next to account number field", "PASS",runManagerInfoObj);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if help icon is present next to account number field",
						 "Help icon is not present next to account number field", "FAIL",runManagerInfoObj);

			 }
			 if (securityCode.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the input field \"Security Code\" is present",
						 "\"Security Code\" input field is present", "PASS",runManagerInfoObj);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the input field \"Security Code\" is present",
						 "\"Security Code\" input field is not present", "FAIL",runManagerInfoObj);

			 }
			 if (securityCodeHelpIcon.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if help icon is present next to security code field",
						 "Help icon is present next to security code field", "PASS",runManagerInfoObj);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if help icon is present next to security code field",
						 "Help icon is not present next to security code field", "FAIL",runManagerInfoObj);

			 }
			 if (cancelButton.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if \"Cancel\" button is present",
						 "\"Cancel\" button is present", "PASS",runManagerInfoObj);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify if \"Cancel\" button is present",
						 "\"Cancel\" button is not present", "FAIL",runManagerInfoObj);

			 }
			 if (nextButton.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the \"Next\" button is present",
						 "\"Next\" button is present", "PASS",runManagerInfoObj);


			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the \"Next\" button is present",
						 "\"Next\" button is not present", "FAIL",runManagerInfoObj);

			 }
			 if (requiredText.isDisplayed()) {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the text \"*Required\" is displayed or not",
						 "\"*Required\" text is displayed", "PASS",runManagerInfoObj);

			 } else {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML(
						 "Verify the text \"*Required\" is displayed or not",
						 "\"*Required\" text is not displayed", "FAIL",runManagerInfoObj);

			 }
			 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.usernameRadioButton,driver))
			 {
				 if(cnf.JSClick(usernameRadioButton,driver))
				 {
					 blnFlag=true;
					 repfn.FnUpdateTestStepResHTML("Verify if user has selected the recover username option","User has selected the recover username option","PASS",runManagerInfoObj);
					 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.accountNumber,driver))
					 {
						 blnFlag=true;
						 driver.findElement(By.xpath(mbo.accountNumber)).sendKeys(accountNumber);
						 repfn.FnUpdateTestStepResHTML("Verify if user has entered the valid account number","User has entered the valid account number: "+accountNumberField.getAttribute("value").toString(),"PASS",runManagerInfoObj);
						 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.securityCode,driver))
						 {
							 blnFlag=true;
							 driver.findElement(By.xpath(mbo.securityCode)).sendKeys(securityCodeValue);
							 repfn.FnUpdateTestStepResHTML("Verify if user has entered the valid security code","User has entered the valid security code ","PASS",runManagerInfoObj);
							 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.nextButton,driver))
							 {
								 blnFlag=true;
								 cnf.JSClick(nextButton,driver);
								 repfn.FnUpdateTestStepResHTML("Verify if user has clicked  the next button","User has clicked the next button","PASS",runManagerInfoObj);
								 Thread.sleep(5000);
								 WebElement returnToLoginButton=driver.findElement(By.xpath(mbo.returnToLoginButton));
								 WebElement usernameRecovery=driver.findElement(By.xpath(mbo.userNameRecovery));
								 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.returnToLoginButton,driver))
								 {
									 blnFlag=true;
									 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to confirmation screen displaying the Username and a button to navigate to login page","User has navigated to confirmation screen displaying the Username and a button to navigate to login page: "+"Your Username is "+usernameRecovery.getText().toString(),"PASS",runManagerInfoObj);
									 if(cnf.JSClick(returnToLoginButton,driver))
									 {
										 Thread.sleep(5000);
										 blnFlag=true;
										 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the return to login button","User has clicked the return to login button","PASS",runManagerInfoObj);
										 WebElement checkLoginScreen=driver.findElement(By.xpath(mbo.checkLoginScreen));
										 if(checkLoginScreen.isDisplayed())
										 {
											 blnFlag=true;
											 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to login screen","User has navigated to login screen","PASS",runManagerInfoObj);	
											 WebElement spectrumBusinessLogo=driver.findElement(By.xpath(mbo.SpectrumLogoClick));
											 if (spectrumBusinessLogo.isDisplayed()) {
												 blnFlag=true;
												 cnf.JSClick(spectrumBusinessLogo,driver); 
												 Thread.sleep(5000);
												 repfn.FnUpdateTestStepResHTML(
														 "Verify the user is redirected to home page",
														 "User is redirected to home page", "PASS",runManagerInfoObj);



											 } else {
												 blnFlag=false;
												 repfn.FnUpdateTestStepResHTML(
														 "Verify the user is redirected to home page",
														 "User is not redirected to home page", "FAIL",runManagerInfoObj);

											 }
										 }
										 else
										 {
											 blnFlag=false;
											 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to login screen","User has not navigated to login screen","FAIL",runManagerInfoObj);
										 }
									 }
									 else
									 {
										 blnFlag=false;
										 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the return to login button","User has not clicked the return to login button","FAIL",runManagerInfoObj);
									 }
								 }
								 else
								 {
									 blnFlag=false;
									 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to confirmation screen displaying the Username and a button to navigate to login page","User has navigated to confirmation screen displaying the Username and a button to navigate to login page","FAIL",runManagerInfoObj);
								 }
							 }
							 else
							 {
								 blnFlag=false;
								 repfn.FnUpdateTestStepResHTML("Verify if user has clicked  the next button","User has not clicked the next button","PASS",runManagerInfoObj);
							 }
						 }
						 else
						 {
							 blnFlag=false;
							 repfn.FnUpdateTestStepResHTML("Verify if user has entered the valid security code","User has entered the valid security code ","FAIL",runManagerInfoObj);
						 }

					 }
					 else
					 {
						 blnFlag=false;
						 repfn.FnUpdateTestStepResHTML("Verify if user has entered the valid account number","User has not entered the valid account number: ","FAIL",runManagerInfoObj);
					 }
				 }
				 else
				 {
					 blnFlag=false;
					 repfn.FnUpdateTestStepResHTML("Verify if user has selected the recover username option","User has not selected the recover username option","FAIL",runManagerInfoObj);
				 }
			 }

		 }
		 catch (Exception e)


		 {
			 blnFlag=false;
			 repfn.FnUpdateTestStepResHTML("Verify if user is able to recover username","User is not able to recover username due to some exception","FAIL",runManagerInfoObj);
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	

	 public synchronized boolean FN_addPhoneconVeriifcation(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{


			 //Entering Phone Number 1

			 if(cnf.FnExplicitWait("Xpath", mbo.Addcontact_PhoneNumberIcon,driver)){
			 WebElement Addcontact_PhoneNumberIcon=driver.findElement(By.xpath(mbo.Addcontact_PhoneNumberIcon));
			
				 repfn.FnUpdateTestStepResHTML("Verify Add Phone Number Link is present  after removing some contact while adding a new contact ","Add Phone Number Link is present  after removing some contact while adding a new contact","PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Add Phone Number Link is present  after removing some contact while adding a new contact ","Add Phone Number Link is  not present  after removing some contact while adding a new contact","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }



		 }


		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify Add Phone Number Link is present  after removing some contact while adding a new contact ","Add Phone Number Link is  not present  after removing some contact while adding a new contact","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }


	 public synchronized boolean FNAddcontact_PhoneNO_AfterRemoving(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{

			 Thread.sleep(2000);
			 cnf.FnExplicitWait("XPATH", mbo.Addcontact_PhoneTypeVerification,driver);
			 List<WebElement> Addcontact_PhoneTypeVerification=driver.findElements(By.xpath(mbo.Addcontact_PhoneTypeVerification));
			 String Text=Addcontact_PhoneTypeVerification.get(0).getAttribute("textContent");
			

			 if(Addcontact_PhoneTypeVerification.get(0).getAttribute("textContent").contains(Text)){


				 repfn.FnUpdateTestStepResHTML("Verify Home PhoneNumber Type is not displayed "," Indicate the Home phone number type is removed and the phone type is displayed as:"+Addcontact_PhoneTypeVerification.get(0).getText(),"PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Home PhoneNumber Type is not displayed "," Indicate the Home phone number type is  not removed and the phone type is displayed as:"+Addcontact_PhoneTypeVerification.get(0).getText(),"FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }


			 List<WebElement>  Addcontact_PhoneNumberVerification=driver.findElements(By.xpath(mbo. Addcontact_PhoneNumberVerification));
			 if( Addcontact_PhoneNumberVerification.get(0).getAttribute("innerHTML").contains("999")){


				 repfn.FnUpdateTestStepResHTML("Verify Newly added PhoneNumber  is displayed "," Newly added PhoneNumber :"+ Addcontact_PhoneNumberVerification.get(0).getText()+" is displayed" ,"PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify  Newly added PhoneNumber  is displayed "," Newly added PhoneNumber :"+ Addcontact_PhoneNumberVerification.get(0).getText()+" is  not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

		 }
		 catch (Exception e)

		 {
			 //repfn.FnUpdateTestStepResHTML("Verify Phone Number is displayed ","PhoneNumber is not dispalyed due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;

			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }



	 public synchronized boolean FNAddcontact_DeleteContactNew(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{
			 if(cnf.FnExplicitWait("Xpath", mbo.UserDetail_EditBtn,driver)){
			 WebElement UserDetail_EditBtn=driver.findElement(By.xpath(mbo.UserDetail_EditBtn));
			
				// UserDetail_EditBtn.click();
				if( cnf.JSClick(UserDetail_EditBtn,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed and clicked ","Edit button is displayed and clicked ","PASS",runManagerInfoObj);
				 blnFlag=true;
				}else{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Verify edit button is clicked "," Edit button is not clicked","FAIL",runManagerInfoObj);
				}
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed","Edit button is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }


			 Thread.sleep(1000);
			blnFlag= FN_addPhoneconVeriifcation(driver,runManagerInfoObj);
			 
			if( cnf.FnExplicitWait("Xpath", mbo.DeleteContact,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Delete Contact button is displayed ","Delete Contact button is displayed ","PASS",runManagerInfoObj);
			 WebElement DeleteContact=driver.findElement(By.xpath(mbo.DeleteContact));
			 cnf.ScrollToView(DeleteContact,driver);
			 
				
				if(cnf.JSClick( DeleteContact,driver)){
					repfn.FnUpdateTestStepResHTML("Verify delete contact button is clicked "," Delete contact button is clicked","PASS",runManagerInfoObj);
				blnFlag= FN_CancelConfirmPopup(driver,runManagerInfoObj);
				 Thread.sleep(1000);
				}else{
					 repfn.FnUpdateTestStepResHTML("Verify Delete Contact button is clicked ","Delete Contact button is not clicked ","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				
				
				
				
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Delete Contact button is displayed and clicked ","Delete Contact button is not displayed and clicked ","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }
		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify Delete Contact button is clicked ","Delete Contact button is not clicked due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 driver.navigate().refresh();
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	 //Saranya[10/31/2015]
	 public synchronized boolean FN_VerifyTVTileNotDisplayed(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
		 try
		 {
			 if(cnf.isElementExist(By.xpath(mbo.Overview_VideoTab),driver)){
				 repfn.FnUpdateTestStepResHTML("verify whether TV tile is not  displayed on the Overview page","TV tile is  displayed on the Overview page","FAIL",runManagerInfoObj);
				 blnFlag = false;
			 }
			 else{

				 repfn.FnUpdateTestStepResHTML("verify whether TV tile is  not displayed on the Overview page","TV tile is  not displayed on the Overview page","PASS",runManagerInfoObj);
				 blnFlag = true;
			 }
		 }
		 catch (Exception e)
		 {
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 repfn.FnUpdateTestStepResHTML("verify whether TV tile is not  displayed on the Overview page","TV tile is  displayed on the Overview page due to some exception","FAIL",runManagerInfoObj);
			 blnFlag = false;
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }



	 public synchronized boolean FN_addNewUserClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{

			 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUserLink,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Add New User Link is displayed ","Add New User Link is displayed","PASS",runManagerInfoObj);
				 WebElement AddNewUserLink=driver.findElement(By.xpath(mbo.AddNewUserLink));
				 if(cnf.JSClick(AddNewUserLink,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify Add New User Link is Clicked ","Add New User Link is Clicked","PASS",runManagerInfoObj);

					 Thread.sleep(5000);

					 if(cnf.FnExplicitWait("XPATH",mbo.AddStepsListHeading,driver)){
						 WebElement AddStepsListHeading = driver.findElement(By.xpath(mbo.AddStepsListHeading));
						 if(AddStepsListHeading.getText().contains("Profile Information")){
							 repfn.FnUpdateTestStepResHTML("Verify User is on Profile tab", "User is on Profile tab","PASS",runManagerInfoObj);
							 blnFlag=true;
						 }
						 else{
							 repfn.FnUpdateTestStepResHTML("Verify User is on Profile tab", "User is not on Profile tab","FAIL",runManagerInfoObj);
							 blnFlag=false;
						 }
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Add New User Link is Clicked ","Add New User Link is not Clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Add New User Link is displayed ","Add New User Link is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }

		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify user is able to click Add New User Button ","User is not able to click Add New User Button due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }


	 public synchronized boolean FnNextbuttonClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{
			 if(cnf.FnExplicitWait("Xpath",mbo.AddNewUser_Nextbutton,driver)){
				 WebElement AddNewUser_Nextbutton=driver.findElement(By.xpath(mbo.AddNewUser_Nextbutton));
				 repfn.FnUpdateTestStepResHTML("Verify Next button is displayed and enabled","Next button is displayed and  enabled","PASS",runManagerInfoObj);
				 if(cnf.JSClick(AddNewUser_Nextbutton,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify Next button is Clicked ","Next button is Clicked","PASS",runManagerInfoObj);
					 blnFlag=true;

				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Next button is Clicked ","Next button is not Clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }

			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Next button is displayed and enabled ","Next button is not displayed and not enabled","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

		 }

		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify Next button is Clicked ","Next button is not Clicked due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;

			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }


	 public synchronized boolean FN_StandardPermissionclick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{
			 
			 if(cnf.FnExplicitWait("XPATH",mbo.AddStepsListHeading,driver)){
					WebElement AddStepsListHeading = driver.findElement(By.xpath(mbo.AddStepsListHeading));
					if(AddStepsListHeading.getText().contains("Set User Role")){
						repfn.FnUpdateTestStepResHTML("Verify User is on Role tab", "User is on Role tab","PASS",runManagerInfoObj);
						
						if(cnf.FnExplicitWait("Xpath", mbo.AddUserStandardRadioButton,driver)){
							repfn.FnUpdateTestStepResHTML("Verify standard User Radio button is displayed", "Standard User Radio button is displayed","PASS",runManagerInfoObj);
							WebElement AddUserStandardRadioButton = driver.findElement(By.xpath(mbo.AddUserStandardRadioButton));
							if(cnf.JSClick(AddUserStandardRadioButton,driver)){
								repfn.FnUpdateTestStepResHTML("Verify standard User Radio button is clicked", "standard User Radio button is clicked","PASS",runManagerInfoObj);
								blnFlag=true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify standard User Radio button is clicked", "standard User Radio button is not clicked","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify standard User Radio button is displayed", "standard User Radio button is not displayed","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User is on Role tab", "User is not on Role tab","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
			 }
		 }
		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify the 'Standard' permission radio button is displayed  and clicked ","Standard permission radio button is displayed  and clicked  due to some exception ","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }
	 
	
	 public synchronized boolean FnConfirmbuttonClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{
			 
			 if(cnf.FnExplicitWait("Xpath",mbo.AddNewUser_Confirmbtn,driver)){				 
				 WebElement AddNewUser_Confirmbtn=driver.findElement(By.xpath(mbo.AddNewUser_Confirmbtn));
				 if(AddNewUser_Confirmbtn.isEnabled()){
					 repfn.FnUpdateTestStepResHTML("Verify Confirm button is displayed and enabled","Confirm button is displayed and  enabled","PASS",runManagerInfoObj);
					 
					 if(cnf.JSClick(AddNewUser_Confirmbtn,driver)){
						 repfn.FnUpdateTestStepResHTML("Verify Confirm button is Clicked ","Confirm button is Clicked","PASS",runManagerInfoObj);
						 blnFlag=true;

					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify Confirm button is Clicked ","Confirm button is not Clicked","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Confirm button is displayed and enabled ","Confirm button is not displayed and not enabled","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Confirm button is displayed","Confirm button is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }

		 catch (Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify Confirm button is Clicked ","Confirm button is not Clicked due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }



	 public synchronized boolean FN_AddVoiceLineClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{
			if( cnf.FnExplicitWait("Xpath",mbo.AddNewUser_AddVoiceLine,driver)){
			 WebElement AddNewUser_AddVoiceLine=driver.findElement(By.xpath(mbo.AddNewUser_AddVoiceLine));
			
				 repfn.FnUpdateTestStepResHTML("Verify Add voice Line Link  is displayed ","Add voice Line Link is displayed ","PASS",runManagerInfoObj);
				 if(cnf.ElementClick(AddNewUser_AddVoiceLine,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify  Add voice Line Link is Clicked "," Add voice Line Link is Clicked","PASS",runManagerInfoObj);
					 blnFlag=true;

				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify  Add voice Line Link is Clicked "," Add voice Line Link is not Clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }



			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify  Add voice Line Link is displayed  "," Add voice Line Link is  not displayed ","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }


			 //PhoneIcon

			 if(cnf.isElementExist(By.xpath(mbo.AddNewUser_PhoneIcon),driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Phone line selector  is displayed ","Phone line selector is displayed ","PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Phone line selector  is displayed ","Phone line selector is not displayed ","FAIL",runManagerInfoObj);
				 blnFlag=false;

			 }

			 //'x' icon


			 if(cnf.isElementExist(By.xpath(mbo.AddNewUser_closebtn),driver)){
				 repfn.FnUpdateTestStepResHTML("Verify 'x' icon is displayed ","'x' icon is displayed ","PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify 'x' icon  is displayed ","'x' icon is not displayed ","FAIL",runManagerInfoObj);
				 blnFlag=false;

			 }

		 }

		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify  Add voice Line Link is Clicked "," Add voice Line Link is not Clicked due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;

			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }


	 public synchronized boolean FN_AdminLineSelect_Dropdown(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{



			 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUser_Phonedropdown,driver)){
				 WebElement AddNewUser_Phonedropdown=driver.findElement(By.xpath(mbo.AddNewUser_Phonedropdown));
				 cnf.JSClick(AddNewUser_Phonedropdown,driver); 
				 Thread.sleep(1000);
				 repfn.FnUpdateTestStepResHTML("Verify Add voice Line drop down is displayed and clicked ","Add voice Line drop down is displayed and  clicked","PASS",runManagerInfoObj);

				 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUser_AdminLine,driver)){
					 List<WebElement> AddNewUser_AdminLine=driver.findElements(By.xpath(mbo.AddNewUser_AdminLine));
					 cnf.JSClick(AddNewUser_AdminLine.get(0),driver); 
					 Thread.sleep(1000);
					 repfn.FnUpdateTestStepResHTML("Verify whether Admin phone lines are displayed with specific icon and it is clicked","Admin phone lines are displayed with specific icon and it is clicked","PASS",runManagerInfoObj);
					 blnFlag=true;
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify whether Admin phone lines are displayed with specific icon and it is clicked","Admin phone lines are displayed with specific icon and it is  not clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;

				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Add voice Line drop down  is displayed and  clicked ","Add voice Line drop down  is  not displayed and  not clicked","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }


		 }

		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify whether Admin phone lines are displayed with specific icon and it is clicked","Admin phone lines are displayed with specific icon and it is  not clicked due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }


	

	 public synchronized boolean FnOverviewPageV1(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
		 try{
			 Thread.sleep(2000);	
			 if(cnf.FnExplicitWait("XPATH", mbo.v1_overview,driver))
			 {
				 repfn.FnUpdateTestStepResHTML("Verify whether User is in Overview Page or not","User is navigated to V1 overview page","PASS",runManagerInfoObj);
				 repfn.FnUpdateTestStepResHTML("Verify whether Overview label is displayed or not","Overview label is displayed","PASS",runManagerInfoObj);
				 blnFlag=true;


			 }else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify whether User is in Overview Page or not","User is not in v1 overview page","WARNING",runManagerInfoObj);
				
				 String StgAppurl=m1.get("AppURL").toString().trim();
				 driver.get(StgAppurl+"smb1/dashboard.html#/");
				 if(cnf.FnExplicitWait("XPATH", mbo.v1_overview,driver))
				 {

					 repfn.FnUpdateTestStepResHTML("Verify whether User is navigated to Overview Page or not","User is navigated to V1 overview page","PASS",runManagerInfoObj);
					 repfn.FnUpdateTestStepResHTML("Verify whether Overview label is displayed or not","Overview label is displayed","PASS",runManagerInfoObj);
					 blnFlag=true;
				 }else
				 {
					 repfn.FnUpdateTestStepResHTML("Verify whether User is navigated to Overview Page or not","User is not navigated to overview page","FAIL",runManagerInfoObj);
					 blnFlag=false;

				 }
			 }

		 }

		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify whether User is navigated to Overview Page or not","User is not navigated to overview page due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 if(!cnf.FnExplicitWait("XPATH", mbo.v1_overview,driver))
			 {

				 driver.close();
				 driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
				 repfn.FnInitializeBrowser(runManagerInfoObj);
				 FnLaunchCharterApp(driver,runManagerInfoObj);
				 repfn.FnUpdateTestStepResHTML("Verify whether User is in Overview page", "User is in Overview page", "PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify whether User is in Overview page", "User is not in Overview page", "FAIL",runManagerInfoObj);
				 blnFlag=false; 
			 }
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	
	 public synchronized boolean FnUserLogout(WebDriver driver,RunManagerInfo runManagerInfoObj){
		 try{

			 Thread.sleep(5000);
			 WebElement HeaderDropdownLogin=driver.findElement(By.xpath(mbo.headerDropdown));
			 if(cnf.FnExplicitWait("XPATH",mbo.headerDropdown,driver)){
				 cnf.JSClick(HeaderDropdownLogin,driver);
				 cnf.FnExplicitWait("XPATH",mbo.LogoutHeader,driver);
				 WebElement LogoutHeader=driver.findElement(By.xpath(mbo.LogoutHeader));
				 if(cnf.FnExplicitWait("XPATH",mbo.LogoutHeader,driver)){
					 if(cnf.JSClick(LogoutHeader,driver)){
						 repfn.FnUpdateTestStepResHTML("Check Whether Logout button is clicked", "Logout button is clicked","PASS",runManagerInfoObj);
						if( cnf.FnExplicitWait("XPATH", mbo.LoginWindow,driver)){
							
						
								 repfn.FnUpdateTestStepResHTML("Check V1 user is logged out and navigated to Home page", "V1 user is logged out and navigated to Home page","PASS",runManagerInfoObj);
								 blnFlag=true;
							 }
							 else{
								 repfn.FnUpdateTestStepResHTML("Check V1 user is logged out and navigated to Home page", "V1 user is not logged out and navigated to Home page","FAIL",runManagerInfoObj);
								 blnFlag=false;
							 }

						 }

					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Check Whether Logout button is clicked", "Logout button is not clicked","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }
				 }
			 
		 }

		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify V1 user is able to logout",
					 "V1 user is not able to logout due to some exception","FAIL",runManagerInfoObj);

			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }

	 public synchronized boolean VerifyV2UserLogin(WebDriver driver,RunManagerInfo runManagerInfoObj){

		 String currentUrl = "";
		 try{
			 String NewUser=m1.get("NewAppUser").toString();
			 String strPwd1=m1.get("AppPwd").toString();
			 System.out.println("user id: "+NewUser);
			 System.out.println("pwd: "+strPwd1);


			 if(cnf.FnExplicitWait("XPATH",mbo.LoginWindow,driver)){
			

			 driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			 if(cnf.FnExplicitWait("XPATH",mbo.UserName,driver)){
			 WebElement userName=driver.findElement(By.xpath(mbo.UserName)); 

			
				 userName.sendKeys(NewUser);
				 repfn.FnUpdateTestStepResHTML("Enter User ID: " +NewUser, "User ID is entered","PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Enter User ID: " +NewUser, "User ID is not entered","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

			 if(cnf.FnExplicitWait("XPATH",mbo.Password,driver)){
			 WebElement Password=driver.findElement(By.xpath(mbo.Password));
			
				 Password.sendKeys(strPwd1);
				 repfn.FnUpdateTestStepResHTML("Enter Password", "Password is entered","PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Enter Password", "Password is not entered","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }

			 if(cnf.FnExplicitWait("XPATH",mbo.SignInBtn,driver)){
			 WebElement signin=driver.findElement(By.xpath(mbo.SignInBtn));
			 if(cnf.JSClick(signin,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Click on Sign in Button", "Sign in Button is Clicked","PASS",runManagerInfoObj);
				 blnFlag=true;
				 cnf.JSClick(signin,driver);
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Click on Sign in Button", "Sign in Button is not Clicked","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 }else{
				 repfn.FnUpdateTestStepResHTML("Verify Sign in Button is displayed or not", "Sign in Button is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 }else{
				 repfn.FnUpdateTestStepResHTML("Verify Login window is displayed or not", "Login window is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);	


			 Thread.sleep(5000);
			 WebElement LoggedInUser=driver.findElement(By.xpath(mbo.LoggedInUser));
			 if(cnf.FnExplicitWait("XPATH", mbo.LoggedInUser,driver)){
				 if(LoggedInUser.getAttribute("textContent").contains("Hello, ")){
					 repfn.FnUpdateTestStepResHTML("Verify V2 user has logged-in", "V2 user has logged-in with username:" +NewUser,"PASS",runManagerInfoObj);
					 blnFlag=true;
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify V2 user has logged-in", "V2 user has not logged-in with username:" +NewUser,"FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }

				 //driver.navigate().refresh();
			 }


			 Thread.sleep(5000);
			 if(cnf.FnExplicitWait("XPATH", mbo.Home_OverviewLabel,driver)){
				 WebElement OverviewPageVerification_V2=driver.findElement(By.xpath(mbo.Home_OverviewLabel));
				 currentUrl = driver.getCurrentUrl();
				 System.out.println(currentUrl);
				 if(currentUrl.contains("smb")){
					 repfn.FnUpdateTestStepResHTML("Verify V2 user is navigated to Overview page","V2 user is navigated to Overview page","PASS",runManagerInfoObj);
					 blnFlag=true;
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify V2 user is navigated to Overview page","V2 user is not navigated to Overview page","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }

			 Thread.sleep(5000);
			 if(cnf.FnExplicitWait("XPATH", mbo.payBill_Link_V2,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is displayed","Pay Bill button is displayed","PASS",runManagerInfoObj);
				 WebElement payBill_Link=driver.findElement(By.xpath(mbo.payBill_Link_V2));
				 if(cnf.JSClick(payBill_Link,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is clicked","Pay Bill button is clicked","PASS",runManagerInfoObj);
					 Thread.sleep(5000);

					 if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationOne,driver)){
						 WebElement payBill_PageVerification_1=driver.findElement(By.xpath(mbo.PageVerificationOne));
						 if(payBill_PageVerification_1.getAttribute("textContent").equalsIgnoreCase("Billing")){
							 if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationTwo,driver)){
								 WebElement payBill_PageVerification_2=driver.findElement(By.xpath(mbo.PageVerificationTwo));
								 if(payBill_PageVerification_2.getAttribute("textContent").equalsIgnoreCase("Pay Bill")){
									 currentUrl = driver.getCurrentUrl();
									 System.out.println(currentUrl);
									 if(currentUrl.contains("smb")){
										 repfn.FnUpdateTestStepResHTML("Verify V2 user navigated to Pay Bill page","V2 user navigated to Pay Bill page","PASS",runManagerInfoObj);
										 loginStatusV2 = true;
										 blnFlag=true;
									 }
									 else{
										 repfn.FnUpdateTestStepResHTML("Verify V2 user navigated to Pay Bill page","V2 user is not navigated to Pay Bill page","FAIL",runManagerInfoObj);
										 blnFlag=false;
									 }
								 }

							 }
						 }
					 }
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is clicked","Pay Bill button is not clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is displayed","Pay Bill button is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }


		 }

		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify V2 user is navigated to Pay Bill page",
					 "V2 user is not navigated to Pay Bill page due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	 }
	 public synchronized boolean VerifyV1UserLogin(WebDriver driver,RunManagerInfo runManagerInfoObj){

		 String currentUrl = "Login_During_User_Change ";

		 try{

			 String AppUser=m1.get("AppUser").toString();

			 Thread.sleep(5000);
			 WebElement LoggedInUser=driver.findElement(By.xpath(mbo.LoggedInUser));
			 if(cnf.FnExplicitWait("XPATH", mbo.LoggedInUser,driver)){
				 if(LoggedInUser.getAttribute("textContent").contains("Hello, ")){
					 repfn.FnUpdateTestStepResHTML("Verify V1 user has logged-in", "V1 user has logged-in with username:" +AppUser,"PASS",runManagerInfoObj);
					 blnFlag=true;
				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify V1 user has logged-in", "V1 user has not logged-in with username:" +AppUser,"FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }

				 //driver.navigate().refresh();
			 }

			 Thread.sleep(5000);
			 if(cnf.FnExplicitWait("XPATH", mbo.PageVerification_V1,driver)){
				 WebElement OverviewPageVerification_V1=driver.findElement(By.xpath(mbo.PageVerification_V1));
				 if(OverviewPageVerification_V1.getAttribute("textContent").equalsIgnoreCase("Overview"))
				 {
					 currentUrl = driver.getCurrentUrl();
					 System.out.println(currentUrl);
					 if(currentUrl.contains("smb1")){
						 repfn.FnUpdateTestStepResHTML("Verify V1 user is navigated to Overview page","V1 user is navigated to Overview page","PASS",runManagerInfoObj);
						 blnFlag=true;
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify V1 user is navigated to Overview page","V1 user is not navigated to Overview page","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }

				 }
			 }

			 Thread.sleep(5000);
			 if(cnf.FnExplicitWait("XPATH", mbo.payBill_Link_V1,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is displayed","Pay Bill button is displayed","PASS",runManagerInfoObj);
				 WebElement payBill_Link=driver.findElement(By.xpath(mbo.payBill_Link_V1));
				 if(cnf.JSClick(payBill_Link,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is clicked","Pay Bill button is clicked","PASS",runManagerInfoObj);
					 Thread.sleep(5000);
					 WebElement payBill_PageVerification_V1=driver.findElement(By.xpath(mbo.PageVerification_V1));
					 if(cnf.FnExplicitWait("XPATH", mbo.PageVerification_V1,driver)){
						 if(payBill_PageVerification_V1.getAttribute("textContent").equalsIgnoreCase("Pay Bill")){
							 currentUrl = driver.getCurrentUrl();
							 System.out.println(currentUrl);
							 if(currentUrl.contains("smb1")){
								 repfn.FnUpdateTestStepResHTML("Verify V1 user navigated to Pay Bill page","V1 user navigated to Pay Bill page","PASS",runManagerInfoObj);
								 loginStatusV1 = true;
								 blnFlag=true;
							 }
							 else{
								 repfn.FnUpdateTestStepResHTML("Verify V1 user navigated to Pay Bill page","V1 user is not navigated to Pay Bill page","FAIL",runManagerInfoObj);
								 blnFlag=false;
							 }
						 }

					 }

				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is clicked","Pay Bill button is not clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is displayed","Pay Bill button is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }




		 }

		 catch(Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify V1 user is navigated to Pay Bill page",
					 "V1 user is not navigated to Pay Bill page due to some exception","FAIL",runManagerInfoObj);
			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }
	 public synchronized boolean VerifyBothUserLoginStatus(WebDriver driver,RunManagerInfo runManagerInfoObj){

		 try{
			 if(loginStatusV1 == true && loginStatusV2 == true){
				 repfn.FnUpdateTestStepResHTML("Verify Both V1 and V2 user successfully navigated to Pay Bill page",
						 "Both V1 and V2 user successfully navigated to Pay Bill page","PASS",runManagerInfoObj);
				 blnFlag=true;
			 }
			 else if(loginStatusV1 == true && loginStatusV2 == false){
				 repfn.FnUpdateTestStepResHTML("Verify Both V1 and V2 user successfully navigated to Pay Bill page",
						 "V1 user successfully navigated to Pay Bill page. But V2 user did not navigate to Pay Bill page","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 else if(loginStatusV1 == false && loginStatusV2 == true){
				 repfn.FnUpdateTestStepResHTML("Verify Both V1 and V2 user successfully navigated to Pay Bill page",
						 "V2 user successfully navigated to Pay Bill page. But V1 user did not navigate to Pay Bill page","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Both V1 and V2 user successfully navigated to Pay Bill page",
						 "Both V1 and V2 user did not successfully navigate to Pay Bill page","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }

		 catch (Exception e)

		 {
			 repfn.FnUpdateTestStepResHTML("Verify both V1 and V2 users have navigated to Pay Bill page",
					 "Both V1 and V2 users have not navigated to Pay Bill page due to some exception","FAIL",runManagerInfoObj);

			 blnFlag=false;
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());

		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;

	 }

	
	 public synchronized boolean FnLearnMoreinViewStatement(WebDriver driver,RunManagerInfo runManagerInfoObj){
    	  
    	  try{
    		  Thread.sleep(5000);
    		
           			
           				
    						if(cnf.FnExplicitWait("XPATH", mbo.ViewStatament_Page,driver)){
    							repfn.FnUpdateTestStepResHTML("Verify User is on View Statements page", "User is on View Statements page","PASS",runManagerInfoObj);
    							
    							Thread.sleep(5000);
    							if(cnf.FnExplicitWait("XPATH", mbo.ViewStatament_LearnMore,driver)){
    								repfn.FnUpdateTestStepResHTML("Verify Learn More option is present under Charge Details", "Learn More option is present under Charge Details","PASS",runManagerInfoObj);
    								WebElement ViewStatement_LearnMore=driver.findElement(By.xpath(mbo.ViewStatament_LearnMore));
    								WebElement ViewStatement_Description=driver.findElement(By.xpath(mbo.ViewStatament_Description));
    								String description= ViewStatement_Description.getText();
    								cnf.JSClick(ViewStatement_LearnMore,driver);
    								Thread.sleep(3000);
    								if(cnf.FnExplicitWait("XPATH", mbo.LearnMore_ModalWindow,driver)){
    									repfn.FnUpdateTestStepResHTML("Verify Learn More Modal Window is present", "Learn More Modal Window is present","PASS",runManagerInfoObj);
        								WebElement LearnMore_ModalWindow=driver.findElement(By.xpath(mbo.LearnMore_ModalWindow));
        								String title=LearnMore_ModalWindow.getText();
        								blnFlag=true;
        								if(title.equalsIgnoreCase(description)){
        									repfn.FnUpdateTestStepResHTML("Verify User is able to see description of selected service", "User is able to see description of selected service","PASS",runManagerInfoObj);
        									blnFlag=true;
        								}else{
        									repfn.FnUpdateTestStepResHTML("Verify User is able to see description of selected service", "User is not able to see description of selected service","FAIL",runManagerInfoObj);
        									blnFlag=false;
        								}
    								}
    								else{
    									repfn.FnUpdateTestStepResHTML("Verify Learn More Modal Window is present", "Learn More Modal Window is not present","FAIL",runManagerInfoObj);
    									blnFlag=false;
    								}
    								
    								
    							}else{
    								repfn.FnUpdateTestStepResHTML("Verify Learn More option is present under Charge Details", "Learn More option is not present under Charge Details","FAIL",runManagerInfoObj);
    								blnFlag=false;
    							}
    							
    							
    						}
    						else{
    							repfn.FnUpdateTestStepResHTML("Verify User is on View Statements page", "User is not on View Statements page","FAIL",runManagerInfoObj);
    							blnFlag=false;
    						}
           				
    	  }
        	  
    	  catch (Exception e)

  		{
  			repfn.FnUpdateTestStepResHTML("Verify User is able to view the modal window with description of service of click of Learn More",
  					"User is able to view the modal window with description of service of click of Learn More","FAIL",runManagerInfoObj);

  	      	 blnFlag=false;
  			System.err.println("Message : "+e.getMessage());
  			System.err.println("Cause : "+e.getCause());
  			
  		}
  		m1.put("STEPSTATUS", blnFlag);
  		return blnFlag;
    	  
      
	 }
	 
	 
       public synchronized boolean FnVerifyPayBillButton(WebDriver driver,RunManagerInfo runManagerInfoObj){
       	
       	try{
       		
       		driver.switchTo().frame("iFrameResizer0");
       		Thread.sleep(2000);
       		if(cnf.FnExplicitWait("XPATH", mbo.PayNowButton,driver)){
       			((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.PayNowButton)));   
       			repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is displayed","PASS",runManagerInfoObj);
       			WebElement PayNowButton=driver.findElement(By.xpath(mbo.PayNowButton));
       			//cnf.ScrollToView(PayNowButton);
       			if(PayNowButton.isEnabled()){
       				repfn.FnUpdateTestStepResHTML("Verify Pay Now button is enabled","Pay Now button is enabled.","PASS",runManagerInfoObj);
       				
       				blnFlag=true;
       			}
       			else{
       				repfn.FnUpdateTestStepResHTML("Verify Pay Now button is enabled","Pay Now button is not enabled","FAIL",runManagerInfoObj);
       				blnFlag=false;
       			}
       		}
       		else{
       			repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is not displayed","FAIL",runManagerInfoObj);
       			blnFlag=false;
       		}
       		
       		
       		driver.switchTo().defaultContent();
       		
       		Thread.sleep(5000);
       		if(cnf.FnExplicitWait("XPATH", mbo.ViewStatementsLink,driver)){
       			repfn.FnUpdateTestStepResHTML("Verify View Statements Link is displayed","View Statements Link is displayed","PASS",runManagerInfoObj);
       			WebElement ViewStatementsLink=driver.findElement(By.xpath(mbo.ViewStatementsLink));
       			if(cnf.JSClick(ViewStatementsLink,driver)){
       				repfn.FnUpdateTestStepResHTML("Verify View Statements Link is clicked","View Statements Link is clicked","PASS",runManagerInfoObj);
       				WebElement ConfirmCancel=driver.findElement(By.xpath(mbo.ConfirmCancel));
						if(cnf.FnExplicitWait("XPATH", mbo.ConfirmCancel,driver)){
							repfn.FnUpdateTestStepResHTML("Verify Confirm Navigation pop-up is displayed", "Confirm Navigation pop-up is displayed","PASS",runManagerInfoObj);
							cnf.JSClick(ConfirmCancel,driver);
							repfn.FnUpdateTestStepResHTML("Verify Navigation to View Statements page", "Navigation to View Statements page is done","PASS",runManagerInfoObj);
							Thread.sleep(5000);
							blnFlag=true;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Confirm Navigation pop-up is displayed", "Confirm Navigation pop-up is not displayed","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
       				
       			}
       			else{
       				repfn.FnUpdateTestStepResHTML("Verify View Statements Link is clicked","View Statements Link is not clicked","FAIL",runManagerInfoObj);
       				blnFlag=false;
       			}
       			
       			
       		}
       		else{
       			repfn.FnUpdateTestStepResHTML("Verify View Statements Link is displayed","View Statements Link is not displayed","FAIL",runManagerInfoObj);
       			blnFlag=false;
       		}
       		
       		
       	}
       	
       	catch (Exception e)

     		{
     			repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Now button on Pay Bill page",
     					"User is able to verify Pay Now button on Pay Bill page due to some exception","FAIL",runManagerInfoObj);

     	      	 blnFlag=false;
     			System.err.println("Message : "+e.getMessage());
     			System.err.println("Cause : "+e.getCause());
     			
     		}
     		m1.put("STEPSTATUS", blnFlag);
     		return blnFlag;
       }
     
      
       public synchronized boolean FnVerifyNavigationToConfirmPayment(WebDriver driver,RunManagerInfo runManagerInfoObj){
         	
         	try{
         		
         		driver.switchTo().frame("iFrameResizer0");
          		Thread.sleep(2000);
       
         		if(cnf.FnExplicitWait("XPATH", mbo.VerifyPayementPage,driver)){
         			
         			repfn.FnUpdateTestStepResHTML("Verify user is navigated to complete payment page","User is navigated to complete payment page","PASS",runManagerInfoObj);
         			blnFlag=true;
         			
         			
         			}
         			else{
         				repfn.FnUpdateTestStepResHTML("Verify Pay Now button is not enabled","Pay Now button is not enabled","FAIL",runManagerInfoObj);
         				blnFlag=false;
         			}
         		
         		
         		
         	driver.switchTo().defaultContent();
         	
         		Thread.sleep(5000);
         		if(cnf.FnExplicitWait("XPATH", mbo.ViewStatementsLink,driver)){
         			repfn.FnUpdateTestStepResHTML("Verify View Statements Link is displayed","View Statements Link is displayed","PASS",runManagerInfoObj);
         			WebElement ViewStatementsLink=driver.findElement(By.xpath(mbo.ViewStatementsLink));
         			if(cnf.JSClick(ViewStatementsLink,driver)){
         				repfn.FnUpdateTestStepResHTML("Verify View Statements Link is clicked","View Statements Link is clicked","PASS",runManagerInfoObj);
         				WebElement ConfirmCancel=driver.findElement(By.xpath(mbo.ConfirmCancel));
  						if(cnf.FnExplicitWait("XPATH", mbo.ConfirmCancel,driver)){
  							repfn.FnUpdateTestStepResHTML("Verify Confirm Navigation pop-up is displayed", "Confirm Navigation pop-up is displayed","PASS",runManagerInfoObj);
  							cnf.JSClick(ConfirmCancel,driver);
  							repfn.FnUpdateTestStepResHTML("Verify Navigation to View Statements page", "Navigation to View Statements page is done","PASS",runManagerInfoObj);
  							Thread.sleep(5000);
  							blnFlag=true;
  						}
  						else{
  							repfn.FnUpdateTestStepResHTML("Verify Confirm Navigation pop-up is displayed", "Confirm Navigation pop-up is not displayed","FAIL",runManagerInfoObj);
  							blnFlag=false;
  						}
         				
         			}
         			else{
         				repfn.FnUpdateTestStepResHTML("Verify View Statements Link is clicked","View Statements Link is not clicked","FAIL",runManagerInfoObj);
         				blnFlag=false;
         			}
         			
         			
         		}
         		else{
         			repfn.FnUpdateTestStepResHTML("Verify View Statements Link is displayed","View Statements Link is not displayed","FAIL",runManagerInfoObj);
         			blnFlag=false;
         		}
         		
         		
         	}
         	
         	catch (Exception e)

       		{
       			repfn.FnUpdateTestStepResHTML("Verify user is able to navigate to confim payment page",
       					"user is able to navigate to confim payment page due to some exception","FAIL",runManagerInfoObj);

       	      	 blnFlag=false;
       			System.err.println("Message : "+e.getMessage());
       			System.err.println("Cause : "+e.getCause());
       			
       		}
       		m1.put("STEPSTATUS", blnFlag);
       		return blnFlag;
         }
    
      
      public synchronized boolean fnPayBillButton(WebDriver driver,RunManagerInfo runManagerInfoObj) {
			try
			{
				

					WebElement payBillButton=driver.findElement(By.xpath(mbo.payBillButton));
					if(cnf.JSClick(payBillButton,driver))
					{
						blnFlag=true;
						repfn.FnUpdateTestStepResHTML("Verify if user has clicked the pay now button","User has clicked the pay now button","PASS",runManagerInfoObj);
						WebElement payBillScreen=driver.findElement(By.xpath(mbo.payBillScreen));
						if(cnf.FnExplicitWait("XPATH", mbo.payBillScreen,driver))
						{
							blnFlag=true;
							repfn.FnUpdateTestStepResHTML("Verify if user has navigated to pay bill screen","User has navigated to pay bill screen","PASS",runManagerInfoObj);
						}
						else
						{
							blnFlag=false;
							repfn.FnUpdateTestStepResHTML("Verify if user has navigated to pay bill screen","User has not navigated to pay bill screen","FAIL",runManagerInfoObj);
						}
					}
					else
					{
						blnFlag=false;
						repfn.FnUpdateTestStepResHTML("Verify if user has clicked the pay now button","User has not clicked the pay now button","FAIL",runManagerInfoObj);
					}
				
			}
			catch (Exception e)
		{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to see \"Pay Now\" button ","User is not able to see \"Pay Now\" button due to some exception ","FAIL",runManagerInfoObj);
	        System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
		}
	
	 public synchronized boolean PayBill(WebDriver driver,RunManagerInfo runManagerInfoObj)
	 {
	 	try
	 	{
	 		if(cnf.FnExplicitWait("XPATH", mbo.PayBillLink,driver))
	 		{
	 			WebElement PayBill=driver.findElement(By.xpath(mbo.PayBillLink));
	 			repfn.FnUpdateTestStepResHTML("Verify if Pay Bill link is present", "Pay Bill link is present", "PASS",runManagerInfoObj);
	 			if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.PayBillLink,driver))
	 			{
	 				cnf.JSClick(PayBill,driver);
	 				Thread.sleep(3000);
	 				repfn.FnUpdateTestStepResHTML("Click the Pay Bill link", "Pay Bill link is clicked", "PASS",runManagerInfoObj);
	 				
	 					repfn.FnUpdateTestStepResHTML("Verify if User is navigated to Pay Bill page", "User is navigated to the Pay Bill page", "PASS",runManagerInfoObj);
	 					blnFlag=true;
	 			}
	 				else
	 				{
	 					repfn.FnUpdateTestStepResHTML("Verify if User is navigated to Pay Bill page", "User is not navigated to the Pay Bill page", "FAIL",runManagerInfoObj);
	 					blnFlag=false;

	 				}
	 			}
	 		
	 		
	 	}
	 	catch(Exception e)
	 	{
	 		repfn.FnUpdateTestStepResHTML("Verify if User can be navigated to Pay Bill page", "User could not be navigated to Pay Bill page", "FAIL",runManagerInfoObj);
	 		blnFlag=false;
	 		System.err.println("Message : "+e.getMessage());
	         System.err.println("Cause : "+e.getCause());
	 	}
	 	 m1.put("STEPSTATUS", blnFlag);
	      return blnFlag;
	 }


	 public synchronized boolean MyAccount_Billing(WebDriver driver,RunManagerInfo runManagerInfoObj){
	     try{
	            cnf.FnExplicitWait("XPATH", mbo.MyAccount_Billing,driver);
	            WebElement Billing=driver.findElement(By.xpath(mbo.MyAccount_Billing));
	            if(Billing.isDisplayed()){
	         	   cnf.JSClick(Billing,driver);
	         	   System.out.println("Billing page");
	                  repfn.FnUpdateTestStepResHTML("Verify User is in Billing page","User is in billing page","PASS",runManagerInfoObj);
	                  Thread.sleep(2000);
	                  blnFlag=true;
	                  
	            }
	            else{
	                  repfn.FnUpdateTestStepResHTML("Verify User in Billing page","User is not in billing page","FAIL",runManagerInfoObj);
	       blnFlag=false;
	            }
	            
	     }
	     
	     catch (Exception e)

	     {
	            System.err.println("Message : "+e.getMessage());
	            System.err.println("Cause : "+e.getCause());
	            
	     }
	     m1.put("STEPSTATUS", blnFlag);
	     return blnFlag;
	 }

	

	 public synchronized boolean PayBill_Calender(WebDriver driver,RunManagerInfo runManagerInfoObj){
	     try{
	          if(cnf.FnExplicitWait("XPATH", mbo.PayBill_DatePicker,driver))
	          {
	         	 repfn.FnUpdateTestStepResHTML("Verify if the Date Picker is present to select the Payment Date", "Date picker is present", "PASS",runManagerInfoObj);
	         	 
	         	 WebElement Cal=driver.findElement(By.xpath(mbo.PayBill_DatePicker));
	         	 if(Cal.isDisplayed())
	         	 {
	         		 cnf.JSClick(Cal,driver);
	         		 repfn.FnUpdateTestStepResHTML("Click the Date picker icon", "The Date picker icon is clicked", "PASS",runManagerInfoObj);
	         		 if(cnf.FnExplicitWait("XPATH", mbo.PayBill_DatePickerExpanded,driver))
	         		 {
	         			 repfn.FnUpdateTestStepResHTML("Verify if the Calender is opened to select a date", "Calender is opened", "PASS",runManagerInfoObj);
	         			 blnFlag=true;
	         		 }
	         		 else
	         		 {
	         			 repfn.FnUpdateTestStepResHTML("Verify if the Calender is opened to select a date", "Calender is not opened", "FAIL",runManagerInfoObj);
	         			 blnFlag=false; 
	         		 }
	         	 }
	         	 else
	         	 {
	         		 repfn.FnUpdateTestStepResHTML("Click the Date picker icon", "The Date picker icon is not clicked", "FAIL",runManagerInfoObj);
	         		 blnFlag=false;
	         	 }
	                  
	            }
	            else{
	         	   repfn.FnUpdateTestStepResHTML("Verify if the Date Picker is present to select the Payment Date", "Date picker is not present", "FAIL",runManagerInfoObj);
	       blnFlag=false;
	            }
	            
	     }
	     
	     catch (Exception e)

	     {
	            System.err.println("Message : "+e.getMessage());
	            System.err.println("Cause : "+e.getCause());
	            
	     }
	     m1.put("STEPSTATUS", blnFlag);
	     return blnFlag;
	 }



	 public synchronized boolean PayBill_Calender_SelectDate(WebDriver driver,RunManagerInfo runManagerInfoObj){
	     try{
	          if(cnf.FnExplicitWait("XPATH", mbo.PayBill_DatePicker_SelectDate,driver))
	          {
	         	 repfn.FnUpdateTestStepResHTML("Verify if Dates are available for selection", "Dates are available for selection", "PASS",runManagerInfoObj);
	         	
	         	List<WebElement> Dates=driver.findElements(By.xpath(mbo.PayBill_DatePicker_SelectDate));
	         	for(WebElement OneDate:Dates)
	         	{
	         		if(OneDate.getAttribute("disabled").equals("false"))
	         		{
	         			System.out.println("Enabled date" +OneDate.getAttribute("textContent"));
	         			cnf.JSClick(OneDate,driver);
	         			 repfn.FnUpdateTestStepResHTML("Click the particular Date", "The Date is clicked", "PASS",runManagerInfoObj);
	         			 blnFlag=true;
	         			 break;
	         		}
	         		else
	         		{
	         			System.out.println("Inside the loop");
	         		}
	         		     	}
	         	 if(cnf.FnExplicitWait("XPATH", mbo.PayBill_PaymentDate,driver))
	     		 {
	     			 WebElement Date=driver.findElement(By.xpath(mbo.PayBill_PaymentDate));
	     			 if(!Date.getAttribute("value").isEmpty())
	     			 repfn.FnUpdateTestStepResHTML("Verify if the selected Date is displayed", "Selected Date is displayed", "PASS",runManagerInfoObj);
	     			 blnFlag=true;
	     		 }
	     		 else
	     		 {
	     			 repfn.FnUpdateTestStepResHTML("Verify if the Calender is opened to select a date", "Calender is not opened", "FAIL",runManagerInfoObj);
	     			 blnFlag=false; 
	     		 }
	          }           
	     }
	     
	     catch (Exception e)

	     {
	            System.err.println("Message : "+e.getMessage());
	            System.err.println("Cause : "+e.getCause());
	            
	     }
	     m1.put("STEPSTATUS", blnFlag);
	     return blnFlag;
	 }

	 public synchronized boolean FnVerifyContacts(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
		{
			try{

				if(cnf.FnExplicitWait("XPATH",mbo.contactNameList,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Contacts List is displayed on Contacts Page", "Contacts List is displayed on Contacts Page","PASS",runManagerInfoObj);
					List<WebElement> contactNameList=driver.findElements(By.xpath(mbo.contactNameList));
					
					if(contactNameList.size() > 0){
						for(WebElement contact: contactNameList){
							repfn.FnUpdateTestStepResHTML("Verify Contact is present in Contacts List with name:  "+contact.getText(), "Contact is present in Contacts List with name:  "+contact.getText(),"PASS",runManagerInfoObj);
						}
						
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Contact is present in Contacts List", "Contact is not present in Contacts List","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
					
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Contacts List is displayed on Contacts Page", "Contacts List is not displayed on Contacts Page","FAIL",runManagerInfoObj);
					blnFlag=false;
				}

			}
			catch(Exception e)
			{
				repfn.FnUpdateTestStepResHTML("Verify Contact is present in Contacts List ", "Contact is not present in Contacts List  due to some exception","FAIL",runManagerInfoObj);
				blnFlag	=false;
				System.err.println("Message : "+e.getMessage());
				System.err.println("Cause : "+e.getCause());

			}

			m1.put("STEPSTATUS", blnFlag);
			return blnFlag;
		}
	 
		
	public synchronized boolean FnContactsTabClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
		try{


			if(cnf.FnExplicitWait("XPATH",mbo.ContactsLink,driver)){
				WebElement ContactsLink=driver.findElement(By.xpath(mbo.ContactsLink));

				repfn.FnUpdateTestStepResHTML("Verify if the Contact link is displayed in the Left Navigation panel ","ContactsLink is displayed","PASS",runManagerInfoObj);
				if(cnf.ElementClick(ContactsLink,driver)){
					repfn.FnUpdateTestStepResHTML("Verify ContactsLink is Clicked ","ContactsLink is Clicked","PASS",runManagerInfoObj);
					driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
					Thread.sleep(5000);
					if(driver.getCurrentUrl().contains("/voice/contacts")){
						repfn.FnUpdateTestStepResHTML("Verify Contact Page is Loaded ","Contacts Page is Loaded ","PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Contact Page is Loaded ","Contacts Page is not  Loaded ","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify ContactsLink is Clicked ","ContactsLink is not Clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if the Contact link is displayed in the Left Navigation panel ","ContactsLink is not  displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}

		catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify user is able to click on the contacts Tab ","user is able to click on the contacts Tab due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}
	public synchronized boolean FN_CancelConfirmPopup(WebDriver driver,RunManagerInfo runManagerInfoObj)
	{
		try{
			if(cnf.FnExplicitWait("Xpath", mbo.Confirmationpopup_Block,driver)) {
				repfn.FnUpdateTestStepResHTML("Verify if the Confirmation Pop up is displayed","Confirmation Pop up is displayed","PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.ConfirmCancel,driver)){
					WebElement Confirmbtn=driver.findElement(By.xpath(mbo.ConfirmCancel));
					repfn.FnUpdateTestStepResHTML("Verify if the Confirm button is displayed in the Pop Up","Confirm button is displayed","PASS",runManagerInfoObj);
					if(cnf.JSClick(Confirmbtn,driver)){
						repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked "," Confirm button is clicked","PASS",runManagerInfoObj);				
						blnFlag=true;				
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked "," Confirm button is not clicked","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if the Confirm button is displayed in the Pop Up","Confirm button is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if the Confirmation Pop up is displayed","Confirmation Pop up is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}

		catch (Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify confirm button is clicked "," Confirm button is not clicked due to some exception","FAIL",runManagerInfoObj);
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			blnFlag=false;

		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	}



	public synchronized boolean FnAssignLine_Cancel(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

		String AliasName = "";
		String userName = "";
		try{

			if(cnf.FnExplicitWait("XPATH",mbo.ManageLineAliasNameText,driver)){
				WebElement ManageLineAliasNameText=driver.findElement(By.xpath(mbo.ManageLineAliasNameText));
				AliasName = ManageLineAliasNameText.getAttribute("value");
			}

			if(cnf.FnExplicitWait("XPATH",mbo.AddAssignmentLine,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Add Assignment Link is displayed", "Add Assignment Link is displayed","PASS",runManagerInfoObj);
				WebElement AddAssignmentLine=driver.findElement(By.xpath(mbo.AddAssignmentLine));
				if(cnf.JSClick(AddAssignmentLine,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Add Assignment Link is clicked", "Add Assignment Link is clicked","PASS",runManagerInfoObj);
					Thread.sleep(5000);

					if(cnf.FnExplicitWait("XPATH",mbo.AssignLineUsersList,driver)){
						repfn.FnUpdateTestStepResHTML("Verify User List is displayed", "User List is displayed","PASS",runManagerInfoObj);
						List<WebElement> AssignLineUsersList=driver.findElements(By.xpath(mbo.AssignLineUsersList));
						if(AssignLineUsersList.size() > 0){

							if(cnf.FnExplicitWait("XPATH",mbo.AssignLineRadioButtons,driver)){
								List<WebElement> AssignLineRadioButtons=driver.findElements(By.xpath(mbo.AssignLineRadioButtons));
								if(cnf.FnExplicitWait("XPATH",mbo.AssignLineUsersName,driver)){
									List<WebElement> AssignLineUsersName=driver.findElements(By.xpath(mbo.AssignLineUsersName));
									WebElement radioButton = AssignLineRadioButtons.get(0);
									if(cnf.JSClick(radioButton,driver)){
										repfn.FnUpdateTestStepResHTML("Verify User is selected ", "User: " +AssignLineUsersName.get(0).getText()+"is selected","PASS",runManagerInfoObj);
										userName = AssignLineUsersName.get(0).getText();

										Thread.sleep(5000);
										if(cnf.FnExplicitWait("XPATH",mbo.Assign_SaveBtn,driver)){
											repfn.FnUpdateTestStepResHTML("Verify Save button is displayed", "Save button is displayed","PASS",runManagerInfoObj);
											WebElement Assign_SaveBtn=driver.findElement(By.xpath(mbo.Assign_SaveBtn));
											if(cnf.JSClick(Assign_SaveBtn,driver)){
												repfn.FnUpdateTestStepResHTML("Verify Save button is clicked", "Save button is clicked","PASS",runManagerInfoObj);

												Thread.sleep(3000);

												if(cnf.FnExplicitWait("XPATH",mbo.DeleteAssignmentLine,driver)){
													if(cnf.FnExplicitWait("XPATH",mbo.AssignedName,driver)){
														WebElement AssignedName=driver.findElement(By.xpath(mbo.AssignedName));
														if(AssignedName.getText().equalsIgnoreCase(userName)){
															repfn.FnUpdateTestStepResHTML("Verify Selected User has been assigned to the current phone line", "Selected User has been assigned to the current phone line","PASS",runManagerInfoObj);

															if(cnf.FnExplicitWait("XPATH",mbo.CancelEdit,driver)){
																repfn.FnUpdateTestStepResHTML("Verify Cancel link is displayed", "Cancel link is displayed","PASS",runManagerInfoObj);
																WebElement CancelEdit=driver.findElement(By.xpath(mbo.CancelEdit));
																if(cnf.JSClick(CancelEdit,driver)){
																	repfn.FnUpdateTestStepResHTML("Verify Cancel link is clicked", "Cancel link is clicked","PASS",runManagerInfoObj);
																	Thread.sleep(3000);

																	if(cnf.FnExplicitWait("XPATH",mbo.ConfirmCancel,driver)){
																		repfn.FnUpdateTestStepResHTML("Verify Confirmation pop-up is displayed", "Confirmation pop-up is displayed","PASS",runManagerInfoObj);
																		repfn.FnUpdateTestStepResHTML("Verify Confirm link is displayed", "Confirm link is displayed","PASS",runManagerInfoObj);
																		WebElement ConfirmCancel=driver.findElement(By.xpath(mbo.ConfirmCancel));
																		if(cnf.JSClick(ConfirmCancel,driver)){
																			repfn.FnUpdateTestStepResHTML("Verify Confirm link is clicked", "Confirm link is clicked","PASS",runManagerInfoObj);

																			Thread.sleep(2000);
																			driver.navigate().refresh();

																			if(cnf.FnExplicitWait("XPATH",mbo.ManageLinesList,driver)){
																				if(cnf.FnExplicitWait("XPATH",mbo.ManageLineAliasName,driver)){
																					repfn.FnUpdateTestStepResHTML("Verify Alias Name is present in Manage Lines List", "Alias Name is present in Manage Lines List","PASS",runManagerInfoObj);
																					List<WebElement> ManageLineAliasName=driver.findElements(By.xpath(mbo.ManageLineAliasName));
																					for(WebElement name: ManageLineAliasName){
																						if(name.getText().equalsIgnoreCase(AliasName)){
																							cnf.JSClick(name,driver);
																							repfn.FnUpdateTestStepResHTML("Verify Alias Name is clicked", "Alias Name is clicked","PASS",runManagerInfoObj);
																							break;
																						}
																					}

																					Thread.sleep(3000);
																					if(cnf.FnExplicitWait("XPATH",mbo.AssignPerson,driver)){
																						WebElement AssignPerson=driver.findElement(By.xpath(mbo.AssignPerson));
																						if(AssignPerson.getText().equalsIgnoreCase(userName)){
																							repfn.FnUpdateTestStepResHTML("Verify Assigning New User action is canceled", "Assigning New User action is not canceled","FAIL",runManagerInfoObj);
																							blnFlag	=false;
																						}
																						else{
																							repfn.FnUpdateTestStepResHTML("Verify Assigning New User action is canceled", "Assigning New User action is canceled","PASS",runManagerInfoObj);
																							blnFlag	=true;
																						}
																					}
																				}
																				else{
																					repfn.FnUpdateTestStepResHTML("Verify Alias Name is present in Manage Lines List", "Alias Name is not present in Manage Lines List","FAIL",runManagerInfoObj);
																					blnFlag	=false;
																				}

																			}

																		}
																		else{
																			repfn.FnUpdateTestStepResHTML("Verify Confirm link is clicked", "Confirm link is not clicked","FAIL",runManagerInfoObj);
																			blnFlag	=false;
																		}
																	}
																	else{
																		repfn.FnUpdateTestStepResHTML("Verify Confirm link is displayed", "Confirm link is not displayed","FAIL",runManagerInfoObj);
																		blnFlag	=false;
																	}
																}
															}
															else{
																repfn.FnUpdateTestStepResHTML("Verify Cancel link is displayed", "Cancel link is not displayed","FAIL",runManagerInfoObj);
																blnFlag	=false;
															}
														}
														else{
															repfn.FnUpdateTestStepResHTML("Verify Selected User has been assigned to the current phone line", "Selected User is not assigned to the current phone line","FAIL",runManagerInfoObj);
															blnFlag	=false;
														}
													}
												}
											}
											else{
												repfn.FnUpdateTestStepResHTML("Verify Save button is clicked", "Save button is not clicked","FAIL",runManagerInfoObj);
												blnFlag	=false;
											}
										}
										else{
											repfn.FnUpdateTestStepResHTML("Verify Save button is displayed", "Save button is not displayed","FAIL",runManagerInfoObj);
											blnFlag	=false;
										}
									}
									else{
										repfn.FnUpdateTestStepResHTML("Verify User is selected ", "User is not selected","FAIL",runManagerInfoObj);
										blnFlag	=false;
									}
								}

							}
						}

					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User List is displayed", "User List is not displayed","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Add Assignment Link is clicked", "Add Assignment Link is not clicked","FAIL",runManagerInfoObj);
					blnFlag	=false;
				}

			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Add Assignment Link is displayed", "Add Assignment Link is not displayed","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
		}

		catch(Exception e)
		{
			repfn.FnUpdateTestStepResHTML("Verify Contact is present in Contacts List ", "Contact is not present in Contacts List  due to some exception","FAIL",runManagerInfoObj);
			blnFlag	=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());

		}

		m1.put("STEPSTATUS", blnFlag);
		return blnFlag; 
	}




public synchronized boolean fnProfileData(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	try {
		String lastNameText = "";

		if(cnf.FnExplicitWait("XPATH", mbo.manageFirstNameLabel,driver))
		{
			WebElement firstNameLabel = driver.findElement(By.xpath(mbo.manageFirstNameLabel));
			repfn.FnUpdateTestStepResHTML("Verify if \"First Name\" label is displayed","\"First Name\" label is displayed", "PASS",runManagerInfoObj);
			if (cnf.FnExplicitWait("ID", mbo.manageFirstName,driver)) {
				int RandomInt = randomInt;
				Random_int_validation = "James" + RandomInt;
				driver.findElement(By.id(mbo.manageFirstName)).sendKeys(Random_int_validation);
				blnFlag = true;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to enter first name","User is able to enter first name: "+ Random_int_validation, "PASS",runManagerInfoObj);
			} 
			else {
				blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to enter first name","User is not able to enter first name: "+ Random_int_validation, "FAIL",runManagerInfoObj);
			}
		} 
		else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"First Name\" label is displayed","\"First Name\" label is not displayed", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitWait("XPATH", mbo.manageLastNameLabel,driver))
		{
			WebElement lastNameLabel = driver.findElement(By.xpath(mbo.manageLastNameLabel));
			repfn.FnUpdateTestStepResHTML("Verify if \"Last Name\" label is displayed","\"Last Name\" label is displayed", "PASS",runManagerInfoObj);
			if (cnf.FnExplicitWait("ID", mbo.manageLastName,driver)) {
				lastNameText = m1.get("LastName").toString();
				driver.findElement(By.id(mbo.manageLastName)).sendKeys(lastNameText);
				repfn.FnUpdateTestStepResHTML("Verify if user is able to enter last name","User is able to enter last name: "+ lastNameText, "PASS",runManagerInfoObj);
			} 
			else {
				blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to enter last name","User is not able to enter last name: "+ lastNameText, "FAIL",runManagerInfoObj);
			}
		} 
		else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Last Name\" label is displayed","\"Last Name\" label is not displayed", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitWait("XPATH", mbo.manageEmailAddLabel,driver))
		{
			WebElement emailAddLabel = driver.findElement(By.xpath(mbo.manageEmailAddLabel));
			String emailAddress = Random_int_validation+ lastNameText + "@gmail.com";
			repfn.FnUpdateTestStepResHTML("Verify if \"Email\" label is displayed","\"Email\" label is displayed", "PASS",runManagerInfoObj);
			if (cnf.FnExplicitWait("XPATH", mbo.manageEmailAddress,driver)) {
				driver.findElement(By.xpath(mbo.manageEmailAddress)).sendKeys(emailAddress);
				repfn.FnUpdateTestStepResHTML("Verify if user is able to enter email address","User is able to enter email address: "+ emailAddress, "PASS",runManagerInfoObj);
			} 
			else {
				blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to enter email address","User is not able to enter email address: "+ emailAddress, "FAIL",runManagerInfoObj);
			}
		} 
		else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Email\" label is displayed","\"Email\" label is not displayed", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitWait("XPATH", mbo.managePrimaryPhone,driver))
		{
			WebElement phoneLabel = driver.findElement(By.xpath(mbo.managePrimaryPhone));
			repfn.FnUpdateTestStepResHTML("Verify if \"Phone\" label is displayed","\"Phone\" label is displayed", "PASS",runManagerInfoObj);
			if (cnf.FnExplicitWait("XPATH", mbo.managePhone,driver)) {
				int RandomInt = randomInt;
				int randomIntTemp = (String.valueOf(RandomInt)).length() < 4 ? 2587 : RandomInt;
				String Random_int_validation = "932" + randomIntTemp+ "545";
				driver.findElement(By.xpath(mbo.managePhone)).sendKeys(Random_int_validation);
				blnFlag = true;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to enter phone number","User is able to enter phone number: "+ Random_int_validation, "PASS",runManagerInfoObj);
			} 
			else {
				blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to enter phone number","User is not able to enter phone number: "+ Random_int_validation, "FAIL",runManagerInfoObj);
			}
		} 
		else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Phone\" label is displayed","\"Phone\" label is not displayed", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitWait("XPATH", mbo.manageRequired,driver))
		{
			WebElement requiredLabel = driver.findElement(By.xpath(mbo.manageRequired));
			repfn.FnUpdateTestStepResHTML("Verify if \"*Required\" label is displayed","\"*Required\" label is displayed", "PASS",runManagerInfoObj);
			blnFlag = true;
		} else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"*Required\" label is displayed","\"*Required\" label is not displayed", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitWait("XPATH", mbo.manageCancel,driver))
		{
			WebElement cancelButton = driver.findElement(By.xpath(mbo.manageCancel));
			repfn.FnUpdateTestStepResHTML("Verify if \"Cancel\" button is present","\"Cancel\" button is present", "PASS",runManagerInfoObj);
			blnFlag = true;
		} else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Cancel\" button is present","\"Cancel\" button is not present", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitWait("XPATH",mbo.manageNextButton,driver))
		{
			WebElement NextButton = driver.findElement(By.xpath(mbo.manageNextButton));
			repfn.FnUpdateTestStepResHTML("Verify if \"Next\" button is present","\"Next\" button is present", "PASS",runManagerInfoObj);
			if (cnf.JSClick(NextButton,driver)) {
				Thread.sleep(5000);
				blnFlag = true;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to click next button","User is able to click next button", "PASS",runManagerInfoObj);

			} else {
				blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to click next button","User is not able to click next button","FAIL",runManagerInfoObj);
			}
		} else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Next\" button is present","\"Next\" button is not present", "FAIL",runManagerInfoObj);
		}
	}

	catch (Exception e) {
		blnFlag = false;
		repfn.FnUpdateTestStepResHTML("Verify that the Account Owner/ Administrator user is able to enter information in Profile tab while creating a New User","Account Owner/ Administrator user is not able to enter information in Profile tab while creating a New User due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : " + e.getMessage());
		System.err.println("Cause : " + e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean fnSelectRole(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	try {

		if (cnf.FnExplicitWait("XPATH", mbo.managestandardRole,driver)) {			
			repfn.FnUpdateTestStepResHTML("Verify if Standard role is present","Standard role is present", "PASS",runManagerInfoObj);
			WebElement standardRole = driver.findElement(By.xpath(mbo.managestandardRole));
			if (cnf.JSClick(standardRole,driver)) {
				blnFlag = true;
				repfn.FnUpdateTestStepResHTML("Verify if Standard role is selected","Standard role is selected", "PASS",runManagerInfoObj);
			} else {
				blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if Standard role is selected","Standard role is not selected", "FAIL",runManagerInfoObj);
			}
		} else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if Standard role is present","Standard role is not present", "FAIL",runManagerInfoObj);
		}



		if (cnf.FnExplicitWait("XPATH", mbo.manageAdministrator,driver)) {
			blnFlag = true;
			repfn.FnUpdateTestStepResHTML("Verify if Administrator role is present","Administrator role is present", "PASS",runManagerInfoObj);
		} else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if Administrator role is present","Administrator role is not present", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitlessWait("XPATH", mbo.manageRequired,driver))
		{
			WebElement requiredLabel = driver.findElement(By.xpath(mbo.manageRequired));
			blnFlag = true;
			repfn.FnUpdateTestStepResHTML("Verify if \"*Required\" label is displayed","\"*Required\" label is displayed", "PASS",runManagerInfoObj);
		} else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"*Required\" label is displayed","\"*Required\" label is not displayed", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitlessWait("XPATH", mbo.manageBackText,driver))
		{
			WebElement backText = driver.findElement(By.xpath(mbo.manageBackText));
			blnFlag = true;
			repfn.FnUpdateTestStepResHTML("Verify if \"Back\" link is present","\"Back\" link is present", "PASS",runManagerInfoObj);
		} else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Back\" link is present","\"Back\" link is not present", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitWait("XPATH", mbo.manageCancel,driver))
		{
			WebElement cancelButton = driver.findElement(By.xpath(mbo.manageCancel));
			blnFlag = true;
			repfn.FnUpdateTestStepResHTML("Verify if \"Cancel\" button is present","\"Cancel\" button is present", "PASS",runManagerInfoObj);
		} else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Cancel\" button is present","\"Cancel\" button is not present", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitWait("XPATH", mbo.manageNextButton,driver))
		{
			WebElement NextButton = driver.findElement(By.xpath(mbo.manageNextButton));
			repfn.FnUpdateTestStepResHTML("Verify if \"Next\" button is present","\"Next\" button is present", "PASS",runManagerInfoObj);
			if (cnf.JSClick(NextButton,driver)) {
				Thread.sleep(5000);
				blnFlag = true;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to click next button","User is able to click next button", "PASS",runManagerInfoObj);

			} else {
				blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to click next button","User is not able to click next button", "FAIL",runManagerInfoObj);
			}
		} 
		else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Next\" button is present","\"Next\" button is not present", "FAIL",runManagerInfoObj);
		}
	} 

	catch (Exception e) {
		blnFlag = false;
		repfn.FnUpdateTestStepResHTML("Verify that the Account Owner/ Administrator user is able to select user role while creating a New User","Account Owner/ Administrator user is not able to select user role while creating a New User due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : " + e.getMessage());
		System.err.println("Cause : " + e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}

public synchronized boolean fnManageVoice(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		if(cnf.FnExplicitWait("XPATH", mbo.manageSkip,driver))
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if \"Skip\" link is present", "\"Skip\" link is present", "PASS",runManagerInfoObj);
		}
		else
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if \"Skip\" link is present", "\"Skip\" link is present", "PASS",runManagerInfoObj);
		}

		if(cnf.FnExplicitWait("XPATH", mbo.manageDisabledNextButton,driver))
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if \"Next\" button is disabled before selecting any phone number", "\"Next\" button is disabled before selecting any phone number", "PASS",runManagerInfoObj);
		}
		else
		{
			blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Next\" button is disabled before selecting any phone number", "\"Next\" button is not disabled before selecting any phone number", "FAIL",runManagerInfoObj);
		}

		if(cnf.FnExplicitWait("XPATH",mbo.manageVoiceLineButton,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify if \"Add voice line\" button is present", "\"Add voice line\" button is present", "PASS",runManagerInfoObj);
			WebElement addVoiceLine=driver.findElement(By.xpath(mbo.manageVoiceLineButton));
			if(cnf.JSClick(addVoiceLine,driver)){
				repfn.FnUpdateTestStepResHTML("Verify if \"Add voice line\" button is clicked", "\"Add voice line\" button is clicked", "PASS",runManagerInfoObj);

				if(cnf.FnExplicitWait("XPATH", mbo.VoiceLineValue,driver))
				{
					WebElement VoiceLineValue=driver.findElement(By.xpath(mbo.VoiceLineValue));
					repfn.FnUpdateTestStepResHTML("Verify Voice line is added", "Voice line is added: "+VoiceLineValue.getText(), "PASS",runManagerInfoObj);

					if(cnf.FnExplicitWait("XPATH",mbo.manageNextButton,driver))
					{
						repfn.FnUpdateTestStepResHTML("Verify if \"Next\" button is present", "\"Next\" button is present", "PASS",runManagerInfoObj);
						WebElement NextButton=driver.findElement(By.xpath(mbo.manageNextButton));
						if(cnf.JSClick(NextButton,driver))
						{
							Thread.sleep(5000);
							blnFlag=true;
							repfn.FnUpdateTestStepResHTML("Verify if User is able to click next button", "User is able to click next button", "PASS",runManagerInfoObj);  			    	
						}
						else
						{
							blnFlag=false;
							repfn.FnUpdateTestStepResHTML("Verify if User is able to click next button", "User is not able to click next button", "FAIL",runManagerInfoObj);
						}
					}
					else
					{
						blnFlag=false;
						repfn.FnUpdateTestStepResHTML("Verify if \"Next\" button is present", "\"Next\" button is not present", "FAIL",runManagerInfoObj);
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Voice line is added", "Voice line is not added", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if \"Add voice line\" button is clicked", "\"Add voice line\" button is not clicked", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else
		{
			if(cnf.FnExplicitWait("XPATH", mbo.NoVoiceLines,driver)) {				
				WebElement NoVoiceLinesmsg=driver.findElement(By.xpath(mbo.NoVoiceLinesmsg));
				String msg=NoVoiceLinesmsg.getText();
				repfn.FnUpdateTestStepResHTML("Verify if any Voice line is present or not","No voice line button is present as warning message displayed is: "+msg, "PASS",runManagerInfoObj);

				boolean blnFlag1 = FnUnassignVoiceLineAndReturn(driver,runManagerInfoObj);
				if(blnFlag1){
					boolean blnFlag2 = fnManageVoice(driver,runManagerInfoObj);
					if(blnFlag2){
						blnFlag = true;
					}
					else{
						blnFlag = false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify User is able to unassign Voice Line and Return to adding a new user","User is not able to unassign Voice Line and Return to adding a new user", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}				
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify No Voice line warning message is displayed","No Voice line warning message is not displayed", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}

		}
	}
	catch(Exception e)
	{
		blnFlag=false;
		repfn.FnUpdateTestStepResHTML("Verify that the Account Owner/ Administrator user is able to add a new Voice line", "Account Owner/ Administrator user is not able to add a new Voice line due to some exception", "FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean FN_UnassignContactListClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		if(cnf.FnExplicitWait("XPATH", mbo.UnassignedContactList,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Users with unassigned voice lines are displayed","Users with unassigned voice lines are displayed","PASS",runManagerInfoObj);
			List<WebElement> UnassignedContactList=driver.findElements(By.xpath(mbo.UnassignedContactList));
			if(cnf.JSClick(UnassignedContactList.get(0),driver)){
				repfn.FnUpdateTestStepResHTML("Verify User with unassigned voice lines is clicked","User with unassigned voice lines is clicked: "+UnassignedContactList.get(0).getText(),"PASS",runManagerInfoObj);
				Thread.sleep(4000);
				if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
					repfn.FnUpdateTestStepResHTML("Verify ManageDetailpopup is displayed "," ManageDetailpopup is displayed","PASS",runManagerInfoObj);				
					if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
						repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed ","Edit button is displayed","PASS",runManagerInfoObj);
						WebElement ManageLine_Editbutton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton));
						if(cnf.JSClick(ManageLine_Editbutton,driver)){
							repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is clicked","PASS",runManagerInfoObj);
							blnFlag=true;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is not clicked","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed ","Edit button is not displayed","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify  ManageDetailpopup is displayed "," ManageDetailpopup is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}else{
				repfn.FnUpdateTestStepResHTML("Verify User with unassigned voice lines is clicked","User with unassigned voice lines is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Users with unassigned voice lines are displayed","Users with unassigned voice lines are displayed. So need to remove voice line assignment.","PASS",runManagerInfoObj);
			boolean blnFlag1=FN_RemoveAssignmentLink(driver,runManagerInfoObj);
			if(blnFlag1){
				boolean blnFlag2=FN_RemoveAssignmentLineClick(driver,runManagerInfoObj);
				if(blnFlag2){
					boolean blnFlag3=FN_CancelConfirmPopup(driver,runManagerInfoObj);
					if(blnFlag3)
					{
						boolean blnFlag4=FN_SaveButtonClick(driver,runManagerInfoObj);
						if(blnFlag4)
						{
							boolean blnFlag5=Fn_closeDetails(driver,runManagerInfoObj);
							if(blnFlag5){
								if(cnf.FnExplicitWait("XPATH", mbo.UnassignedContactList,driver)){
									repfn.FnUpdateTestStepResHTML("Verify Users with unassigned voice lines are displayed","Users with unassigned voice lines are displayed","PASS",runManagerInfoObj);
									List<WebElement> UnassignedContactList=driver.findElements(By.xpath(mbo.UnassignedContactList));
									if(cnf.JSClick(UnassignedContactList.get(0),driver)){
										repfn.FnUpdateTestStepResHTML("Verify User with unassigned voice lines is clicked","User with unassigned voice lines is clicked: "+UnassignedContactList.get(0).getText(),"PASS",runManagerInfoObj);
										Thread.sleep(4000);
										if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
											repfn.FnUpdateTestStepResHTML("Verify ManageDetailpopup is displayed "," ManageDetailpopup is displayed","PASS",runManagerInfoObj);				
											if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
												repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed ","Edit button is displayed","PASS",runManagerInfoObj);
												WebElement ManageLine_Editbutton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton));
												if(cnf.JSClick(ManageLine_Editbutton,driver)){
													repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is clicked","PASS",runManagerInfoObj);
													blnFlag=true;
												}
												else{
													repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is not clicked","FAIL",runManagerInfoObj);
													blnFlag=false;
												}
											}
											else{
												repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed ","Edit button is not displayed","FAIL",runManagerInfoObj);
												blnFlag=false;
											}
										}
										else{
											repfn.FnUpdateTestStepResHTML("Verify  ManageDetailpopup is displayed "," ManageDetailpopup is not displayed","FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									}else{
										repfn.FnUpdateTestStepResHTML("Verify User with unassigned voice lines is clicked","User with unassigned voice lines is not clicked","FAIL",runManagerInfoObj);
										blnFlag=false;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify Users with unassigned voice lines are displayed","Users with unassigned voice lines are not displayed","FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify  ManageDetailpopup is closed "," ManageDetailpopup is not closed","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Unassigning Voice line is saved"," Unassigning Voice line is not saved","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked to confirm unassignment of voice line"," Confirm button is not clicked to confirm unassignment of voice line","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Remove Assignment Button is displayed and clicked","Remove Assignment Button is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Users with voice lines assigned are Displayed","Users with voice lines assigned are not Displayed.","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
	}
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify UnassignedContactList is Displayed and clicked ","UnassignedContactList is not Displayed and  not clicked due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean FN_RemoveAssignmentLink(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		if(cnf.FnExplicitWait("XPATH", mbo.ManageUsersList_AssignedLine,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Users with voice lines assigned are Displayed","Users with voice lines assigned are Displayed","PASS",runManagerInfoObj);
			List<WebElement> ManageLine_AssignmentList=driver.findElements(By.xpath(mbo.ManageUsersList_AssignedLine));
				if(cnf.JSClick(ManageLine_AssignmentList.get(0),driver)){
					repfn.FnUpdateTestStepResHTML("Verify User with voice lines assigned is clicked","User with voice lines assigned is clicked: "+ManageLine_AssignmentList.get(0).getText(),"PASS",runManagerInfoObj);
					Thread.sleep(3000);
					if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
						repfn.FnUpdateTestStepResHTML("Verify ManageDetailpopup is displayed "," ManageDetailpopup is displayed","PASS",runManagerInfoObj);
						
						if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
							repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed ","Edit button is displayed","PASS",runManagerInfoObj);
							WebElement ManageLine_Editbutton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton));
							if(cnf.JSClick(ManageLine_Editbutton,driver)){
								repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is clicked","PASS",runManagerInfoObj);
								blnFlag=true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is not clicked","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed ","Edit button is not displayed","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify  ManageDetailpopup is displayed "," ManageDetailpopup is not displayed","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}else{
					repfn.FnUpdateTestStepResHTML("Verify User with voice lines assigned is clicked","User with voice lines assigned is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Users with voice lines assigned are Displayed","Users with voice lines assigned are not Displayed. Hence, need to assign voice lines.","PASS",runManagerInfoObj);
			boolean blnFlag1=FN_UnassignContactListClick(driver,runManagerInfoObj);
			if(blnFlag1){
				boolean blnFlag2=FN_NewAssignMentLinkClick(driver,runManagerInfoObj);
				if(blnFlag2){
					boolean blnFlag3=FN_NewAssignListClick(driver,runManagerInfoObj);
					if(blnFlag3){
						boolean blnFlag4=FN_AssignmentFinalSave(driver,runManagerInfoObj);
						if(blnFlag4){
							if(cnf.FnExplicitWait("XPATH", mbo.ManageUsersList_AssignedLine,driver)){
								repfn.FnUpdateTestStepResHTML("Verify Users with voice lines assigned are Displayed","Users with voice lines assigned are Displayed","PASS",runManagerInfoObj);
								List<WebElement> ManageLine_AssignmentList=driver.findElements(By.xpath(mbo.ManageUsersList_AssignedLine));
									if(cnf.JSClick(ManageLine_AssignmentList.get(0),driver)){
										repfn.FnUpdateTestStepResHTML("Verify User with voice lines assigned is clicked","User with voice lines assigned is clicked: "+ManageLine_AssignmentList.get(0).getText(),"PASS",runManagerInfoObj);
										Thread.sleep(3000);
										if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
											repfn.FnUpdateTestStepResHTML("Verify ManageDetailpopup is displayed "," ManageDetailpopup is displayed","PASS",runManagerInfoObj);
											
											if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
												repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed ","Edit button is displayed","PASS",runManagerInfoObj);
												WebElement ManageLine_Editbutton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton));
												if(cnf.JSClick(ManageLine_Editbutton,driver)){
													repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is clicked","PASS",runManagerInfoObj);
													blnFlag=true;
												}
												else{
													repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is not clicked","FAIL",runManagerInfoObj);
													blnFlag=false;
												}
											}
											else{
												repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed ","Edit button is not displayed","FAIL",runManagerInfoObj);
												blnFlag=false;
											}
										}
										else{
											repfn.FnUpdateTestStepResHTML("Verify  ManageDetailpopup is displayed "," ManageDetailpopup is not displayed","FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									}else{
										repfn.FnUpdateTestStepResHTML("Verify User with voice lines assigned is clicked","User with voice lines assigned is not clicked","FAIL",runManagerInfoObj);
										blnFlag=false;
									}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Users with voice lines assigned are Displayed","Users with voice lines assigned are not Displayed","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Assignment Line is added Sucessfully ","Assignment Line is not  added Sucessfully","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify New Assign List is displayed and User is assigned","New Assign List is not displayed and User is not assigned","FAIL",runManagerInfoObj);
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Add New Assignee link is displayed and clicked","Add New Assignee link is not displayed and clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify User with unassigned voice lines is displayed and clicked","User with unassigned voice lines is not displayed and clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
	}
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify ManageLine_AssignmentList is Displayed and clicked","ManageLine_AssignmentList is not  Displayed and clicked due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean FN_NewAssignListClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		Thread.sleep(2000);
		if(cnf.FnExplicitWait("XPATH", mbo.NewAssignment_Radiobuttonone,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify if the radio button is present to select a new Assignee", "Radio button is present to select a new assignee", "PASS",runManagerInfoObj);
			WebElement Radio=driver.findElement(By.xpath(mbo.NewAssignment_Radiobuttonone));
			if(cnf.JSClick(Radio,driver))
			{
				repfn.FnUpdateTestStepResHTML("Verify Click on the radio button", "Radio button is clicked", "PASS",runManagerInfoObj);
				boolean blnFlag1=FN_AssignLineSaveButtonClick(driver,runManagerInfoObj);
				if(blnFlag1){
					blnFlag=true;
				}
				else{
					blnFlag=false;
				}
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify Click on the radio button", "Radio button is not clickable", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify if the radio button is present to select a new Assignee", "Radio button is not present to select a new assignee", "FAIL",runManagerInfoObj);
			blnFlag=false;
		}		
	}

	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify NewAssignList is displayed and clicked","NewAssignList is not  displayed and  not clicked due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean FN_AssignLineSaveButtonClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		if(cnf.FnExplicitWait("XPATH",mbo.NewAssignmentEdit_Save,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify Save button is displayed "," Save button is displayed","PASS",runManagerInfoObj);
			WebElement Confirmbtn=driver.findElement(By.xpath(mbo.NewAssignmentEdit_Save));
			//Confirmbtn.click();
			if(cnf.JSClick(Confirmbtn,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Save button is clicked "," Save button is clicked","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Save button is clicked "," Save button is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify Save button is displayed "," Save button is not displayed","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}

	catch (Exception e)

	{
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		repfn.FnUpdateTestStepResHTML("Verify Save button is displayed and clicked "," Save button is not displayed and clicked due to some exception","FAIL",runManagerInfoObj);
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean FN_NewAssignMentLinkClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{

		Thread.sleep(1000);
		if(cnf.FnExplicitWait("Xpath", mbo.AddNewAssignmentLine,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify Add New Assignment Line is displayed","Add New Assignment Line is displayed","PASS",runManagerInfoObj);				
			WebElement AddNewAssignmentLine=driver.findElement(By.xpath(mbo.AddNewAssignmentLine));
			Thread.sleep(3000);
			if(cnf.ElementClick1(AddNewAssignmentLine)){
				Thread.sleep(5000);
				repfn.FnUpdateTestStepResHTML("Verify Click on the Add New Assignee link","Add New Assignment Line is clicked","PASS",runManagerInfoObj);
				blnFlag=true;
			}			
			else{
				repfn.FnUpdateTestStepResHTML("Verify Click on the Add New Assignee link","Add New Assignment Line is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify Add New Assignment Line is displayed","Add New Assignment Line is not displayed","FAIL",runManagerInfoObj);	
			blnFlag=false;
		}
	}

	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify AddNewAssignmentLine is displayed and clicked","AddNewAssignmentLine is not  displayed and  not clicked due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean FN_AssignmentFinalSave(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		if(cnf.FnExplicitWait("XPATH", mbo.NewAssignment_Save,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify if Save button is present", "Save button is present", "PASS",runManagerInfoObj);
			WebElement Save=driver.findElement(By.xpath(mbo.NewAssignment_Save));
			if(cnf.JSClick(Save,driver))
			{
				Thread.sleep(1000);
				repfn.FnUpdateTestStepResHTML("Verify Click on Save button", "Save button is clicked", "PASS",runManagerInfoObj);

				if(cnf.FnExplicitWait("XPATH", mbo.SaveNotWorkingText,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Save functionality working or not","Save functionality not working","FAIL",runManagerInfoObj);
					blnFlag=false;
					if(cnf.FnExplicitWaitFeedback("XPATH", mbo.Cancel_Button,driver))
					{
						WebElement close=driver.findElement(By.xpath(mbo.Cancel_Button));
						if(cnf.JSClick(close,driver)){
							repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked","Cancel button is clicked","PASS",runManagerInfoObj);
							blnFlag=false;
							Thread.sleep(2000);
							WebElement Confrm=driver.findElement(By.xpath(mbo.Confirm_btn));
							System.out.println("click aftr save not working");
							if(cnf.JSClick(Confrm,driver))
							{
								repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked","Confirm button is clicked","PASS",runManagerInfoObj);
								Thread.sleep(2000);
								driver.navigate().refresh();
								Thread.sleep(2000);
								blnFlag=false;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked","Confirm button is not clicked","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Cancel button is clicked","Cancel button is not clicked","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Cancel button is displayed","Cancel button is not displayed","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else
				{
					if(cnf.FnExplicitWait("Xpath", mbo.SavedAssignee,driver))
					{
						repfn.FnUpdateTestStepResHTML("Verify Assignment Line is added Sucessfully","Assignment Line is  added Sucessfully","PASS",runManagerInfoObj);
						boolean blnFlag1=Fn_closeDetails(driver,runManagerInfoObj);
						if(blnFlag1){
							blnFlag=true;
						}
						else{
							blnFlag=false;
						}
					}
					else
					{
						repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is  added Sucessfully ","AssignmentLine is not  added Sucessfully","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
					driver.navigate().refresh();
				}
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify Click on Save button", "Save button is not clickable", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify if Save button is present", "Save button is not present", "FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}

	catch(Exception e)
	{
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
		repfn.FnUpdateTestStepResHTML("Verify AssignmentLine is  added Sucessfully","AssignmentLine is not added Sucessfully due to some exception","FAIL",runManagerInfoObj);
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}

public synchronized boolean FnUnassignVoiceLineAndReturn(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		boolean blnFlag1=fncancelAddingUser(driver,runManagerInfoObj);
		if(blnFlag1){
			boolean blnFlag2=FnNavigateBackOverviewPage(driver,runManagerInfoObj);
			if(blnFlag2){
				boolean blnFlag3=FnVoiceClick(driver,runManagerInfoObj);
				if(blnFlag3){
					boolean blnFlag4=FnManageLinkClick(driver,runManagerInfoObj);
					if(blnFlag4){
						boolean blnFlag5=FN_RemoveAssignmentLink(driver,runManagerInfoObj);
						if(blnFlag5){
							boolean blnFlag6=FN_RemoveAssignmentLineClick(driver,runManagerInfoObj);
							if(blnFlag6){
								boolean blnFlag7=FN_CancelConfirmPopup(driver,runManagerInfoObj);
								if(blnFlag7){
									boolean blnFlag8=FN_SaveButtonClick(driver,runManagerInfoObj);
									if(blnFlag8){
										boolean blnFlag9=FnNavigateBackOverviewPage(driver,runManagerInfoObj);
										if(blnFlag9){
											boolean blnFlag10=FnManageUsers(driver,runManagerInfoObj);
											if(blnFlag10){
												boolean blnFlag11=FnClickAddNewUser(driver,runManagerInfoObj);
												if(blnFlag11){
													boolean blnFlag12=fnProfileData(driver,runManagerInfoObj);													
													if(blnFlag12){
														boolean blnFlag13=fnSelectRole(driver,runManagerInfoObj);
														if(blnFlag13){
															blnFlag = true;
															repfn.FnUpdateTestStepResHTML("Verify User is able to select Role and click on Next button","User is able to select Role and click on Next button", "PASS",runManagerInfoObj);
														}
														else{
															repfn.FnUpdateTestStepResHTML("Verify User is able to select Role and click on Next button","User is not able to select Role and click on Next button", "FAIL",runManagerInfoObj);
															blnFlag = false;
														}
													}
													else{
														repfn.FnUpdateTestStepResHTML("Verify User is able to enter Profile information and click on Next button","User is not able to enter Profile information and click on Next button", "FAIL",runManagerInfoObj);
														blnFlag = false;
													}
												}
												else{
													repfn.FnUpdateTestStepResHTML("Verify User is on Add New User page", "User is not on Add New User page","FAIL",runManagerInfoObj);
													blnFlag	=false;
												}
											}
											else{
												repfn.FnUpdateTestStepResHTML("Verify Manage Users link is displayed and clicked","Manage Users link is not displayed and clicked", "FAIL",runManagerInfoObj);
												blnFlag = false;
											}
										}
										else{
											repfn.FnUpdateTestStepResHTML("Verify User Return back to Overview Page","User is not Return back to Overview Page","FAIL",runManagerInfoObj);
											blnFlag=false;
										}
									}
									else{
										repfn.FnUpdateTestStepResHTML("Verify Save button is displayed and clicked "," Save button is not displayed and clicked","PASS",runManagerInfoObj);
										blnFlag=false;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify Confirm button is clicked after unassigning voice line"," Confirm button is not clicked after unassigning voice line","FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify Remove Assignment Button is displayed and clicked","Remove Assignment Button is not displayed and clicked","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User with voice lines assigned is clicked","User with voice lines assigned is not clicked","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User is navigated to Manage Lines Page","User is not navigated to Manage Lines Page","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}				
				else{
					repfn.FnUpdateTestStepResHTML("Verify Voice Page is Loaded "," Voice Page is not Loaded", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify User Return back to Overview Page","User is not Return back to Overview Page","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify User is navigated to Manage users page after cancelling changes","User is not navigated to Manage users page after cancelling changes","FAIL",runManagerInfoObj);
			blnFlag = false;
		}
	}
	catch(Exception e)
	{
		blnFlag=false;
		repfn.FnUpdateTestStepResHTML("Verify that User is able to unassign voice line and continue with creating a new user", "User is not able to unassign voice line and continue with creating a new user due to some exception", "FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean FN_RemoveAssignmentLineClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{

		if(cnf.FnExplicitWait("XPATH", mbo.RemoveAssignmentBtn,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Remove Assignment Button is displayed","Remove Assignment Button is displayed","PASS",runManagerInfoObj);
			WebElement RemoveAssignmentBtn=driver.findElement(By.xpath(mbo.RemoveAssignmentBtn));
			if(cnf.JSClick(RemoveAssignmentBtn,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Remove Assignment Button is clicked","Remove Assignment Button is clicked","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Remove Assignment Button is clicked","Remove Assignment Button is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}		
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Remove Assignment Button is displayed","Remove Assignment Button is not displayed","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}

	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify RemoveAssignmentBtn is displayed and clicked","RemoveAssignmentBtn is not displayed and  not clicked due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}


public synchronized boolean fncancelAddingUser(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try{
		if (cnf.FnExplicitWait("XPATH", mbo.manageCancel,driver)) {
			repfn.FnUpdateTestStepResHTML("Verify if \"Cancel\" link is present","\"Cancel\" link is present", "PASS",runManagerInfoObj);
			WebElement cancelLink = driver.findElement(By.xpath(mbo.manageCancel));
			if (cnf.JSClick(cancelLink,driver)) {
				Thread.sleep(5000);
				repfn.FnUpdateTestStepResHTML("Verify if \"Cancel\" link is clicked","\"Cancel\" link is clicked", "PASS",runManagerInfoObj);
				
				if(cnf.FnExplicitWait("XPATH", mbo.manageConfirmPopUp,driver)){
					repfn.FnUpdateTestStepResHTML("Verify if Confirmation popup is displayed","Confirmation popup is displayed","PASS",runManagerInfoObj);
					repfn.FnUpdateTestStepResHTML("Verify if Confirm button is displayed in popup","Confirm button is displayed in popup","PASS",runManagerInfoObj);
					WebElement confirmPopUp = driver.findElement(By.xpath(mbo.manageConfirmPopUp));
					
					if (cnf.JSClick(confirmPopUp,driver)) {
						Thread.sleep(5000);
						repfn.FnUpdateTestStepResHTML("Verify if \"Confirm\" link is clicked in popup","\"Confirm\" link is clicked in popup","PASS",runManagerInfoObj);

						if (cnf.FnExplicitWait("Xpath", mbo.ManageUserList,driver)) {
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Manage users page ","User is navigated to Manage users page","PASS",runManagerInfoObj);
							blnFlag = true;
						} 
						else {
							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Manage users page","User is not navigated to Manage users page","FAIL",runManagerInfoObj);
							blnFlag = false;
						}
					}
					else {
						blnFlag = false;
						repfn.FnUpdateTestStepResHTML("Verify if \"Confirm\" link is clicked in popup","\"Confirm\" link is not clicked in popup","FAIL",runManagerInfoObj);
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if Confirmation popup is displayed","Confirmation popup is not displayed","FAIL",runManagerInfoObj);
					repfn.FnUpdateTestStepResHTML("Verify if Confirm button is displayed in popup","Confirm button is not displayed in popup","FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			}else {
				blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if \"Cancel\" link is clicked","\"Cancel\" link is not clicked","FAIL",runManagerInfoObj);
			}

		}else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Cancel\" link is present","\"Cancel\" link is not present", "FAIL",runManagerInfoObj);
		}
	}

	catch(Exception e)
	{
		blnFlag=false;
		repfn.FnUpdateTestStepResHTML("Verify that the Account Owner/ Administrator user is able to cancel creating a New User", "Account Owner/ Administrator user is not able to cnacel creating New User due to some exception", "FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}

public synchronized boolean FnManageUserClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	
	try{
		
		if(cnf.FnExplicitWait("XPATH",mbo.ManageUsers_Link,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Manage Users link is displayed", "Manage Users link is displayed","PASS",runManagerInfoObj);
			WebElement ManageUsers_Link=driver.findElement(By.xpath(mbo.ManageUsers_Link));
			if(cnf.JSClick(ManageUsers_Link,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Manage Users link is clicked", "Manage Users link is clicked","PASS",runManagerInfoObj);
				Thread.sleep(3000);
				
				if(cnf.FnExplicitWait("XPATH",mbo.PageVerificationOne,driver)){
					WebElement PageVerificationOne=driver.findElement(By.xpath(mbo.PageVerificationOne));
					if(PageVerificationOne.getAttribute("textContent").equalsIgnoreCase("Manage Users")){
						if(cnf.FnExplicitWait("XPATH",mbo.PageVerificationTwo,driver)){
							WebElement PageVerificationTwo=driver.findElement(By.xpath(mbo.PageVerificationTwo));
							if(PageVerificationTwo.getAttribute("textContent").equalsIgnoreCase("Users")){
								repfn.FnUpdateTestStepResHTML("Verify User is navigated to Manage Users page", "User is navigated to Manage Users page","PASS",runManagerInfoObj);
								blnFlag	=true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify User is navigated to Manage Users page", "User is not navigated to Manage Users page","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User is navigated to Manage Users page", "User is not navigated to Manage Users page","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}	
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Manage Users link is clicked", "Manage Users link is not clicked","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Manage Users link is displayed", "Manage Users link is not displayed","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
	}
	
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify Contact is present in Contacts List ", "Contact is not present in Contacts List  due to some exception","FAIL",runManagerInfoObj);
		blnFlag	=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());

	}

	m1.put("STEPSTATUS", blnFlag);
	return blnFlag; 
	
}


public synchronized boolean FNEnteringData_FN_LN_Email_ExistingEmail(WebDriver driver,RunManagerInfo runManagerInfoObj){
	 try{


		 //Entering FirstName

		 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUser_FirstName,driver)){
			 WebElement AddNewUser_FirstName=driver.findElement(By.xpath(mbo.AddNewUser_FirstName));
			 AddNewUser_FirstName.sendKeys("Saranya"+randomInt);

			 repfn.FnUpdateTestStepResHTML("Verify FirstName  is Entered ","FirstName is Entered as Saranya","PASS",runManagerInfoObj);
			 blnFlag=true;

		 }
		 else{
			 repfn.FnUpdateTestStepResHTML("Verify FirstName is Entered ","FirstName is not  Entered as Saranya","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }


		 //Entering LastName

		 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUser_LastName,driver)){
			 WebElement AddNewUser_LastName=driver.findElement(By.xpath(mbo.AddNewUser_LastName));
			 AddNewUser_LastName.sendKeys("Sankaran");
			 repfn.FnUpdateTestStepResHTML("Verify LastName is Entered ","LastName is Entered as Sankaran","PASS",runManagerInfoObj);
			 blnFlag=true;
		 }
		 else{
			 repfn.FnUpdateTestStepResHTML("Verify LastName is Entered ","LastName is not  Entered","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }

		 //Entering Email
		 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUser_Emailaddres,driver)){
			 WebElement AddNewUser_Emailaddres=driver.findElement(By.xpath(mbo.AddNewUser_Emailaddres));

			 AddNewUser_Emailaddres.sendKeys("anders@charter.net");
			 repfn.FnUpdateTestStepResHTML("Enter an already existing email id","Email address is entered as anders@charter.net","PASS",runManagerInfoObj);
			 repfn.FnUpdateTestStepResHTML("Verify if error message is displayed", "No error message is displayed", "PASS",runManagerInfoObj);
			 blnFlag=true;
		 }
		 else{
			 repfn.FnUpdateTestStepResHTML("Verify Email address  is Entered ","Email address  is not  Entered","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }

		 //Entering PhoneNumber
		 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUser_PhoneNO,driver)){
			 WebElement AddNewUser_PhoneNO=driver.findElement(By.xpath(mbo.AddNewUser_PhoneNO));

			 AddNewUser_PhoneNO.sendKeys("1234567890");
			 repfn.FnUpdateTestStepResHTML("Verify Phone number is Entered ","Phone number is Entered as 1234567890","PASS",runManagerInfoObj);
			 blnFlag=true;
		 }
		 else{
			 repfn.FnUpdateTestStepResHTML("Verify Phone number is Entered ","Phone number is not  Entered","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }
	 }

	 catch (Exception e)

	 {
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());
		 repfn.FnUpdateTestStepResHTML("Verify User is able to enter FirstName,LastName,Email address and Phonenumber ","User is  not able to enter FirstName,LastName,Email address and Phonenumber due to some exception ","FAIL",runManagerInfoObj);
		 blnFlag=false;
	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}

public synchronized boolean ManageUsers_editLinkCancel(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	 try
	 {
		 WebElement cancelButton=driver.findElement(By.xpath(mbo.manageCancelButton));
		 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.manageCancelButton,driver))
		 {
			 repfn.FnUpdateTestStepResHTML("Verify if cancel button is displayed","Cancel button is displayed","PASS",runManagerInfoObj);
			 if(cnf.JSClick(cancelButton,driver))
			 {
				 Thread.sleep(5000);
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if cancel text is clicked","Cancel text is clicked","PASS",runManagerInfoObj);
			 }
			 else
			 {
				 repfn.FnUpdateTestStepResHTML("Verify if cancel text is clicked","Cancel text is not clicked","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }
		 else
		 {
			 repfn.FnUpdateTestStepResHTML("Verify if cancel button is displayed","Cancel button is not displayed","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }
	 }
	 catch (Exception e)

	 {
		
		 blnFlag=false;
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());
	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}



public synchronized boolean fnValidAccountAndRoutingNumber(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	 {
		 SimpleDateFormat curFormater = new SimpleDateFormat("MM/dd/yyyy"); 
		 Calendar calendar=Calendar.getInstance();
		 calendar.add(Calendar.DATE, 2);
		 Date dateObj = calendar.getTime(); 
		 String paymentDateInString=curFormater.format(dateObj);
		 String dateArray[]=paymentDateInString.split("/");
         String month=dateArray[0];
         String day=dateArray[1];
         String year=dateArray[2];
         String validPaymentDateChrome = (month)+"/"+day;
         String Browser=m1.get("BROWSER").toString();
        
		 System.out.println("=======Payment date======= "+paymentDateInString);
		 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.payBillButtonNotify,driver))
		 {
			 blnFlag=true;
			 repfn.FnUpdateTestStepResHTML("Verify if pay bill button is present under notification section on account dashboard screen", "Pay bill button is present under notification section on account dashboard screen", "PASS",runManagerInfoObj);
			 WebElement payBillButton=driver.findElement(By.xpath(mbo.payBillButtonNotify));
			 if(cnf.JSClick(payBillButton,driver))
			 {
				 Thread.sleep(5000);
				 driver.switchTo().frame("iFrameResizer0");
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if pay bill button is clicked", "Pay bill button is clicked", "PASS",runManagerInfoObj);
				
				 if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.checkingSavingsAccount,driver))
				 {
					 blnFlag=true;
					 repfn.FnUpdateTestStepResHTML("Verify if there is a option for checking/savings is present", "Checking/Savings option is present", "PASS",runManagerInfoObj);
					 WebElement checkingsOrSavings=driver.findElement(By.id(mbo.checkingSavingsAccount));
					 if(cnf.JSClick(checkingsOrSavings,driver))
					 {
						 Thread.sleep(5000);
						 blnFlag=true;
						 repfn.FnUpdateTestStepResHTML("Verify if user has selected the checking/savings option", "User has selected the checking/savings option", "PASS",runManagerInfoObj);
						// WebElement routingNumber=driver.findElement(By.xpath("//input[@ name='routingNumber']"));
						 if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.oneTimePayment,driver))
							{
								WebElement oneTimePayment=driver.findElement(By.id(mbo.oneTimePayment));
								cnf.JSClick(oneTimePayment,driver);
								Thread.sleep(5000);
								blnFlag=true;
								repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"One time\" payment option","User has selected the \"One time\" payment option","PASS",runManagerInfoObj);
						 if(cnf.FnExplicitWait("XPATH", mbo.routingNumber,driver))
						 {
							 driver.findElement(By.xpath(mbo.routingNumber)).sendKeys("122000247",Keys.TAB);
							 Thread.sleep(5000);
							 blnFlag=true;
							 repfn.FnUpdateTestStepResHTML("Verify if user is able to enter the routing number", "User is able to enter the routing number: "+"122000247", "PASS",runManagerInfoObj);
							
							
						 }
						 else
						 {
							 blnFlag=false;
							 repfn.FnUpdateTestStepResHTML("Verify if user is able to enter the routing number", "User is not able to enter the routing number: "+"122000247", "FAIL",runManagerInfoObj);
						 }
						 if(cnf.FnExplicitWait("ID", mbo.accountNumberInPayBill,driver))
						 {
							 driver.findElement(By.id(mbo.accountNumberInPayBill)).sendKeys("0888271156",Keys.TAB);
							 blnFlag=true;
							 repfn.FnUpdateTestStepResHTML("Verify if user is enter the account number", "User is able to enter the account number: "+"0888271156", "PASS",runManagerInfoObj);
							 if(cnf.FnExplicitWait("ID", mbo.billingPaymentAmount,driver))
							 {
								 driver.findElement(By.id(mbo.billingPaymentAmount)).sendKeys("1.00",Keys.TAB);
								 blnFlag=true;
								 repfn.FnUpdateTestStepResHTML("Verify if user is able to enter the payment amount", "User is able to enter the payment amount: "+"1.00", "PASS",runManagerInfoObj);
								 if(cnf.FnExplicitWait("ID", mbo.billingPaymentDate,driver))
								 {
									 if(Browser.equalsIgnoreCase("chrome"))
							    		{
										 driver.findElement(By.id(mbo.billingPaymentDate)).sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),validPaymentDateChrome);
										 blnFlag=true;
										 repfn.FnUpdateTestStepResHTML("Verify if user is able to enter the payment date", "User is able to enter the payment date: "+validPaymentDateChrome, "PASS",runManagerInfoObj);
							    						    			
							    		}
									 else
									 {
										 driver.findElement(By.id(mbo.billingPaymentDate)).sendKeys(paymentDateInString,Keys.TAB);
										 blnFlag=true;
										 repfn.FnUpdateTestStepResHTML("Verify if user is able to enter the payment date", "User is able to enter the payment date: "+paymentDateInString, "PASS",runManagerInfoObj);
									 }
									 
									 
									 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.billingPayNowButton,driver))
									 {
										 WebElement payNow=driver.findElement(By.xpath(mbo.billingPayNowButton));
										 cnf.JSClick(payNow,driver);
										
										 Thread.sleep(5000);
										 blnFlag=true;
										 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the pay now button", "User has clicked the pay now button", "PASS",runManagerInfoObj);
										 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.billingCompletePayment,driver))
										 {
											 blnFlag=true;
											 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to verify payment information page", "User has navigated to verify payment information page", "PASS",runManagerInfoObj);
											 WebElement completePayment=driver.findElement(By.xpath(mbo.billingCompletePayment));
											 if(cnf.JSClick(completePayment,driver))
											 {
												 blnFlag=true;
												 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the complete payment button ", "User has clicked the complete payment button", "PASS",runManagerInfoObj);
												 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.billingReturnToOverview,driver))
												 {
													 blnFlag=true;
													 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to payment complete page ", "User has navigated to payment complete page", "PASS",runManagerInfoObj);
													 WebElement returnToOverview=driver.findElement(By.xpath(mbo.billingReturnToOverview));
													 if(cnf.JSClick(returnToOverview,driver))
													 {
														 Thread.sleep(5000);
														 blnFlag=true;
														 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the Return to overview button ", "User has clicked the Return to overview button", "PASS",runManagerInfoObj);
													 }
													 else
													 {
														 blnFlag=false;
														 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the Return to overview button ", "User has not clicked the Return to overview button", "FAIL",runManagerInfoObj);
													 }
												 }
												 else
												 {
													 blnFlag=true;
													 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to payment complete page ", "User has not navigated to payment complete page", "FAIL",runManagerInfoObj);
												 }
											 }
											 else
											 {
												 blnFlag=false;
												 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the complete payment button ", "User has not clicked the complete payment button", "FAIL",runManagerInfoObj);
											 }
									
										 }
										 else
										 {
											 blnFlag=false;
											 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to verify payment information page", "User has not navigated to verify payment information page", "FAIL",runManagerInfoObj);
										 }
									 }
									 else
									 {
										 blnFlag=false;
										 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the pay now button", "User has not clicked the pay now button", "FAIL",runManagerInfoObj);
									 }
									 driver.switchTo().defaultContent();
								 }
								 else
								 {
									 blnFlag=false;
									 repfn.FnUpdateTestStepResHTML("Verify if user is able to enter the payment date", "User is not able to enter the payment date: "+paymentDateInString, "FAIL",runManagerInfoObj);
								 }
							 }
							 else
							 {
								 blnFlag=false;
								 repfn.FnUpdateTestStepResHTML("Verify if user is able to enter the payment amount", "User is not able to enter the payment amount: "+"1.00", "FAIL",runManagerInfoObj);
							 }
							 driver.switchTo().defaultContent();
						 }
						 else
						 {
							 blnFlag=false;
							 repfn.FnUpdateTestStepResHTML("Verify if user is enter the account number", "User is not able to enter the account number: "+"0888271156", "FAIL",runManagerInfoObj);
						 }
							 }
							else
							{
								blnFlag=false;
								repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"One time\" payment option","User has not selected the \"One time\" payment option","FAIL",runManagerInfoObj);
							}
						
						 
					 }
					 else
					 {
						 blnFlag=false;
						 repfn.FnUpdateTestStepResHTML("Verify if user has selected the checking/savings option", "User has not selected the checking/savings option", "FAIL",runManagerInfoObj);
					 }
					
				 }
				 else
				 {
					 blnFlag=false;
					 repfn.FnUpdateTestStepResHTML("Verify if there is a option for checking/savings is present", "Checking/Savings option is not present", "FAIL",runManagerInfoObj);
				 }
						 
			 }
			 else
			 {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Verify if pay bill button is clicked", "Pay bill button is not clicked", "FAIL",runManagerInfoObj);
			 }
		 }
		 else
		 {
			 blnFlag=false;
			 repfn.FnUpdateTestStepResHTML("Verify if pay bill button is present under notification section on account dashboard screen", "Pay bill button is not present under notification section on account dashboard screen", "FAIL",runManagerInfoObj);
		 }
	 }

	catch (Exception e)
	{
		blnFlag=false;
   	repfn.FnUpdateTestStepResHTML("Verify whether error message is getting displayed for invalid account number and valid routing number", "Error message is not getting displayed for invalid account number and valid routing number due to some exception", "FAIL",runManagerInfoObj);
          System.err.println("Message : "+e.getMessage());
          System.err.println("Cause : "+e.getCause());
          
   }
   m1.put("STEPSTATUS", blnFlag);
   return blnFlag;
}
public synchronized boolean fnNoPreviousPayments(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		if(cnf.FnExplicitWait("XPATH","//div[@class='sb-content-row single-content-header-row sb-billing-row ng-scope']",driver))
		{
			blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify whether previous payments are displayed under Payment History",  "Previous payments are not displayed under Payment History", "FAIL",runManagerInfoObj);			
		}
		else
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify whether previous payments are displayed under Payment History",  "Previous payments are displayed under Payment History", "PASS",runManagerInfoObj);
		}
	}
	catch (Exception e)
	{
		blnFlag=false;
   	repfn.FnUpdateTestStepResHTML("Verify whether error message is getting displayed for invalid account number and valid routing number", "Error message is not getting displayed for invalid account number and valid routing number due to some exception", "FAIL",runManagerInfoObj);
          System.err.println("Message : "+e.getMessage());
          System.err.println("Cause : "+e.getCause());
          
   }
   m1.put("STEPSTATUS", blnFlag);
   return blnFlag;
}


public synchronized boolean FnClickBackButton(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try{
		
		if (cnf.FnExplicitWait("XPATH", mbo.manageBackText,driver)) {
			repfn.FnUpdateTestStepResHTML("Verify if \"Back\" link is present","\"Back\" link is present", "PASS",runManagerInfoObj);
			WebElement backLink = driver.findElement(By.xpath(mbo.manageBackText));
			if (cnf.JSClick(backLink,driver)) {
				repfn.FnUpdateTestStepResHTML("Verify if \"Back\" link is clicked","\"Back\" link is clicked", "PASS",runManagerInfoObj);
				if (cnf.FnExplicitWait("XPATH",mbo.managePermissionOption,driver)) {
					repfn.FnUpdateTestStepResHTML("Verify if user is navigated back to permission options page"," User has navigated to permission options page","PASS",runManagerInfoObj);
					WebElement permissionOption = driver.findElement(By.xpath(mbo.managePermissionOption));
					if (permissionOption.isSelected()) {
						blnFlag = true;
						repfn.FnUpdateTestStepResHTML("Verify if permission option selected is retained","Permission option selected is retained","PASS",runManagerInfoObj);
					} 
					else {
						blnFlag = false;
						repfn.FnUpdateTestStepResHTML("Verify if permission option selected is retained","Permission option selected is not retained","FAIL",runManagerInfoObj);
					}
					
					if (cnf.FnExplicitWait("XPATH", mbo.manageCancel,driver)) {
						repfn.FnUpdateTestStepResHTML("Verify the presence of Cancel button", "Cancel button is present", "PASS",runManagerInfoObj);
						WebElement cancelClick = driver.findElement(By.xpath(mbo.manageCancel));
						if(cnf.JSClick(cancelClick,driver))
						{
							Thread.sleep(5000);
							repfn.FnUpdateTestStepResHTML("Verify if \"Cancel\" link is clicked","\"Cancel\" link is clicked","PASS",runManagerInfoObj);
							if(cnf.FnExplicitWait("XPATH", mbo.manageConfirmPopUp,driver)){
								repfn.FnUpdateTestStepResHTML("Verify if \"Confirm\" link is displayed in popup","\"Confirm\" link is displayed in popup","PASS",runManagerInfoObj);
								WebElement confirmPopUp = driver.findElement(By.xpath(mbo.manageConfirmPopUp));
								if (cnf.JSClick(confirmPopUp,driver)) {
									Thread.sleep(5000);
									blnFlag = true;
									repfn.FnUpdateTestStepResHTML("Verify if \"Confirm\" link is clicked in popup","\"Confirm\" link is clicked in popup","PASS",runManagerInfoObj);
								} 
								else {
									blnFlag = false;
									repfn.FnUpdateTestStepResHTML("Verify if \"Confirm\" link is clicked in popup","\"Confirm\" link is not clicked in popup","FAIL",runManagerInfoObj);
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify if \"Confirm\" link is displayed in popup","\"Confirm\" link is not displayed in popup","FAIL",runManagerInfoObj);
								blnFlag = false;
							}
						} 
						else {
							blnFlag = false;
							repfn.FnUpdateTestStepResHTML("Verify if \"Cancel\" link is clicked","\"Cancel\" link is not clicked","FAIL",runManagerInfoObj);
						}
					}
					else
					{
						repfn.FnUpdateTestStepResHTML("Verify the presence of Cancel button", "Cancel button is not present", "FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				} else {
					blnFlag = false;
					repfn.FnUpdateTestStepResHTML("Verify if user is navigated back to permission options page"," User has not navigated to permission options page","FAIL",runManagerInfoObj);
				}

			} else {
				blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if \"Back\" link is clicked","\"Back\" link is not clicked", "FAIL",runManagerInfoObj);
			}
		} else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML("Verify if \"Back\" link is present","\"Back\" link is present", "FAIL",runManagerInfoObj);
		}
					
	}
	
	catch (Exception e) {
		blnFlag = false;
		repfn.FnUpdateTestStepResHTML(
				"Verify that the Account Owner/ Administrator user is able to click back button while creating a New User",
				"Account Owner/ Administrator user is not able to click back button while creating a New User due to some exception",
				"FAIL",runManagerInfoObj);
		System.err.println("Message : " + e.getMessage());
		System.err.println("Cause : " + e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}


public synchronized boolean FnClickAddNewUser(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

try{
	
	if(cnf.FnExplicitWait("XPATH",mbo.AddNewUserButton,driver)){
		repfn.FnUpdateTestStepResHTML("Verify Add New User button is displayed on Manage Users page", "Add New User button is displayed on Manage Users page","PASS",runManagerInfoObj);
		WebElement AddNewUserButton = driver.findElement(By.xpath(mbo.AddNewUserButton));
		if(cnf.JSClick(AddNewUserButton,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Add New User button is clicked", "Add New User button is clicked","PASS",runManagerInfoObj);
			
			Thread.sleep(5000);
			if(cnf.FnExplicitWait("XPATH",mbo.PageVerificationOne,driver)){
				WebElement PageVerificationOne=driver.findElement(By.xpath(mbo.PageVerificationOne));
				if(PageVerificationOne.getAttribute("textContent").equalsIgnoreCase("Manage Users")){
					if(cnf.FnExplicitWait("XPATH",mbo.PageVerificationTwo,driver)){
						WebElement PageVerificationTwo=driver.findElement(By.xpath(mbo.PageVerificationTwo));
						if(PageVerificationTwo.getAttribute("textContent").equalsIgnoreCase("Add New User")){
							repfn.FnUpdateTestStepResHTML("Verify User is on Add New User page", "User is on Add New User page","PASS",runManagerInfoObj);
							blnFlag	=true;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User is on Add New User page", "User is not on Add New User page","FAIL",runManagerInfoObj);
							blnFlag	=false;
						}
					}
				}
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Add New User button is clicked", "Add New User button is not clicked","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
	}
	else{
		repfn.FnUpdateTestStepResHTML("Verify Add New User button is displayed on Manage Users page", "Add New User button is not displayed on Manage Users page","FAIL",runManagerInfoObj);
		blnFlag	=false;
	}
}

catch(Exception e)
{
	repfn.FnUpdateTestStepResHTML("Verify User is on Add New User page", "User is on Add New User page due to some exception","FAIL",runManagerInfoObj);
	blnFlag	=false;
	System.err.println("Message : "+e.getMessage());
	System.err.println("Cause : "+e.getCause());

}

m1.put("STEPSTATUS", blnFlag);
return blnFlag;
}

public synchronized boolean Fn_Ovw_ViewStatements(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{

		if(cnf.FnExplicitWait("Xpath",mbo.Ovw_ViewStatement,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify the presence of View Statements link in Overview page ","View Statements link in Overview page is present","PASS",runManagerInfoObj);
			WebElement ViewStatement=driver.findElement(By.xpath(mbo.Ovw_ViewStatement)); 
			if(cnf.JSClick(ViewStatement,driver))
			{
				repfn.FnUpdateTestStepResHTML("Verify View Statement link is clicked ","View Statement link is clicked","PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("Xpath",mbo.ViewStatement_Screen,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify if user is navigated to View Statement screen", "User is navigated to View Statement screen", "PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("Xpath",mbo.ViewStatement_ChargeDetailsSection,driver)){
						cnf.ScrollToView(driver.findElement(By.xpath(mbo.ViewStatement_ChargeDetailsHdr)),driver);
						repfn.FnUpdateTestStepResHTML("Verify Charge Details section is displayed ","Charge Details section is displayed","PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Charge Details section is displayed ","Charge Details section is not displayed","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else
				{
					repfn.FnUpdateTestStepResHTML("Verify if user is navigated to View Statement screen", "User is not navigated to View Statement screen", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify View Statement link is clicked ","View Statement link is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify the presence of View Statements link in Overview page","View Statements link in Overview page is not present","FAIL",runManagerInfoObj);
			blnFlag=false;
		}


	}

	catch (Exception e)

	{
		repfn.FnUpdateTestStepResHTML("Verify the presence of View Statements link in Overview page and clicked","View Statements link in Overview page is not present and not clicked due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}


public synchronized boolean FnVerifyCompletePayment(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	
	String routingNumberOne = "";
	String accountNumberOne = "";
	String paymentDateOne = "";
	String routingNumber = "";
	String accountNumber = "";
	String paymentAmount = "";
	String paymentDate = "";
	String month = "";
	String day = "";
	String year = "";
	String actualThankuMsg="Thank you for your payment!"+"\n"+"Your payment has been successfully completed. You should receive an automated confirmation of this transaction shortly. It may take up to one hour before your payment is reflected online."+"\n"+"Click below to return to your Account Overview."+"\n"+"Return to Overview";

	try{
		
		driver.switchTo().frame("iFrameResizer0");
		
		if(cnf.FnExplicitWait("XPATH", mbo.RoutingNumber,driver)){
			WebElement RoutingNumber=driver.findElement(By.xpath(mbo.RoutingNumber));
			routingNumberOne = RoutingNumber.getAttribute("value");	
			int length = routingNumberOne.length();
			routingNumber = routingNumberOne.substring((length-4));
			System.out.println(routingNumber);
			blnFlag=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Routing Number field is displayed under Payment Information option",
					"Routing Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
		if(cnf.FnExplicitWait("XPATH", mbo.BankAccountNumber,driver)){
			WebElement BankAccountNumber=driver.findElement(By.xpath(mbo.BankAccountNumber));
			accountNumberOne = BankAccountNumber.getAttribute("value");
			int length = accountNumberOne.length();
			accountNumber = accountNumberOne.substring((length-4));
			System.out.println(accountNumber);
			blnFlag=true;
		} 
		else{
			repfn.FnUpdateTestStepResHTML("Verify Bank Account Number field is displayed under Payment Information option",
					"Bank Account Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
		if(cnf.FnExplicitWait("XPATH", mbo.PaymentAmount,driver)){
			WebElement PaymentAmount=driver.findElement(By.xpath(mbo.PaymentAmount));
			paymentAmount = PaymentAmount.getAttribute("value");
			blnFlag=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Payment Amount field is displayed under Payment Information option",
					"Payment Amount Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
		if(cnf.FnExplicitWait("XPATH", mbo.PaymentDate,driver)){
   			WebElement PaymentDate=driver.findElement(By.xpath(mbo.PaymentDate));
   			paymentDateOne = PaymentDate.getAttribute("value");
   			String[] one = paymentDateOne.split("/");
   			month = one[0];
   			day = one[1];
   			String yearOne = one[2];
   			year = yearOne.substring((2));
   			paymentDate = month+"/"+day+"/"+year;
   			System.out.println(paymentDate);
   			blnFlag=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Payment Date field is displayed under Payment Information option",
					"Payment Date field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
   		Thread.sleep(2000);
   		if(cnf.FnExplicitWait("XPATH", mbo.PayNowButton,driver)){
   			((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.PayNowButton)));   
   			repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is displayed","PASS",runManagerInfoObj);
   			WebElement PayNowButton=driver.findElement(By.xpath(mbo.PayNowButton));
   			//cnf.ScrollToView(PayNowButton);
   			if(PayNowButton.isEnabled()){
   				repfn.FnUpdateTestStepResHTML("Verify Pay Now button is enabled","Pay Now button is enabled.","PASS",runManagerInfoObj);
   				if(cnf.JSClick(PayNowButton,driver)){
   					repfn.FnUpdateTestStepResHTML("Verify Pay Now button is clicked","Pay Now button is clicked.","PASS",runManagerInfoObj);
   					
   					Thread.sleep(5000);
   					
   					if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne,driver)){
   						WebElement VerifyPaymentPageOne=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne));
   						if(VerifyPaymentPageOne.getText().contains("Verify Payment Information")){
   							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is navigated to Verify Payment page","PASS",runManagerInfoObj);
   							
   							if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPage_RoutingNumber,driver)){
   								WebElement VerifyPaymentPage_RoutingNumber=driver.findElement(By.xpath(mbo.VerifyPaymentPage_RoutingNumber));
   								if(VerifyPaymentPage_RoutingNumber.getAttribute("textContent").contains(routingNumber)){
   									repfn.FnUpdateTestStepResHTML("Verify Correct Routing Number is displayed","Correct Routing Number is displayed","PASS",runManagerInfoObj);
   									blnFlag=true;
   								}
   								else{
   									repfn.FnUpdateTestStepResHTML("Verify Correct Routing Number is displayed","Correct Routing Number is not displayed","FAIL",runManagerInfoObj);
   									blnFlag=false;
   									
   								}
   							}
   							else{
   								repfn.FnUpdateTestStepResHTML("Verify Correct Routing Number is displayed","Correct Routing Number is not displayed","FAIL",runManagerInfoObj);
									blnFlag=false;
   							}
   							
   							if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_AccountNumber,driver)){
   								WebElement VerifyPaymentPageOne_AccountNumber=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_AccountNumber));
   								if(VerifyPaymentPageOne_AccountNumber.getAttribute("textContent").contains(accountNumber)){
   									repfn.FnUpdateTestStepResHTML("Verify Correct Account Number is displayed","Correct Account Number is displayed","PASS",runManagerInfoObj);
   									blnFlag=true;
   								}
   								else{
   									repfn.FnUpdateTestStepResHTML("Verify Correct Account Number is displayed","Correct Account Number is not displayed","FAIL",runManagerInfoObj);
   									blnFlag=false;
   									
   								}
   							}
   							else{
   								repfn.FnUpdateTestStepResHTML("Verify Correct Account Number is displayed","Correct Account Number is not displayed","FAIL",runManagerInfoObj);
									blnFlag=false;
   							}
   							
   							if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentAmount,driver)){
   								WebElement VerifyPaymentPageOne_PaymentAmount=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentAmount));
   								if(VerifyPaymentPageOne_PaymentAmount.getAttribute("textContent").contains(paymentAmount)){
   									repfn.FnUpdateTestStepResHTML("Verify Correct Payment Amount is displayed","Correct Payment Amount is displayed","PASS",runManagerInfoObj);
   									blnFlag=true;
   								}
   								else{
   									repfn.FnUpdateTestStepResHTML("Verify Correct Payment Amount is displayed","Correct Payment Amount is not displayed","FAIL",runManagerInfoObj);
   									blnFlag=false;
   									
   								}
   							}
   							else{
   								repfn.FnUpdateTestStepResHTML("Verify Correct Payment Amount is displayed","Correct Payment Amount is not displayed","FAIL",runManagerInfoObj);
									blnFlag=false;
   							}
   							
   							if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentDate,driver)){
   								WebElement VerifyPaymentPageOne_PaymentDate=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentDate));
   								System.out.println(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent"));
   								if(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent").contains(paymentDate)){
   									repfn.FnUpdateTestStepResHTML("Verify Correct Payment Date is displayed","Correct Payment Date is displayed","PASS",runManagerInfoObj);
   									blnFlag=true;
   								}
   								else{
   									repfn.FnUpdateTestStepResHTML("Verify Correct Payment Date is displayed","Correct Payment Date is not displayed","FAIL",runManagerInfoObj);
   									blnFlag=false;
   									
   								}
   							}
   							else{
   								repfn.FnUpdateTestStepResHTML("Verify Correct Payment Date is displayed","Correct Payment Date is not displayed","FAIL",runManagerInfoObj);
									blnFlag=false;
   							}
   							if(cnf.FnExplicitWait("XPATH", mbo.PayBill_CompletePaymentButton,driver)){
   								WebElement CompletePaymentButton=driver.findElement(By.xpath(mbo.PayBill_CompletePaymentButton));
   								repfn.FnUpdateTestStepResHTML("Verify Complete Payment Button is displayed","Complete Payment Button is displayed","PASS",runManagerInfoObj);
									blnFlag=true;
   								if(cnf.JSClick(CompletePaymentButton,driver)){
   									repfn.FnUpdateTestStepResHTML("Verify CompletePaymentButton is clicked","CompletePaymentButton is clicked.","PASS",runManagerInfoObj);
   				   					
   				   					Thread.sleep(5000);
   				   					
	   				   				if(cnf.FnExplicitWait("XPATH", mbo.PayBill_PaymentComplete,driver)){
	   				   				repfn.FnUpdateTestStepResHTML("Verify Title - Payment Complete is displayed","Title - Payment Complete is displayed","PASS",runManagerInfoObj);
	   				   				}else{
	   					   				repfn.FnUpdateTestStepResHTML("Verify Title - Payment Complete is displayed","Title - Payment Complete is not displayed","FAIL",runManagerInfoObj);
	   					   				blnFlag=false;
	   					   			}
	   				   			if(cnf.FnExplicitWait("XPATH", mbo.PayBill_ThankyPaymentMsg,driver)){
	   				   			WebElement ThankyouMsg=driver.findElement(By.xpath(mbo.PayBill_ThankyPaymentMsg));
	   				   			String strThankyouMsg=ThankyouMsg.getText();
	   				   			System.out.println("strThankyouMsg"+strThankyouMsg);
	   				   		repfn.FnUpdateTestStepResHTML("Verify Thankyou Msg is displayed","Thankyou Msg is displayed","PASS",runManagerInfoObj);
	   				   			if(actualThankuMsg.equalsIgnoreCase(strThankyouMsg)){
	   				   			repfn.FnUpdateTestStepResHTML("Verify Text : Thank you for your payment! Your payment has been successfully completed. You should receive an automated confirmation if this transaction shortly. Click below to return to your Account Overview- RETRUN TO OVERVIEW button' is displayed","Thank you Text Msg is displayed","PASS",runManagerInfoObj);
	   				   		blnFlag=true;
	   				   			}else{
	   				   			repfn.FnUpdateTestStepResHTML("Verify Text : Thank you for your payment! Your payment has been successfully completed. You should receive an automated confirmation if this transaction shortly. Click below to return to your Account Overview- RETRUN TO OVERVIEW button' is displayed","Thank you Text Msg is not displayed","FAIL",runManagerInfoObj);
	   				   		blnFlag=false;
	   				   			}
	   				   				repfn.FnUpdateTestStepResHTML("Verify Title - Payment Complete is displayed","Title - Payment Complete is displayed","PASS",runManagerInfoObj);
	   				   				}else{
	   				   				repfn.FnUpdateTestStepResHTML("Verify Thankyou Msg is displayed","Thankyou Msg is not displayed","FAIL",runManagerInfoObj);
	   					   				blnFlag=false;
	   					   			}
   				   					
   								}
   								else{
   					   				repfn.FnUpdateTestStepResHTML("Verify CompletePaymentButton is clicked","CompletePaymentButton is clicked.","FAIL",runManagerInfoObj);
   					   				blnFlag=false;
   					   			}
   							}
   							else{
   								repfn.FnUpdateTestStepResHTML("Verify Complete Payment Button is displayed","Complete Payment Button is not displayed","FAIL",runManagerInfoObj);
									blnFlag=false;
   							}
   								   							
   						}
   						else{
   							repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is not navigated to Verify Payment page","FAIL",runManagerInfoObj);
   							blnFlag=false;
   						}
   					}
   				}
   				else{
   					repfn.FnUpdateTestStepResHTML("Verify Pay Now button is clicked","Pay Now button is not clicked.","FAIL",runManagerInfoObj);
   					blnFlag=false;
   				}
   			}
   			else{
   				repfn.FnUpdateTestStepResHTML("Verify Pay Now button is enabled","Pay Now button is not enabled","FAIL",runManagerInfoObj);
   				blnFlag=false;
   			}
   		}
   		else{
   			repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is not displayed","FAIL",runManagerInfoObj);
   			blnFlag=false;
   		}
   		
   		driver.switchTo().defaultContent();
   		
   		Thread.sleep(5000);
   		
		
	}
	
	catch (Exception e)

	{
		repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Bill informatio",
				"User is able to verify Pay Bill information due to some exception","FAIL",runManagerInfoObj);

      	 blnFlag=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
	
}


public synchronized boolean FnVerifyAndClickBillingLink(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	
	try{
		if(cnf.FnExplicitWait("XPATH", mbo.Billing_Link,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Billing link is displayed on Overview page", "Billing link is displayed on Overview page","PASS",runManagerInfoObj);
			WebElement Billing_Link = driver.findElement(By.xpath(mbo.Billing_Link));
			if(cnf.JSClick(Billing_Link,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Billing link is clicked", "Billing link is clicked","PASS",runManagerInfoObj);
				
				Thread.sleep(5000);
				
				if(cnf.FnExplicitWait("XPATH",mbo.PageVerificationOne,driver)){
					WebElement PageVerificationOne=driver.findElement(By.xpath(mbo.PageVerificationOne));
					if(PageVerificationOne.getAttribute("textContent").equalsIgnoreCase("Billing")){
						if(cnf.FnExplicitWait("XPATH",mbo.PageVerificationTwo,driver)){
							WebElement PageVerificationTwo=driver.findElement(By.xpath(mbo.PageVerificationTwo));
							if(PageVerificationTwo.getAttribute("textContent").equalsIgnoreCase("View Statements")){
								repfn.FnUpdateTestStepResHTML("Verify User is navigated to View Statements page", "User is navigated to View Statements page","PASS",runManagerInfoObj);
								blnFlag	=true;
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify User is navigated to View Statements page", "User is not navigated to View Statements page","FAIL",runManagerInfoObj);
								blnFlag	=false;
							}
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User is navigated to Billing page", "User is not navigated to Billing page","FAIL",runManagerInfoObj);
						blnFlag	=false;
					}	
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Billing link is clicked", "Billing link is not clicked","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
			
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Billing link is displayed on Overview page", "Billing link is not displayed on Overview page","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
	}
	
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify User is on View Statements page", "User is not on View Statements page due to some exception","FAIL",runManagerInfoObj);
		blnFlag	=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());

	}

	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
	
	
}

public synchronized boolean FnVerifyAndClickExportCallLog(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	
	try{
		
		Thread.sleep(10000);
		if(cnf.FnExplicitWait("XPATH",mbo.ExportCallLogButton,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Export Call log button is displayed on View Statements page", 
					"Export Call log button is displayed on View Statements page","PASS",runManagerInfoObj);
			WebElement ExportCallLogButton=driver.findElement(By.xpath(mbo.ExportCallLogButton));
			if(cnf.ElementClick1(ExportCallLogButton)){
				repfn.FnUpdateTestStepResHTML("Verify Export Call log button is clicked", "Export Call log button is clicked","PASS",runManagerInfoObj);
				blnFlag	=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Export Call log button is clicked", "Export Call log button is not clicked","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Export Call log button is displayed on View Statements page", 
					"Export Call log button is not displayed on View Statements page","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
	}
	
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify User is on Add New User page", "User is on Add New User page due to some exception","FAIL",runManagerInfoObj);
		blnFlag	=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());

	}

	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean ForwardCallsTo_On(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		
		if(cnf.FnExplicitWait("XPATH", mbo.ForwardStatusOFFToggle,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Initially Status is OFF", "Initially Status is OFF","PASS",runManagerInfoObj);
			boolean blnFlag1 = ForwardingStatus_change(driver,runManagerInfoObj);
			if(blnFlag1){
				boolean blnFlag2 = ForwardingMethod_change(driver,runManagerInfoObj);
				boolean blnFlag3 = ForwardCallsToDropdown_SelectContact(driver,runManagerInfoObj);					
				boolean blnFlag4 = ForwardCalls_Save(driver,runManagerInfoObj);
				
				if(blnFlag2 && blnFlag3 && blnFlag4){
					boolean blnFlag5 = Close_ManageLines(driver,runManagerInfoObj);
					if(blnFlag5){
						boolean blnFlag6 = FN_ForwardManager_OnOFFstatusCheck(driver,runManagerInfoObj);
						if(blnFlag6){
							blnFlag = true;
						}
						else{
							blnFlag = false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if Close link is present and clicked","Close link is not present and clicked", "FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Call Forwarding Changes are saved","Call Forwarding Changes are not saved","FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle can be changed","Call Forwarding status Toggle cannot be changed","FAIL",runManagerInfoObj);
				blnFlag = false;
			}
		}
		
		else if(cnf.FnExplicitWait("XPATH", mbo.ForwardStatusONToggle,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Initially Status is OFF", "Initially Status is OFF","PASS",runManagerInfoObj);
			boolean blnFlag1 = ForwardingStatus_change(driver,runManagerInfoObj);
			if(blnFlag1){
				boolean blnFlag2 = ForwardCalls_Save(driver,runManagerInfoObj);
				if(blnFlag2){
					boolean blnFlag3 = Close_ManageLines(driver,runManagerInfoObj);
					if(blnFlag3){
						boolean blnFlag4 = FN_ForwardManager_OnOFFstatusCheck(driver,runManagerInfoObj);
						if(blnFlag4){
							blnFlag = true;
						}
						else{
							blnFlag = false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if Close link is present and clicked","Close link is not present and clicked", "FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Call Forwarding Changes are saved","Call Forwarding Changes are not saved","FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if Call Forwarding status toggle can be changed","Call Forwarding status Toggle cannot be changed","FAIL",runManagerInfoObj);
				blnFlag = false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify User is able to change status of Forward Manage Calls under Voice Settings ", "User is not able to change status of Forward Manage Calls under Voice Settings ","FAIL",runManagerInfoObj);
			blnFlag=false;
		}

	}
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify user is  able to change status of Forward manager form on to off viceversa", "User is  not able change status of Forward manager form on to off viceversa due to some exception","FAIL",runManagerInfoObj);
		blnFlag=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;

}
public synchronized boolean FN_CancelFwdImmediate_FwdBusy(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{

		if(cnf.FnExplicitWait("XPATH", mbo.CancelBtn,driver)){
			repfn.FnUpdateTestStepResHTML("Verify the presence of cancel button","Cancel button is present","PASS",runManagerInfoObj);
			WebElement CancelBtn=driver.findElement(By.xpath(mbo.CancelBtn));
			if(cnf.JSClick(CancelBtn,driver)){
				repfn.FnUpdateTestStepResHTML("Verify the click on cancel button","Cancel button is clicked","PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.CancelPopUp,driver)){
					repfn.FnUpdateTestStepResHTML("Verify the presence of cancel pop up","Cancel pop up is present","PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH", mbo.CancelPopUp_ConfirmBtn,driver)){
						repfn.FnUpdateTestStepResHTML("Verify the presence of Confirm button in Cancel pop up","Confirm button in Cancel pop up is present","PASS",runManagerInfoObj);
						WebElement CancelPopUp_ConfirmBtn=driver.findElement(By.xpath(mbo.CancelPopUp_ConfirmBtn));
						if(cnf.JSClick(CancelPopUp_ConfirmBtn,driver)){
							repfn.FnUpdateTestStepResHTML("Verify the click on Confirm button in Cancel pop up","Confirm button in Cancel pop up is clicked","PASS",runManagerInfoObj);

							if(cnf.FnExplicitWait("XPATH", mbo.VoiceSettingsMenu,driver))
							{
								repfn.FnUpdateTestStepResHTML("Verify the changes are discarded and user is taken back to the Voice settings menu","Settings are discarded and user is taken back to the Voice settings menu","PASS",runManagerInfoObj);
								blnFlag=true;
							}
							else
							{
								repfn.FnUpdateTestStepResHTML("Verify the changes are discarded and user is taken back to the Voice settings menu","Settings are discarded and user is not taken back to the Voice settings menu","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify the click on Confirm button in Cancel pop up","Confirm button in Cancel pop up is not clicked","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify the presence of Confirm button in Cancel pop up","Confirm button in Cancel pop up is not present","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify the presence of cancel pop up","Cancel pop up is not present","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify the click on cancel button","Cancel button is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify the presence of cancel button","Cancel button is not present","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify the presence of cancel button ","Cancel button is not present and not clicked  due to some exception","FAIL",runManagerInfoObj);
		blnFlag=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}

public synchronized boolean FN_ForwardManager_OnstatusCheck(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{

		
		if(cnf.FnExplicitWait("XPATH",mbo.ForwardOnStatus,driver)){
			repfn.FnUpdateTestStepResHTML("Verify \'Forward On\' Status is displayed  ", "\'Forward On\' Status is displayed ","PASS",runManagerInfoObj);
			blnFlag=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify \'Forward On\' Status is displayed  ", "\'Forward On\' Status is not displayed ","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}
	catch (Exception e)

	{
		repfn.FnUpdateTestStepResHTML("Verify ForwardOnStatus is displayed  ", "ForwardOnStatus is not  displayed due to some exception ","FAIL",runManagerInfoObj);
		blnFlag=false;   
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());

	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean FN_ForwardManager_OFFstatusCheck(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{

		
		if(cnf.FnExplicitWait("XPATH",mbo.ForwardOffStatus,driver)){
			repfn.FnUpdateTestStepResHTML("Verify \'Forward OFF\' Status is displayed  ", "\'Forward OFF\' status is displayed ","PASS",runManagerInfoObj);
			blnFlag=true;  
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify \'Forward OFF\' Status is displayed  ", "\'Forward OFF\' status is not displayed ","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}
	
	catch (Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify ForwardOFFStatus  is displayed  ", "ForwardOFFStatus is not displayed due to some exception","FAIL",runManagerInfoObj);
		blnFlag=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());

	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}



public synchronized boolean FnVerifyExportOptions_Cancel(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	
	try{
		Thread.sleep(4000);
		if(cnf.FnExplicitWait("XPATH",mbo.ExportCallPopupTitle,driver)){
			WebElement ExportCallPopupTitle=driver.findElement(By.xpath(mbo.ExportCallPopupTitle));
			repfn.FnUpdateTestStepResHTML("Verify Title is displayed in Export pop-up", "Title is displayed in Export pop-up as: "+ExportCallPopupTitle.getText(),"PASS",runManagerInfoObj);
			blnFlag	=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Title is displayed in Export pop-up", "Title is not displayed in Export pop-up","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
		if(cnf.FnExplicitWait("XPATH",mbo.ExportCallDownloadDateInfo,driver)){
			WebElement ExportCallDownloadDateInfo=driver.findElement(By.xpath(mbo.ExportCallDownloadDateInfo));
			repfn.FnUpdateTestStepResHTML("Verify StartDate and EndDate are displayed in Export pop-up", "StartDate and EndDate are displayed in Export pop-up as: "+ExportCallDownloadDateInfo.getText(),"PASS",runManagerInfoObj);
			blnFlag	=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify StartDate and EndDate are displayed in Export pop-up", "StartDate and EndDate are not displayed in Export pop-up","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
		if(cnf.FnExplicitWait("XPATH",mbo.ExportCallFunctionInfo,driver)){
			WebElement ExportCallFunctionInfo=driver.findElement(By.xpath(mbo.ExportCallFunctionInfo));
			repfn.FnUpdateTestStepResHTML("Verify Information text is displayed in Export pop-up", "Information text is displayed in Export pop-up as: "+ExportCallFunctionInfo.getText(),"PASS",runManagerInfoObj);
			blnFlag	=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Information text is displayed in Export pop-up", "Information text is not displayed in Export pop-up","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
		if(cnf.FnExplicitWait("XPATH",mbo.ExportCallEmailHeading,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Email Heading is displayed in Export pop-up", "Email Heading is displayed in Export pop-up","PASS",runManagerInfoObj);
			blnFlag	=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Email Heading is displayed in Export pop-up", "Email Heading is not displayed in Export pop-up","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
		if(cnf.FnExplicitWait("XPATH",mbo.ExportCallEmailInputField,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Email Input field is displayed in Export pop-up", "Email Input field is displayed in Export pop-up","PASS",runManagerInfoObj);
			blnFlag	=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Email Input field is displayed in Export pop-up", "Email Input field is not displayed in Export pop-up","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
		if(cnf.FnExplicitWait("XPATH",mbo.ExportCallCancelOption,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Cancel option is displayed in Export pop-up", "Cancel option is displayed in Export pop-up","PASS",runManagerInfoObj);
			blnFlag	=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Cancel option is displayed in Export pop-up", "Cancel option is not displayed in Export pop-up","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
		if(cnf.FnExplicitWait("XPATH",mbo.ExportCallExportOption,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Export option is displayed in Export pop-up", "Export option is displayed in Export pop-up","PASS",runManagerInfoObj);
			blnFlag	=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Export option is displayed in Export pop-up", "Export option is not displayed in Export pop-up","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
		if(cnf.FnExplicitWait("XPATH",mbo.ExportCallEmailInputField,driver)){
			WebElement ExportCallEmailInputField=driver.findElement(By.xpath(mbo.ExportCallEmailInputField));
			repfn.FnUpdateTestStepResHTML("Verify Email field is pre-populated", "Email field is pre-populated with an email id: "+ExportCallEmailInputField.getAttribute("value"),"PASS",runManagerInfoObj);
			blnFlag	=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Email field is pre-populated", "Email field is not pre-populated with an email id","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
		if(cnf.FnExplicitWait("XPATH",mbo.ExportCallCancelOption,driver)){
			WebElement ExportCallCancelOption=driver.findElement(By.xpath(mbo.ExportCallCancelOption));
			if(cnf.JSClick(ExportCallCancelOption,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Cancel option is clicked", "Cancel option is clicked","PASS",runManagerInfoObj);
				blnFlag	=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Cancel option is clicked", "Cancel option is not clicked","FAIL",runManagerInfoObj);
				blnFlag	=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Cancel option is displayed in Export pop-up", "Cancel option is not displayed in Export pop-up","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
		
	}
	
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify User is on Add New User page", "User is on Add New User page due to some exception","FAIL",runManagerInfoObj);
		blnFlag	=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());

	}

	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}



public synchronized boolean FnVerifyDueDate(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	try{

		if(cnf.FnExplicitWait("XPATH", mbo.CreditPaymentDueDate_OverviewPage,driver)){
			WebElement CreditPaymentDueDate_OverviewPage=driver.findElement(By.xpath(mbo.CreditPaymentDueDate_OverviewPage));
			repfn.FnUpdateTestStepResHTML("Verify Due Date is displayed under Notifications section on Overview page", "Due Date is displayed as: "+CreditPaymentDueDate_OverviewPage.getText()+" under Notifications section on Overview page", "PASS",runManagerInfoObj);
			blnFlag=true;
		}
		else{
			if(cnf.FnExplicitWait("XPATH", mbo.CreditPaymentDueDate_NoDueDate,driver)){
				WebElement CreditPaymentDueDate_NoDueDate=driver.findElement(By.xpath(mbo.CreditPaymentDueDate_NoDueDate));
				repfn.FnUpdateTestStepResHTML("Verify Due Date is displayed under Notifications section on Overview page", "Due Date is not displayed under Notifications section on Overview page as there is no payment due. Text displayed instead is: "+CreditPaymentDueDate_NoDueDate.getText(), "PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Due Date is displayed under Notifications section on Overview page", "Due Date is not displayed under Notifications section on Overview page", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
	}

	catch(Exception e)
	{
		blnFlag=false;
		repfn.FnUpdateTestStepResHTML("Verify Due Date is displayed on Overview page", "Due Date is not displayed on Overview page due to some exception", "FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}


public synchronized boolean Fn_ManageUsersPage(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	boolean blnFlag=false;
	try {
		if(cnf.FnExplicitWait("XPATH", mbo.ManageUsersLabel,driver))
		{ 
			WebElement ManageUsers=driver.findElement((By.xpath(mbo.ManageUsersLabel)));
			if(ManageUsers.getText().equalsIgnoreCase("Manage Users"))
			{
				repfn.FnUpdateTestStepResHTML("Verify that the user is on Manage Users Page", "User is on Manage Users Page", "PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify that the user is on Manage Users Page", "User is not on Manage Users Page", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}


		}
	} catch (Exception e) {
		System.err.println("Message : " + e.getMessage());
		System.err.println("Cause : " + e.getCause());
		blnFlag=false;
	}
	return blnFlag;
}

public synchronized boolean FnCheckVoiceTab(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

	try{
		if(cnf.FnExplicitWait("XPATH",mbo.AddStepsListHeading,driver)){
			WebElement AddStepsListHeading = driver.findElement(By.xpath(mbo.AddStepsListHeading));
			if(AddStepsListHeading.getText().contains("Assign Voice Services")){
				repfn.FnUpdateTestStepResHTML("Verify User is on Voice tab", "User is on Voice tab","PASS",runManagerInfoObj);
				blnFlag	=true;
			}
			else{
				if(AddStepsListHeading.getText().contains("Confirm Add New User")){
					repfn.FnUpdateTestStepResHTML("Verify User is on Confirm tab", "User is on Confirm tab","PASS",runManagerInfoObj);
					blnFlag	=false;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify User is on Confirm tab", "User is not on Confirm tab","FAIL",runManagerInfoObj);
					blnFlag	=false;
				}
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Tab Heading is displayed", "Tab Heading is not displayed","FAIL",runManagerInfoObj);
			blnFlag	=false;
		}
	}

	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify User is on Voice/Confirm tab", "User is not on Voice/Confirm tab due to some exception","FAIL",runManagerInfoObj);
		blnFlag	=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());

	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean FNEnteringData_FN_LN_Email_phone(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	 try{


		 //Entering FirstName

		 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUser_FirstName,driver)){
			 WebElement AddNewUser_FirstName=driver.findElement(By.xpath(mbo.AddNewUser_FirstName));
			 AddNewUser_FirstName.sendKeys("Saranya"+randomInt);
			 repfn.FnUpdateTestStepResHTML("Verify FirstName is Entered ","FirstName is Entered: "+"Saranya"+randomInt,"PASS",runManagerInfoObj);
			 blnFlag=true;
		 }
		 else{
			 repfn.FnUpdateTestStepResHTML("Verify FirstName is Entered ","FirstName is not Entered","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }


		 //Entering LastName

		 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUser_LastName,driver)){
			 WebElement AddNewUser_LastName=driver.findElement(By.xpath(mbo.AddNewUser_LastName));
			 AddNewUser_LastName.sendKeys("Sankaran");
			 repfn.FnUpdateTestStepResHTML("Verify LastName is Entered ","LastName is Entered: "+"Sankaran","PASS",runManagerInfoObj);
			 blnFlag=true;
		 }
		 else{
			 repfn.FnUpdateTestStepResHTML("Verify LastName is Entered ","LastName is not Entered","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }

		 //Entering Email
		 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUser_Emailaddres,driver)){
			 WebElement AddNewUser_Emailaddres=driver.findElement(By.xpath(mbo.AddNewUser_Emailaddres));

			 AddNewUser_Emailaddres.sendKeys("Saranya@gmail.com");
			 repfn.FnUpdateTestStepResHTML("Verify Email address is Entered ","Email address is Entered: "+"Saranya@gmail.com","PASS",runManagerInfoObj);
			 blnFlag=true;
		 }
		 else{
			 repfn.FnUpdateTestStepResHTML("Verify Email address  is Entered ","Email address is not  Entered","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }

		 //Entering PhoneNumber
		 if(cnf.FnExplicitWait("XPATH", mbo.AddNewUser_PhoneNO,driver)){
			 WebElement AddNewUser_PhoneNO=driver.findElement(By.xpath(mbo.AddNewUser_PhoneNO));

			 AddNewUser_PhoneNO.sendKeys("1234567890");
			 repfn.FnUpdateTestStepResHTML("Verify Phone number is Entered ","Phone number is Entered: "+"1234567890","PASS",runManagerInfoObj);
			 blnFlag=true;
		 }
		 else{
			 repfn.FnUpdateTestStepResHTML("Verify Phone number is Entered ","Phone number is not Entered","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }
	 }

	 catch (Exception e)

	 {
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());
		 repfn.FnUpdateTestStepResHTML("Verify User is able to enter FirstName,LastName,Email address and Phonenumber ","User is  not able to enter FirstName,LastName,Email address and Phonenumber due to some exception ","FAIL",runManagerInfoObj);
		 blnFlag=false;
	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}


public synchronized boolean FN_AddNewUser(WebDriver driver,RunManagerInfo runManagerInfoObj) {

	try{
		boolean blnFlag1 = FN_addNewUserClick(driver,runManagerInfoObj);
		if(blnFlag1){
			boolean blnFlag2 = FNEnteringData_FN_LN_Email_phone(driver,runManagerInfoObj);
			if(blnFlag2){
				boolean blnFlag3 = FnNextbuttonClick(driver,runManagerInfoObj);
				if(blnFlag3){
					boolean blnFlag4 = FN_StandardPermissionclick(driver,runManagerInfoObj);
					if(blnFlag4){
						boolean blnFlag5 = FnNextbuttonClick(driver,runManagerInfoObj);
						if(blnFlag5){
							boolean tab = FnCheckVoiceTab(driver,runManagerInfoObj);
							if(tab){
								boolean blnFlag6 = fnManageVoice(driver,runManagerInfoObj);
								if(blnFlag6){
									boolean blnFlag7 = FnConfirmbuttonClick(driver,runManagerInfoObj);
									if(blnFlag7){
										blnFlag = true;
									}
									else{
										blnFlag=false;
									}
								}
								else{
									repfn.FnUpdateTestStepResHTML("Verify Voice line is added", "Voice line is not added", "FAIL",runManagerInfoObj);
									blnFlag=false;
								}
							}
							else{
								boolean blnFlag8 = FnConfirmbuttonClick(driver,runManagerInfoObj);
								if(blnFlag8){
									blnFlag = true;
								}
								else{
									blnFlag=false;
								}
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify Next button is Clicked ","Next button is not Clicked","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Standard User Radio button is clicked", "Standard User Radio button is not clicked","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Next button is Clicked ","Next button is not Clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify User is able to enter FirstName,LastName,Email address and Phonenumber ","User is  not able to enter FirstName,LastName,Email address and Phonenumber","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Add New User Link is Clicked ","Add New User Link is not Clicked","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}

	catch (Exception e) {
		repfn.FnUpdateTestStepResHTML("Verify New user is added","New user is not added due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : " + e.getMessage());
		System.err.println("Cause : " + e.getCause());
		blnFlag = false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}

 
public synchronized boolean FNManageusers_UserClick(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	boolean blnFlag = false;
	try {

		if (cnf.FnExplicitWait("XPATH", mbo.ManageUsers_RoleList,driver)) {
			repfn.FnUpdateTestStepResHTML("Verify All users are displayed on Manage User Page","All users are displayed on Manage User Page", "PASS",runManagerInfoObj);
			List<WebElement> ManageUsers_RoleList = driver.findElements(By.xpath(mbo.ManageUsers_RoleList));
			List<WebElement> Users = new ArrayList<WebElement>();
			
			for (WebElement UserRole : ManageUsers_RoleList) {
				if (UserRole.getText().contains("Standard") || UserRole.getText().contains("Billing and Transactions")) {
					Users.add(UserRole);
				}
			}
			
			if (Users.size() > 0) {
				repfn.FnUpdateTestStepResHTML(
						"Verify Users with Role as \"Standard\" or \"Billing and Transactions\" are displayed on Manage User Page",
						"Users with Role as \"Standard\" or \"Billing and Transactions\" are displayed on Manage User Page",
						"PASS",runManagerInfoObj);

				WebElement User = Users.get(0);
				if (cnf.ElementClick1(Users.get(0))){
					repfn.FnUpdateTestStepResHTML("Verify a User is selected on Manage Users page","A User is selected on Manage Users page","PASS",runManagerInfoObj);
					Thread.sleep(2000);

					if (cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)) {
						repfn.FnUpdateTestStepResHTML("Verify Details Information Screen is displayed for the selected phone line",
								"Details Information Screen is displayed for the selected phone line","PASS",runManagerInfoObj);
						Thread.sleep(3000);
						blnFlag = true;
					} else {
						repfn.FnUpdateTestStepResHTML("Verify Details Information Screen is displayed for the selected phone line",
								"Details Information Screen is not displayed for the selected phone line","FAIL",runManagerInfoObj);
						blnFlag = false;
					}
				} else {
					repfn.FnUpdateTestStepResHTML("Verify a User is selected on Manage Users page","A User is not selected on Manage Users page","FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			} else {
				repfn.FnUpdateTestStepResHTML("Verify Users with Role as \"Standard\" or \"Billing and Transactions\" are displayed on Manage User Page",
						"Users with Role as \"Standard\" or \"Billing and Transactions\" are not displayed on Manage User Page. New user needs to be added","PASS",runManagerInfoObj);
				boolean blnFlag1 = FN_AddNewUser(driver,runManagerInfoObj);
				if(blnFlag1){
					boolean blnFlag2 = FNManageusers_UserClick(driver,runManagerInfoObj);
					if(blnFlag2){
						blnFlag = true;
					}
					else{
						blnFlag = false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify New user is added","New user is not added","FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			}
		} else {
			repfn.FnUpdateTestStepResHTML("Verify All users are displayed on Manage User Page","All users are not displayed on Manage User Page","FAIL",runManagerInfoObj);
			blnFlag = false;
		}
	}

	catch (Exception e) {
		repfn.FnUpdateTestStepResHTML("Verify Users are displayed on Manage User Page","Users are not displayed on Manage User Page due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : " + e.getMessage());
		System.err.println("Cause : " + e.getCause());
		blnFlag = false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}


public synchronized boolean FN_Voice_NoNotifications(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		if(cnf.FnExplicitWait("XPATH", mbo.Voice_NoNotifications,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify if the Notifications panel under Voice is present", "Notifications panel under voice tab is present", "PASS",runManagerInfoObj);
			repfn.FnUpdateTestStepResHTML("Check if No Notifications message is displayed when there are no notifications to display", "No Notifications to Display message is displayed", "PASS",runManagerInfoObj);
			blnFlag=true;
		}

	}
	catch(Exception e)
	{
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());	
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}



public synchronized boolean FnPayBillOptionsUI(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	 try
	 {
		 if(cnf.FnExplicitWait("XPATH", mbo.deliveryOption,driver))
		 {

			 WebElement onlineBill=driver.findElement(By.xpath(mbo.onlineBill));
			 WebElement paperAndOnlineBill=driver.findElement(By.xpath(mbo.paperAndOnlineBill));
			 WebElement saveButton=driver.findElement(By.xpath(mbo.saveButtonForBillPay));
			 blnFlag=true;
			 repfn.FnUpdateTestStepResHTML("Verify if user is able to see the title \"Modify Delivery Options\"", "User is able to see the title \"Modify Delivery Options\"", "PASS",runManagerInfoObj);
			
			 if(cnf.FnExplicitWait("XPATH", mbo.goGreenText,driver))
			 {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if user is able to see the text \"Go Green-Use Paperless Billing and Start Making a Difference Today\"", "User is able to see the title \"Go Green-Use Paperless Billing and Start Making a Difference Today\"", "PASS",runManagerInfoObj);
				 
			 }
			 else
			 {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Verify if user is able to see the text \"Go Green-Use Paperless Billing and Start Making a Difference Today\"", "User is not able to see the title \"Go Green-Use Paperless Billing and Start Making a Difference Today\"", "FAIL",runManagerInfoObj);
			 }
			// WebElement onlineBillText=driver.findElement(By.xpath(mbo.onlineBillText));
			 if(cnf.isElementExist(onlineBill))
			 {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if user is able to see the radio button with text \"Online Bill: Receive a monthly email notification when your statement is ready\" ", "User is able to see the radio button with text \"Online Bill: Receive a monthly email notification when your statement is ready\" ", "PASS",runManagerInfoObj);
			 }
			 else
			 {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Verify if user is able to see the radio button with text \"Online Bill: Receive a monthly email notification when your statement is ready\" ", "User is not able to see the radio button with text \"Online Bill: Receive a monthly email notification when your statement is ready\" ", "FAIL",runManagerInfoObj);
			 }
			// WebElement paperBillText=driver.findElement(By.xpath(mbo.paperBillText));
			 if(cnf.isElementExist(paperAndOnlineBill) )
			 {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if user is able to see the radio button with text \"Paper & Online bill: Receive both a mailed monthly bill AND email notification when your statement is ready\" ", "User is able to see the radio button with text \"Paper & Online bill: Receive both a mailed monthly bill AND email notification when your statement is ready\" ", "PASS",runManagerInfoObj);
			 }
			 else
			 {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Verify if user is able to see the radio button with text \"Paper & Online bill: Receive both a mailed monthly bill AND email notification when your statement is ready\" ", "User is not able to see the radio button with text \"Paper & Online bill: Receive both a mailed monthly bill AND email notification when your statement is ready\" ", "FAIL",runManagerInfoObj);
			 }
			// WebElement cancelLink=driver.findElement(By.xpath(mbo.cancelButtonForBillPay));
			 if(cnf.FnExplicitWait("Xpath", mbo.cancelButtonForBillPay,driver) )
			 {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if user is able to see the cancel link ", "User is able to see the cancel link", "PASS",runManagerInfoObj);
			 }
			 else
			 {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if user is able to see the cancel link ", "User is not able to see the cancel link", "FAIL",runManagerInfoObj);
			 }
			 //WebElement disabledSaveButton=driver.findElement(By.xpath(mbo.disabledSavebutton));
			 if(cnf.FnExplicitWait("Xpath", mbo.disabledSavebutton,driver) )
			 {
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if disabled save button is displayed", "Disabled save button is displayed", "PASS",runManagerInfoObj);
			 }
			 else
			 {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Verify if disabled save button is displayed", "Disabled save button is not displayed", "FAIL",runManagerInfoObj);
			 }
		 }
		 else
		 {
			 blnFlag=false;
			 repfn.FnUpdateTestStepResHTML("Verify if user is able to see the title \"Modify Delivery Options\"", "User is not able to see the title \"Modify Delivery Options\"", "FAIL",runManagerInfoObj);
		 }
	 }
		 catch (Exception e)
		 {
			 repfn.FnUpdateTestStepResHTML("Verify if user is able to check the UI of the bill pay options page", "User is not able to check the UI of the bill pay options page due to some exception", "FAIL",runManagerInfoObj);
			 System.err.println("Message : "+e.getMessage());
			 System.err.println("Cause : "+e.getCause());
			 blnFlag=false;
		 }
		 m1.put("STEPSTATUS", blnFlag);
		 return blnFlag;
	}




public synchronized boolean FnVerifyBillingLink(WebDriver driver,RunManagerInfo runManagerInfoObj){
	 try{

		 Thread.sleep(5000);
		 if(!cnf.FnExplicitWait("XPATH", mbo.Billing_Link,driver)){
			 repfn.FnUpdateTestStepResHTML("Verify Billing link is not present in Home page for a Standard User", "Billing link is not present in Home page for a Standard User","PASS",runManagerInfoObj);
			 blnFlag=true;
		 }
		 else{
			 repfn.FnUpdateTestStepResHTML("Verify Billing link is not present in Home page for a Standard User", "Billing link is present in Home page for a Standard User","FAIL",runManagerInfoObj);
			 blnFlag=false;
		 }

		 driver.navigate().refresh();
	 }

	 catch(Exception e)
	 {
		 repfn.FnUpdateTestStepResHTML("Verify Billing link is not present in Home page for a Standard User", "Billing link is present in Home page for a Standard User due to some exception.","FAIL",runManagerInfoObj);
		 blnFlag=false;
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());

	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;

} 
public synchronized boolean Fn_FwdingManagerClick(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try{
		if(cnf.FnExplicitWait("XPATH",mbo.Voice_FwdingMgr,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify whether Forwarding call manager option is displayed in voice page ","Forwarding call manager option is displayed in voice page ","PASS",runManagerInfoObj);

			if(cnf.JSClick(driver.findElement(By.xpath(mbo.Voice_FwdingMgr)),driver))
			{
				repfn.FnUpdateTestStepResHTML("Verify whether Forwarding call manager option is clicked","Forwarding call manager option is clicked ","PASS",runManagerInfoObj);

				if(cnf.FnExplicitWait("XPATH",mbo.Voice_FwdingMgr_Hdr,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify whether user is in Forwarding call manager screen","User is in Forwarding call manager screen ","PASS",runManagerInfoObj);

					if(cnf.FnExplicitWait("XPATH", mbo.Voice_FwdingMgr_DataLoad,driver))
					{
						repfn.FnUpdateTestStepResHTML("Verify whether Forwarding call manager screen is loaded ","Forwarding call manager screen is loaded","PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else
					{
						repfn.FnUpdateTestStepResHTML("Verify whether Forwarding call manager screen is loaded ","Forwarding call manager screen is not loaded","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else
				{
					repfn.FnUpdateTestStepResHTML("Verify whether user is in Forwarding call manager screen","User is not in Forwarding call manager screen ","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify whether Forwarding call manager option is clicked","Forwarding call manager option is clicked ","PASS",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify whether Forwarding call manager option is displayed in voice page ","Forwarding call manager option is not displayed in voice page ","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify whether user is in Forwarding manager screen","User is in Forwarding manager screen","FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}


public synchronized boolean FnVerifyBlockOption_SavedContact(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{


	try{
		if(cnf.FnExplicitWait("XPATH",mbo.Savedcontacts,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Call logs are displayed on Call Log page", "Call logs are displayed on Call Log page", "PASS",runManagerInfoObj);
			List <WebElement> CallLogDetails=driver.findElements(By.xpath(mbo.Savedcontacts));
			List <WebElement> ContactNumbers=new ArrayList<WebElement>();

			for(WebElement Contact:CallLogDetails){
				String Contacts=Contact.getText();
				if(!(Contacts.contains("Unknown") || Contacts.contains("(")))
				{
					ContactNumbers.add(Contact);
				}
			}

			if(ContactNumbers.size() > 0){
				repfn.FnUpdateTestStepResHTML("Verify Saved Contacts are present in Call Log List", "Saved Contacts are present in Call Log List","PASS",runManagerInfoObj);

				if(cnf.JSClick(ContactNumbers.get(0),driver)){
					repfn.FnUpdateTestStepResHTML("Verify Saved Contact is clicked", "Saved Contact is clicked","PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
						repfn.FnUpdateTestStepResHTML("Verify UserDetailpopup is displayed ","UserDetailpopup is displayed","PASS",runManagerInfoObj);

						if(cnf.FnExplicitWait("XPATH",mbo.block_Check,driver)){
							repfn.FnUpdateTestStepResHTML("Verify User does not have an option to block the Saved Contact","User has an option to block the Saved Contact","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify User does not have an option to block the Saved Contact","User does not have an option to block the Saved Contact","PASS",runManagerInfoObj);
							blnFlag=true;
						}

					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify UserDetailpopup is displayed ","UserDetailpopup is not displayed","FAIL",runManagerInfoObj);
						blnFlag=false;
					}

				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Saved Contact is clicked", "Saved Contact is not clicked","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Saved Contacts are present in Call Log List", "Saved Contacts are not present in Call Log List","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Call logs are displayed on Call Log page", "Call logs are not displayed on Call Log page", "FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}

	catch (Exception e)

	{		
		repfn.FnUpdateTestStepResHTML("Verify if User is able to verify Block option for Saved Contact", "User is not able to verify Block option for Saved Contact due to some exception", "FAIL",runManagerInfoObj);
		blnFlag=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
	}

	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;

}


public synchronized boolean FN_ManageLine_FirstContactClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		if(cnf.FnExplicitWait("XPATH",mbo.ManageLine_arrow,driver )){
			List<WebElement> ManageLine_Arrow=driver.findElements(By.xpath(mbo.ManageLine_arrow));
			if(cnf.JSClick(ManageLine_Arrow.get(0),driver)){
				repfn.FnUpdateTestStepResHTML("Verify Arrow_DetailLink is displayed and Clicked ","Arrow_DetailLink is displayed and Clicked ","PASS",runManagerInfoObj);

				if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
					repfn.FnUpdateTestStepResHTML("Verify A Line Information window  is displayed "," A Line Information window  is displayed","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify  A Line Information window  is displayed "," A Line Information window  is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}else{
				repfn.FnUpdateTestStepResHTML("Verify Arrow_DetailLink Clicked or not ","Arrow_DetailLink is not Clicked","FAIL",runManagerInfoObj);
				blnFlag=false;			
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Arrow_DetailLink is displayed or not ","Arrow_DetailLink is not displayed ","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}
	catch (Exception e)

	{
		repfn.FnUpdateTestStepResHTML("Verify user is able to click the first contact in the Manage Lines","user is  not able to click the first contact in the Manage Lines due to some exceptions","FAIL",runManagerInfoObj);

		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}


public synchronized boolean fnstandardUserNotificationPanel(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	try
	{
		if(cnf.FnExplicitWait("XPATH", mbo.notificationPanel,driver))
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if notification panel is displayed for standard user", "Notification panel is displayed for standard user", "PASS",runManagerInfoObj);
		}
		else
		{
			blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if notification panel is displayed for standard user", "Notification panel is not displayed for standard user", "FAIL",runManagerInfoObj);
		}
	}
	catch(Exception e)
	{
		blnFlag=false;
		repfn.FnUpdateTestStepResHTML("Verify if notification panel is displayed for standard user", "Notification panel is not displayed for standard user due to some exception", "FAIL",runManagerInfoObj);
           System.err.println("Message : "+e.getMessage());
           System.err.println("Cause : "+e.getCause());
	}
	 m1.put("STEPSTATUS", blnFlag);
	    return blnFlag;
}

public synchronized boolean fnNotificationPanelNoMessages(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	try
	{
		if(cnf.FnExplicitWait("XPATH", mbo.notificationPanel,driver))
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if there are no messages in notification panel and check the verbiage", "No messages in notification panel with verbiage: "+driver.findElement(By.xpath(mbo.notificationMessage)).getText(), "PASS",runManagerInfoObj);
		}
		else
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if there are no messages in notification panel and check the verbiage", "Messages exists in notification panel", "FAIL",runManagerInfoObj);
		}
	}
	catch(Exception e)
	{
		blnFlag=false;
           System.err.println("Message : "+e.getMessage());
           System.err.println("Cause : "+e.getCause());
	}
	 m1.put("STEPSTATUS", blnFlag);
	    return blnFlag;
}



public synchronized boolean PayBill_CreditDebit_PayNow(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		
		//driver.switchTo().frame("iFrameResizer0");
		if(cnf.FnExplicitWait("XPATH", mbo.PayNowButton,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify if Pay Now button is present", "Pay Now button is present", "PASS",runManagerInfoObj);
			WebElement PayNow=driver.findElement(By.xpath(mbo.PayNowButton));
			if(cnf.JSClick(PayNow,driver))
			{
				Thread.sleep(2000);
				repfn.FnUpdateTestStepResHTML("Verify Click the Pay Now button", "Pay Now button is clicked", "PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentInfo_Hdr,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify if user is navigated to Verify Payment Information", "User is navigated to Verify Payment Information", "PASS",runManagerInfoObj);
					blnFlag=true;
				}

				else
				{
					repfn.FnUpdateTestStepResHTML("Verify if user is navigated to Verify Payment Information", "User is not navigated to Verify Payment Information", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}

			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify Click the Pay Now button", "Pay Now button is not clicked", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else	
		{
			repfn.FnUpdateTestStepResHTML("Verify if Pay Now button is present", "Pay Now button is not present", "FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
	
	}

	catch(Exception e)
	{
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		repfn.FnUpdateTestStepResHTML("Verify if Pay Now button is present and clicked", "Pay Now button is not present and not clicked due to some exception", "FAIL",runManagerInfoObj);
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;

}

public synchronized boolean PayBill_CreditDebit_Selectdropdown(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		Select dropdown = new Select(driver.findElement(By.id("expirationMonth")));
		dropdown.selectByValue("06");
		repfn.FnUpdateTestStepResHTML("Click on a particular month", "A particular month is selected", "PASS",runManagerInfoObj);
		blnFlag=true;
			}

	catch(Exception e)
	{
		System.err.println("Message : "+e.getMessage());
        System.err.println("Cause : "+e.getCause());	
	}
	 m1.put("STEPSTATUS", blnFlag);
     return blnFlag;

}

public synchronized boolean PayBill_CreditDebit_SelectdropdownYear(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		Select dropdown = new Select(driver.findElement(By.id("expirationYear")));
		dropdown.selectByValue("2020");
		repfn.FnUpdateTestStepResHTML("Click on a particular year", "A particular year is selected", "PASS",runManagerInfoObj);
		blnFlag=true;
			}

	catch(Exception e)
	{
		System.err.println("Message : "+e.getMessage());
        System.err.println("Cause : "+e.getCause());	
	}
	 m1.put("STEPSTATUS", blnFlag);
     return blnFlag;

}

public synchronized boolean PayBill_CreditDebit_EditPayment(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentInfo_EditPayLink,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify if Edit Payment link is present", "Edit Payment link is present", "PASS",runManagerInfoObj);
			WebElement Edit=driver.findElement(By.xpath(mbo.VerifyPaymentInfo_EditPayLink));
			if(Edit.isDisplayed())
			{
				cnf.JSClick(Edit,driver);
				Thread.sleep(1000);
				repfn.FnUpdateTestStepResHTML("Click on Edit Payment link", "Edit Payment link is clicked", "PASS",runManagerInfoObj);
				driver.switchTo().defaultContent();
				if(cnf.FnExplicitWait("XPATH", mbo.Q2Wall_EditPay_ConfirmPopup,driver))
				{
					repfn.FnUpdateTestStepResHTML("Verify if Confirmation popup is displayed", "Confirmation popup is displayed", "PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH", mbo.Q2Wall_EditPay_ConfirmClick,driver))
					{
						WebElement Confirm=driver.findElement(By.xpath(mbo.Q2Wall_EditPay_ConfirmClick));
						repfn.FnUpdateTestStepResHTML("Verify if Confirm button is present and click on it", "Confirm button is clicked", "PASS",runManagerInfoObj);
						cnf.JSClick(Confirm,driver);
						Thread.sleep(1000);
						driver.switchTo().frame("iFrameResizer0");
						
						if(cnf.FnExplicitWait("XPATH", mbo.PayBill_CreditDebit_CardNum,driver))
						{
							repfn.FnUpdateTestStepResHTML("Verify if User is taken to previous page", "User is taken to the previous page", "PASS",runManagerInfoObj);
							WebElement CardInput=driver.findElement(By.xpath(mbo.PayBill_CreditDebit_CardNum));
							if(CardInput.getAttribute("value").equals("4444444444444448"))
							{
								repfn.FnUpdateTestStepResHTML("Verify if the previously selected values are retained", "Previously selected values are retained", "PASS",runManagerInfoObj);
								blnFlag=true;
							}
							else
							{
								repfn.FnUpdateTestStepResHTML("Verify if the previously selected values are retained", "Previously selected values are not retained", "FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						
						else
						{
							repfn.FnUpdateTestStepResHTML("Verify if User is taken to previous page", "User is not taken to the previous page", "FAIL",runManagerInfoObj);
							
							blnFlag=false;
							//driver.navigate().back();
						}

					}
							else
							{
								repfn.FnUpdateTestStepResHTML("Verify if Confirm button is present and click on it", "Confirm button is not clicked", "FAIL",runManagerInfoObj);
								blnFlag=false;
							}

							
						
					}
					else
					{
						repfn.FnUpdateTestStepResHTML("Verify if Confirmation popup is displayed", "Confirmation popup is not displayed", "FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else
				{
					repfn.FnUpdateTestStepResHTML("Click on Edit Payment link", "Edit Payment link is not clickable", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				
			}
			else
			{
				repfn.FnUpdateTestStepResHTML("Verify if Edit Payment link is present", "Edit Payment link is not present", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		
			}

	catch(Exception e)
	{
		System.err.println("Message : "+e.getMessage());
        System.err.println("Cause : "+e.getCause());	
	}
	 m1.put("STEPSTATUS", blnFlag);
     return blnFlag;

}


public synchronized boolean FnClickOneTime_Credit_Debit_Option(WebDriver driver,RunManagerInfo runManagerInfoObj){
	  try{
		  
		  driver.switchTo().frame("iFrameResizer0");
		  
		  // Credit/Debit Radio button
		  if(cnf.FnExplicitWait("XPATH", mbo.PayBill_Credit_Debit,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Credit/Debit Card Radio button is displayed under Select Payment Type option",
					"Credit/Debit Card Radio button is displayed under Select Payment Type option","PASS",runManagerInfoObj);
			WebElement PayBill_Credit_Debit=driver.findElement(By.xpath(mbo.PayBill_Credit_Debit));
			
			if(cnf.isElementExistOne("XPATH", mbo.PayBill_Credit_Debit_Selection,driver)){
				WebElement PayBill_Credit_Debit_Selection=driver.findElement(By.xpath(mbo.PayBill_Credit_Debit_Selection));
				String selectionState = PayBill_Credit_Debit_Selection.getAttribute("aria-checked");

				if(selectionState.equalsIgnoreCase("true")){
					repfn.FnUpdateTestStepResHTML("Verify Credit/Debit radio button is selected by default", 
							"Credit/Debit radio button is selected by default","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
   				if(cnf.JSClick(PayBill_Credit_Debit,driver)){
   					repfn.FnUpdateTestStepResHTML("Verify Credit/Debit Radio button is clicked under Select Payment Frequency option",
           					"Credit/Debit Radio button is clicked under Select Payment Type option","PASS",runManagerInfoObj);
   					blnFlag=true;
   				}
   				else{
   					repfn.FnUpdateTestStepResHTML("Verify Credit/Debit Radio button is clicked under Select Payment Frequency option",
           					"Credit/Debit Radio button is not clicked under Select Payment Type option","FAIL",runManagerInfoObj);
   					blnFlag=false;
   				}
				}
			}
			else{
				blnFlag=false;
			}
		  }
		  else{
			repfn.FnUpdateTestStepResHTML("Verify Credit/Debit Card Radio button is displayed under Select Payment Type option",
					"Credit/Debit Card Radio button is not displayed under Select Payment Type option","FAIL",runManagerInfoObj);
			blnFlag=false;
		  }
		  
		  // One Time Payment Frequency Radio button
		  if(cnf.FnExplicitWait("XPATH", mbo.PaymentFrequency_OneTime,driver)){
			repfn.FnUpdateTestStepResHTML("Verify One Time Radio button is displayed under Select Payment Frequency option",
					"One Time Radio button is displayed under Select Payment Type option","PASS",runManagerInfoObj);
			WebElement PaymentFrequency_OneTime=driver.findElement(By.xpath(mbo.PaymentFrequency_OneTime));
			
			if(cnf.isElementExistOne("XPATH", mbo.PaymentFrequency_OneTime_Selection,driver)){
				WebElement PaymentFrequency_OneTime_Selection=driver.findElement(By.xpath(mbo.PaymentFrequency_OneTime_Selection));
				String selectionState = PaymentFrequency_OneTime_Selection.getAttribute("aria-checked");

				if(selectionState.equalsIgnoreCase("true")){
					repfn.FnUpdateTestStepResHTML("Verify One-Time radio button is selected by default", 
							"One-Time radio button is selected by default","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
   				if(cnf.JSClick(PaymentFrequency_OneTime,driver)){
   					repfn.FnUpdateTestStepResHTML("Verify One Time Radio button is clicked under Select Payment Frequency option",
           					"One Time Radio button is clicked under Select Payment Type option","PASS",runManagerInfoObj);
   					blnFlag=true;
   				}
   				else{
   					repfn.FnUpdateTestStepResHTML("Verify One Time Radio button is clicked under Select Payment Frequency option",
           					"One Time Radio button is not clicked under Select Payment Type option","FAIL",runManagerInfoObj);
   					blnFlag=false;
   				}
				}
			}
			else{
				blnFlag=false;
			}
		  }
		  else{
			repfn.FnUpdateTestStepResHTML("Verify One Time Radio button is displayed under Select Payment Frequency option",
					"One Time Radio button is not displayed under Select Payment Type option","FAIL",runManagerInfoObj);
			blnFlag=false;
		  }
		  
		driver.switchTo().defaultContent();
		  
		  
	  }
	  
	  catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is able to verify and click One Time Credit_Debit Card radio button",
					"User is able to verify and click One Time Credit_Debit Card radio button due to some exception","FAIL",runManagerInfoObj);

	      	 blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	  
  }
 



public synchronized boolean Q2_UserRecovery_CancelClick(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
	
		if(cnf.FnExplicitWait("XPATH", mbo.forgotPwd_Cancel,driver))
		{
			WebElement Recovery=driver.findElement(By.xpath(mbo.forgotPwd_Cancel));
			System.out.println("Recovery Link is displayed");
			repfn.FnUpdateTestStepResHTML("Verify if Cancel button is present", "Cancel button is present", "PASS",runManagerInfoObj);
			cnf.JSClick(Recovery,driver);
			//System.out.println("Recovery Link is clicked");
			repfn.FnUpdateTestStepResHTML("Click the Cancel button", "Cancel button is clicked", "PASS",runManagerInfoObj);
			if(cnf.isAlertPresent())
			{
				//driver.switchTo().alert();
				String ErrMsg=driver.switchTo().alert().getText();
				System.out.println(ErrMsg);
				//repfn.FnUpdateTestStepResHTML("verify .... ",".......","PASS/WARNING");// update the reporting function based on your requirement
				driver.switchTo().alert().accept();
				driver.switchTo().defaultContent();
				String url = driver.getCurrentUrl();
				if(url.contains("login.html"))
				{
					repfn.FnUpdateTestStepResHTML("Verify User is on Sign In page", "User is on Sign In page", "PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify User is on Sign In page", "User is not on Sign In page", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				System.out.println("No alert present");
			}
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify if Cancel button is present", "Cancel button is not present", "FAIL",runManagerInfoObj);
			blnFlag=false;
		}

	}
	catch (Exception e)

	{
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}



public synchronized boolean ForgotPassword_Step1_CancelTwice(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	try
	{
		String securityAnswer=null;
		if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.forgotPasswordDevWG,driver))
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if user has navigated to login page", "User has navigated to login page", "PASS",runManagerInfoObj);
			WebElement forgotPasswordDevWG=driver.findElement(By.xpath(mbo.forgotPasswordDevWG));
			if(cnf.JSClick(forgotPasswordDevWG,driver))
			{
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify if user has clicked forgot password link", "User has clicked forgot password link", "PASS",runManagerInfoObj);
				if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.resetPasswordRB,driver))
				{
					blnFlag=true;
					repfn.FnUpdateTestStepResHTML("Verify if user has navigated to recovery page", "User has navigated to recovery page", "PASS",runManagerInfoObj);
					WebElement resetPasswordRB=driver.findElement(By.id(mbo.resetPasswordRB));
					if(cnf.JSClick(resetPasswordRB,driver))
					{
						blnFlag=true;
						repfn.FnUpdateTestStepResHTML("Verify if user has selected reset password button", "User has selected reset password button", "PASS",runManagerInfoObj);
						if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.accountNumberIF,driver))
						{
							driver.findElement(By.id(mbo.accountNumberIF)).sendKeys("8352300501498886",Keys.TAB);
							blnFlag=true;
							repfn.FnUpdateTestStepResHTML("Verify if user has entered the account number", "User has entered the account number: "+"8352300501498886", "PASS",runManagerInfoObj);
							if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.securityFieldIF,driver))
							{
								driver.findElement(By.id(mbo.securityFieldIF)).sendKeys("5478",Keys.TAB);
								blnFlag=true;
								repfn.FnUpdateTestStepResHTML("Verify if user has entered the security code", "User has entered the security code", "PASS",runManagerInfoObj);
								
								if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.cancelButtonRP,driver))
								{
									blnFlag=true;
									repfn.FnUpdateTestStepResHTML("Verify if cancel button is present", "Cancel button is present", "PASS",runManagerInfoObj);
									WebElement cancelbutton=driver.findElement(By.xpath(mbo.cancelButtonRP));
									if(cnf.JSClick(cancelbutton,driver))
									{
										Thread.sleep(5000);
										blnFlag=true;
										repfn.FnUpdateTestStepResHTML("Verify if cancel button is clicked", "Cancel button is clicked", "PASS",runManagerInfoObj);
										Alert alert=driver.switchTo().alert();
										alert.dismiss();
										repfn.FnUpdateTestStepResHTML("Verify if Security Code is retained after clicking Cancel in the Confirmation popup", "Security Code is retained after clicking Cancel in the Confirmation popup", "PASS",runManagerInfoObj);
											if(cnf.JSClick(cancelbutton,driver))
											{
												Thread.sleep(5000);
												blnFlag=true;
												repfn.FnUpdateTestStepResHTML("Verify if cancel button is clicked again", "Cancel button is clicked again", "PASS",runManagerInfoObj);
												Alert alert1=driver.switchTo().alert();
												alert1.accept();
												if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.forgotPasswordDevWG,driver))
												{
													blnFlag=true;
													repfn.FnUpdateTestStepResHTML("Verify if user has navigated back to the screen from where Forgot password screen is accessed", "User has navigated back to the screen from where Forgot password screen is accessed", "PASS",runManagerInfoObj);
												}
												else
												{
													blnFlag=false;
													repfn.FnUpdateTestStepResHTML("Verify if user has navigated back to the screen from where Forgot password screen is accessed", "User has not navigated back to the screen from where Forgot password screen is accessed", "FAIL",runManagerInfoObj);
												}
											}
											else
											{
												blnFlag=false;
												repfn.FnUpdateTestStepResHTML("Verify if cancel button is clicked again", "Cancel button is not clicked again", "FAIL",runManagerInfoObj);
											}
										}
									else
									{
										blnFlag=false;
										repfn.FnUpdateTestStepResHTML("Verify if cancel button is clicked", "Cancel button is not clicked", "FAIL",runManagerInfoObj);
									}
								}
								else
								{
									blnFlag=false;
									repfn.FnUpdateTestStepResHTML("Verify if cancel button is present", "Cancel button is not present", "FAIL",runManagerInfoObj);
								}
							}
							
							else
							{
								blnFlag=false;
								repfn.FnUpdateTestStepResHTML("Verify if user has entered the security code", "User has not entered the security code", "FAIL",runManagerInfoObj);
							}
						}
						else
						{
							blnFlag=false;
							repfn.FnUpdateTestStepResHTML("Verify if user has entered the account number", "User has not entered the account number", "FAIL",runManagerInfoObj);
						}
					}
					else
					{
						blnFlag=false;
						repfn.FnUpdateTestStepResHTML("Verify if user has selected reset password button", "User has not selected reset password button", "FAIL",runManagerInfoObj);
					}
				}
				else
				{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Verify if user has navigated to recovery page", "User has not navigated to recovery page", "FAIL",runManagerInfoObj);
				}
			}
			else
			{
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify if user has clicked forgot password link", "User has not clicked forgot password link", "FAIL",runManagerInfoObj);
			}
			
		}
		else
		{
			blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if user has navigated to login page", "User has not navigated to login page", "FAIL",runManagerInfoObj);
		}
	}
	 catch(Exception e)
	 {
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());	
	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}


public synchronized boolean Q2Wall_Fn_Editbuttonclick(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		driver.switchTo().frame("iFrameResizer0");
		if(cnf.isElementExist(By.xpath(mbo.VerifyPaymentInfo_EditPayLink),driver))
      {
		    repfn.FnUpdateTestStepResHTML("Verify the display of Edit Payment details link in Verify Payment Info screen ","Edit Payment details link is displayed in Verify Payment Info screen","PASS",runManagerInfoObj);
         WebElement editbtn=driver.findElement(By.xpath(mbo.VerifyPaymentInfo_EditPayLink));
         if(cnf.ElementClick(editbtn,driver)){
 		    repfn.FnUpdateTestStepResHTML("Verify Edit Payment details link in Verify Payment Info screen is clicked","Edit Payment details link in Verify Payment Info screen is clicked","PASS",runManagerInfoObj);

      	   blnFlag=true;  
         }
         else{
      	   repfn.FnUpdateTestStepResHTML("Verify Edit Payment details link in Verify Payment Info screen is clicked","Edit Payment details link in Verify Payment Info screen is not  clicked","FAIL",runManagerInfoObj);

      	   blnFlag=false;  
         }
		   
      }
      else
      {
		    repfn.FnUpdateTestStepResHTML("Verify the display of Edit Payment details link in Verify Payment Info screen ","Edit Payment details link is not displayed in Verify Payment Info screen","FAIL",runManagerInfoObj);
          blnFlag=false;
      }
		driver.switchTo().defaultContent();
	}
	catch(Exception e)
	{
		System.err.println("Message : "+e.getMessage());
	  System.err.println("Cause : "+e.getCause());	
	
	}
	 m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}

public synchronized boolean Q2_FN_PrevoiusPageValidation(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		
		driver.switchTo().frame("iFrameResizer0");
		
		//Routing number
		if(cnf.isElementExist(By.xpath(mbo.PaymentInfo_RoutingNum),driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify the display of routing number in Payment Info section","Routing number text box is displayed in Payment Info section","PASS",runManagerInfoObj);
          WebElement RoutingNum=driver.findElement(By.xpath(mbo.PaymentInfo_RoutingNum));
          String  routingnum=RoutingNum.getAttribute("value");
			
			
			if(routingnum.equals(m1.get("RoutingNumber").toString())){
				
				
				repfn.FnUpdateTestStepResHTML("Verify the Routing number is prepopulated with the previously selected value","The Routing number is prepopulated with the previously selected value","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify the Routing number is prepopulated with the previously selected value","The Routing number is  not prepopulated with the previously selected value","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify the display of routing number in Payment Info section","Routing number text box is not displayed in Payment Info section","FAIL",runManagerInfoObj);
      blnFlag=false;
		}	
		
		
		if(cnf.isElementExist(By.xpath(mbo.PaymentInfo_AccNum),driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify the display of account number in Payment Info section","Account number text box is displayed in Payment Info section","PASS",runManagerInfoObj);
          WebElement AccNum=driver.findElement(By.xpath(mbo.PaymentInfo_AccNum));
          String  accNum=AccNum.getAttribute("value");
			
			
			if(accNum.equals((m1.get("BankAccountNumber").toString()))){
				
				
				repfn.FnUpdateTestStepResHTML("Verify the Account Number is prepopulated with the previously selected value","The Account Number is prepopulated with the previously selected value","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify the Account Number is prepopulated with the previously selected value","The Account Number is  not prepopulated with the previously selected value","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify the display of account number in Payment Info section","Account number text box is not  displayed in Payment Info section","PASS",runManagerInfoObj);
      blnFlag=false;
		}	
		
		//Payment Amount
		
		
		if(cnf.isElementExist(By.xpath(mbo.PaymentInfo_Amt),driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify the display of account in Payment Info section","Amount text box is displayed in Payment Info section","PASS",runManagerInfoObj);
          WebElement  Amount=driver.findElement(By.xpath(mbo.PaymentInfo_Amt));
          String  amount=Amount.getAttribute("value");
			
			
			if(amount.equals((m1.get("Amount").toString()))){
				
				
				repfn.FnUpdateTestStepResHTML("Verify the Payment Amount is prepopulated with the previously selected value","The Payment Amount is prepopulated with the previously selected value","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify the Payment Amount is prepopulated with the previously selected value","The Payment Amount is  not prepopulatedwith the previously selected value","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify the display of account in Payment Info section","Amount text box is not displayed in Payment Info section","FAIL",runManagerInfoObj);
      blnFlag=false;
		}
		
		
		//Date
		
		if(cnf.isElementExist(By.xpath(mbo.PaymentInfo_Date),driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify the display of payment date in Payment Info section","Payment date text box is displayed in Payment Info section","PASS",runManagerInfoObj);
			// Create object of SimpleDateFormat class and decide the format
		    DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
		   WebElement Date=driver.findElement(By.xpath(mbo.PaymentInfo_Date));
		   
		   String date=Date.getAttribute("value");
		   System.out.println("Value"+date);
		   //get current date time with Date()
		    Date date1 = new Date();
		    
		    // Now format the date
		    String date2= dateFormat.format(date1);
		    
		    // Print the Date
		    System.out.println("Current Date"+date2);
		  //Chrome
		
		  
			
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify the display of payment date in Payment Info section","Payment date text box is not displayed in Payment Info section","FAIL",runManagerInfoObj);
      blnFlag=false;
		}
	driver.switchTo().defaultContent();
	}
	catch(Exception e)
	{
		System.err.println("Message : "+e.getMessage());
	  System.err.println("Cause : "+e.getCause());	
	  repfn.FnUpdateTestStepResHTML("Click on the Edit Payment Details link.","User is not taken back to the Pay Bill screen with the previously selected/entered values pre-populated in the fields for any futher modifications. due to some exception","FAIL",runManagerInfoObj);

	   blnFlag=false;
	
	}
	 m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}




public synchronized boolean Q2Wall_CancelbuttonClick1(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		
		driver.switchTo().frame("iFrameResizer0");
		if(cnf.FnExplicitlessWait("Xpath",mbo.Q2wall_Cancelbutton,driver)){
 			WebElement Q2wall_Cancelbutton=driver.findElement(By.xpath(mbo.Q2wall_Cancelbutton));
 			cnf.ElementClick(Q2wall_Cancelbutton,driver);
 			Thread.sleep(3000);
 			if(cnf.isAlertPresent()){
				//driver.switchTo().alert();
				String ErrMsg=driver.switchTo().alert().getText();
				System.out.println(ErrMsg);
				//repfn.FnUpdateTestStepResHTML("verify .... ",".......","PASS/WARNING");// update the reporting function based on your requirement
				driver.switchTo().alert().accept();
				driver.switchTo().defaultContent();
				Thread.sleep(5000);
				
				if(cnf.FnExplicitWait("Xpath",mbo.Q2Wall_AccountPastDueLabel,driver)){
					repfn.FnUpdateTestStepResHTML("Verify User is return back to notification page ","User is return back to notification page","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify User is return back to notification page ","User is  not return back to notification page","FAIL",runManagerInfoObj);
					blnFlag=false;
				}


			}else{
				//repfn.FnUpdateTestStepResHTML("verify .... ",".......","PASS/WARNING");// update the reporting function based on your requirement
				System.out.println("No alert present");                                              
			}
			blnFlag=true;
 		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Cancel button is displayed and clicked","Cancel button is  not displayed and not  clicked","FAIL",runManagerInfoObj);
			 blnFlag=false;
		}
 		driver.switchTo().defaultContent();
	}
	catch (Exception e)

		{
		repfn.FnUpdateTestStepResHTML("Verify Cancel button is displayed and clicked","Cancel button is not  displayed and not clicked due to some exception","FAIL",runManagerInfoObj);

	      	 blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
}



public synchronized boolean Verify_PayBillButton_Disabled(WebDriver driver,RunManagerInfo runManagerInfoObj){
     	
     	try{
     		
     		driver.switchTo().frame("iFrameResizer0");
     		Thread.sleep(2000);
     		if(cnf.FnExplicitWait("XPATH", mbo.PayNowButton,driver)){
     			((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.PayNowButton)));   
     			repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is displayed","PASS",runManagerInfoObj);
     			WebElement PayNowButton=driver.findElement(By.xpath(mbo.PayNowButton));
     			//cnf.ScrollToView(PayNowButton);
     			if(PayNowButton.isEnabled()){
     				repfn.FnUpdateTestStepResHTML("Verify Pay Now button is not enabled","Pay Now button is enabled.","FAIL",runManagerInfoObj);
     				
     				blnFlag=false;
     			}
     			else{
     				repfn.FnUpdateTestStepResHTML("Verify Pay Now button is not enabled","Pay Now button is not enabled","PASS",runManagerInfoObj);
     				blnFlag=true;
     			}
     		}
     		else{
     			repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is not displayed","FAIL",runManagerInfoObj);
     			blnFlag=false;
     		}
     		
     		
     		driver.switchTo().defaultContent();
     		
    			
     	
     		
     	}
     	
     	catch (Exception e)

   		{
   			

   	      	 blnFlag=false;
   			System.err.println("Message : "+e.getMessage());
   			System.err.println("Cause : "+e.getCause());
   			
   		}
   		m1.put("STEPSTATUS", blnFlag);
   		return blnFlag;
     }

//To Logout of Q2 Wall Of Garden//




public synchronized boolean FnVerifySignInLinkAndClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

	try{

		if(cnf.FnExplicitWait("XPATH", mbo.Q2Wall_SignInLink,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Sign In link is displayed", "Sign In link is displayed", "PASS",runManagerInfoObj);
			WebElement Q2Wall_SignInLink=driver.findElement(By.xpath(mbo.Q2Wall_SignInLink));
			if(cnf.JSClick(Q2Wall_SignInLink,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Sign In link is clicked", "Sign In link is clicked", "PASS",runManagerInfoObj);

				Thread.sleep(5000);
				String url = driver.getCurrentUrl();
				if(url.contains("login"))
				{
					repfn.FnUpdateTestStepResHTML("Verify User is on Sign In page", "User is on Sign In page", "PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify User is on Sign In page", "User is not on Sign In page", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Sign In link is clicked", "Sign In link is not clicked", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Sign In link is displayed", "Sign In link is not displayed", "FAIL",runManagerInfoObj);
			blnFlag=false;
		}

	}

	catch(Exception e)
	{
		blnFlag=false;
		repfn.FnUpdateTestStepResHTML("Verify User is on Sign In page of Wall of Garden", "User is not on Sign In page of Wall of Garden due to some exception", "FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}




//Jhansi Dec 15,2015
//Fwd call in voice settings menu is ON/OFF
public synchronized boolean FwdCall_On_Off(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
	   if(cnf.FnExplicitWait("XPATH", mbo.FwdAllCalls,driver))
	{
			WebElement fwdCalls=driver.findElement(By.xpath(mbo.FwdAllCalls));
		   repfn.FnUpdateTestStepResHTML("Verify the presence of Forward All Calls option in voice settings menu", "Forward All Calls option is present in voice settings menu", "PASS",runManagerInfoObj);
		if(cnf.isElementExist(By.xpath(mbo.FwdCall_State),driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify the presence of Forward AllCalls toggle button", "Forward All Calls toggle button is present", "PASS",runManagerInfoObj);
	      WebElement FwdAllCallsOnOff=driver.findElement(By.xpath(mbo.FwdCall_State));
	      System.out.println("FwdAllCallsOnOff"+" "+FwdAllCallsOnOff.getAttribute("textContent").toString());
			if(FwdAllCallsOnOff.getAttribute("textContent").toString().contains("On"))
			{
				repfn.FnUpdateTestStepResHTML("Verify the state of Forward All Calls", "Forward All Calls is ON", "PASS",runManagerInfoObj);
				
		          if(cnf.JSClick(fwdCalls,driver))
		          {
		        		repfn.FnUpdateTestStepResHTML("Verify the Forward All Calls toggle button is clicked", "Forward All Calls toggle button is clicked", "PASS",runManagerInfoObj);
	    				if(cnf.FnExplicitWait("XPATH", mbo.FwdAllCallsMenu,driver))
	    				{
	    					repfn.FnUpdateTestStepResHTML("Verify the forward all calls menu is displayed ", "Forward All calls menu is displayed","PASS",runManagerInfoObj);
	    				
	    					if(cnf.isElementExist(By.xpath(mbo.FwdAllCallsMenu_Close),driver))
	    					{
	    						repfn.FnUpdateTestStepResHTML("Verify the presence of close button in forward all calls menu", "Close button in forward all calls menu is present","PASS",runManagerInfoObj);
	    						blnFlag=true;
	    			        	}
	    						else
	    						{
	    							repfn.FnUpdateTestStepResHTML("Verify the presence of close button in forward all calls menu", "Close button in forward all calls menu is not present","FAIL",runManagerInfoObj);
	    						blnFlag=false;
	    						}
	    					if(cnf.isElementExist(By.xpath(mbo.FwdAllCallsMenu_Save),driver))
	    					{
	    						repfn.FnUpdateTestStepResHTML("Verify the presence of save button in forward all calls menu", "Save button in forward all calls menu is present","PASS",runManagerInfoObj);
	    						blnFlag=true;
	    			        	}
	    					else
	    					{
	    						repfn.FnUpdateTestStepResHTML("Verify the presence of save button in forward all calls menu", "Save button in forward all calls menu is not present","FAIL",runManagerInfoObj);
	    						blnFlag=false;
	    					}
	    					if(cnf.isElementExist(By.xpath(mbo.FwdAllCallsMenu_CallFwding),driver))
	    					{
	    						repfn.FnUpdateTestStepResHTML("Verify the presence of Call forwarding section/txt in forward all calls menu", "Call forwarding section/txt in forward all calls menu is present","PASS",runManagerInfoObj);
	    						blnFlag=true;
	    			        }
	    					else
	    					{
	    						repfn.FnUpdateTestStepResHTML("Verify the presence of Call forwarding section/txt in forward all calls menu", "Call forwarding section/txt in forward all calls menu is not present","FAIL",runManagerInfoObj);
	    					blnFlag=false;
	    		        	}
	    					if(cnf.isElementExist(By.xpath(mbo.FwdAllCallsMenu_CallFwding_ToggleBtn),driver))
	    					{
	    						repfn.FnUpdateTestStepResHTML("Verify the presence of Call forwarding toggle button in forward all calls menu", "Call forwarding toggle button in forward all calls menu is present","PASS",runManagerInfoObj);
	    					WebElement ToggleBtn=driver.findElement(By.xpath(mbo.FwdAllCallsMenu_CallFwding_ToggleBtn));
	    						if(ToggleBtn.getAttribute("aria-checked").equalsIgnoreCase("true"))
	    						{
	        						repfn.FnUpdateTestStepResHTML("Verify the Call forwarding toggle button is ON in forward all calls menu", "Call forwarding toggle button  is ON in forward all calls menu","PASS",runManagerInfoObj);
	                                if(cnf.JSClick(ToggleBtn,driver))
	                                {
		        						repfn.FnUpdateTestStepResHTML("Verify the Call forwarding toggle button is clicked", "Call forwarding toggle button is clicked","PASS",runManagerInfoObj);
                                      if(ToggleBtn.getAttribute("aria-checked").equalsIgnoreCase("false"))
                                      {
  		        						repfn.FnUpdateTestStepResHTML("Verify the Call forwarding toggle button is turned OFF", "Call forwarding toggle button is turned OFF","PASS",runManagerInfoObj);
                                         WebElement SaveBtn=driver.findElement(By.xpath(mbo.FwdAllCallsMenu_Save));
  		        						if(cnf.JSClick(SaveBtn,driver))
  		        						{
      		        						repfn.FnUpdateTestStepResHTML("Verify the save button is clicked", "Save button is clicked to save the changes","PASS",runManagerInfoObj);
	                                            WebElement CloseBtn=driver.findElement(By.xpath(mbo.FwdAllCallsMenu_Close));
	        		        					Thread.sleep(1000);	
	                                            if(cnf.JSClick(CloseBtn,driver))
	        		        						{
	            		        						repfn.FnUpdateTestStepResHTML("Verify the close button is clicked", "Close button is clicked to close the menu","PASS",runManagerInfoObj);
	            		        						if(!cnf.FnExplicitWait("XPATH", mbo.FwdAllCallsMenu,driver))
	    	                                            {
	    	        		        						repfn.FnUpdateTestStepResHTML("Verify the changes are saved and forward all calls menu is disappeared", "Changes are saved and forward all calls menu is disappeared","PASS",runManagerInfoObj);
	    	                                                if(cnf.FnExplicitWait("XPATH", mbo.VoiceSettingMenu,driver))
	    	                                                {
	    	                                                	repfn.FnUpdateTestStepResHTML("Verify the display of voice settings menu after forward all calls menu is closed", "Voice settings menu is displayed after forward all calls menu is closed", "PASS",runManagerInfoObj);
	    	                                                    if(FwdAllCallsOnOff.getAttribute("textContent").toString().contains("Off"))
	    	                                                    {
		    	                                                	repfn.FnUpdateTestStepResHTML("Verify the Forward all calls option is ON/OFF in voice settings menu", "Forward all calls option is OFF in voice settings menu", "PASS",runManagerInfoObj);
                                                                  blnFlag=true;
	    	                                                    }
	    	                                                    else
	    	                                                    {
	    	                                                    	repfn.FnUpdateTestStepResHTML("Verify the Forward all calls option is ON/OFF in voice settings menu", "Forward all calls option is ON in voice settings menu", "FAIL",runManagerInfoObj);
                                                                  blnFlag=false;
	    	                                                    }
	    	                                                }
	    	                                                else
	    	                                                {
	    	                                                	repfn.FnUpdateTestStepResHTML("Verify the display of voice settings menu after forward all calls menu is closed", "Voice settings menu is not displayed after forward all calls menu is closed", "FAIL",runManagerInfoObj);
                                                               blnFlag=false;
	    	                                                }
	    	                                            }
	    	                                            else
	    	                                            {
	    	        		        						repfn.FnUpdateTestStepResHTML("Verify the changes are saved and forward all calls menu is disappeared", "Changes are not saved and forward all calls menu still exists","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	    	                                            }
	        		        						}
	        		        						else
	        		        						{
	            		        						repfn.FnUpdateTestStepResHTML("Verify the close button is clicked", "Close button is not clicked","FAIL",runManagerInfoObj);
                                                      blnFlag=false;
	        		        						}
	                                           
  		        						}
  		        						else
  		        						{
      		        						repfn.FnUpdateTestStepResHTML("Verify the save button is clicked", "Save button is not clicked","FAIL",runManagerInfoObj);
                                              blnFlag=false;
  		        						}
                                      }
                                      else
                                      {
  		        						repfn.FnUpdateTestStepResHTML("Verify the Call forwarding toggle button remains ON", "Call forwarding toggle button remains ON","FAIL",runManagerInfoObj);
                                          blnFlag=false;
                                      }
	                                }
	                                else
	                                {
		        						repfn.FnUpdateTestStepResHTML("Verify the Call forwarding toggle button is clicked", "Call forwarding toggle button is not clicked","FAIL",runManagerInfoObj);
                                      blnFlag=false;
	                                }
	                                
	    						}
	    						else
	    						{
	        						repfn.FnUpdateTestStepResHTML("Verify the Call forwarding toggle button is OFF in forward all calls menu", "Call forwarding toggle button  is OFF in forward all calls menu","FAIL",runManagerInfoObj);
	                                blnFlag=false;
	    						}
	    			        	}
	    					else
	    					{
	    						repfn.FnUpdateTestStepResHTML("Verify the presence of Call forwarding toggle button in forward all calls menu", "Call forwarding toggle button in forward all calls menu is not present","FAIL",runManagerInfoObj);
	    						blnFlag=false;
	    					}
	    				}
	    				
	    				else
	    				{
	    					repfn.FnUpdateTestStepResHTML("Verify the forward all calls menu is displayed ", "Forward All calls menu is not displayed","FAIL",runManagerInfoObj);
	    				blnFlag=false;
	    				}
	                 
		          }
		          else
		          {
		        		repfn.FnUpdateTestStepResHTML("Verify the Forward All Calls toggle button is clicked", "Forward All Calls toggle button is not clicked", "FAIL",runManagerInfoObj);
                      blnFlag=false;
		          }
			}
			else if(FwdAllCallsOnOff.getAttribute("textContent").toString().contains("Off"))
			{
				repfn.FnUpdateTestStepResHTML("Verify the state of Forward All Calls", "Forward All Calls is OFF", "PASS",runManagerInfoObj);
              if(cnf.JSClick(fwdCalls,driver))
              {
  				repfn.FnUpdateTestStepResHTML("Verify the Forward All Calls toggle button is clicked", "Forward All Calls toggle button is clicked", "PASS",runManagerInfoObj);
  				if(cnf.FnExplicitWait("XPATH", mbo.FwdAllCallsMenu,driver))
  				{
  					repfn.FnUpdateTestStepResHTML("Verify the forward all calls menu is displayed ", "Forward All calls menu is displayed","PASS",runManagerInfoObj);
  				
  					if(cnf.isElementExist(By.xpath(mbo.FwdAllCallsMenu_Close),driver))
  					{
  						repfn.FnUpdateTestStepResHTML("Verify the presence of close button in forward all calls menu", "Close button in forward all calls menu is present","PASS",runManagerInfoObj);
  						blnFlag=true;
  			        	}
  						else
  						{
  							repfn.FnUpdateTestStepResHTML("Verify the presence of close button in forward all calls menu", "Close button in forward all calls menu is not present","FAIL",runManagerInfoObj);
  						blnFlag=false;
  						}
  					if(cnf.isElementExist(By.xpath(mbo.FwdAllCallsMenu_Save),driver))
  					{
  						repfn.FnUpdateTestStepResHTML("Verify the presence of save button in forward all calls menu", "Save button in forward all calls menu is present","PASS",runManagerInfoObj);
  						blnFlag=true;
  			        	}
  					else
  					{
  						repfn.FnUpdateTestStepResHTML("Verify the presence of save button in forward all calls menu", "Save button in forward all calls menu is not present","FAIL",runManagerInfoObj);
  						blnFlag=false;
  					}
  					if(cnf.isElementExist(By.xpath(mbo.FwdAllCallsMenu_CallFwding),driver))
  					{
  						repfn.FnUpdateTestStepResHTML("Verify the presence of Call forwarding section/txt in forward all calls menu", "Call forwarding section/txt in forward all calls menu is present","PASS",runManagerInfoObj);
  						blnFlag=true;
  			        }
  					else
  					{
  						repfn.FnUpdateTestStepResHTML("Verify the presence of Call forwarding section/txt in forward all calls menu", "Call forwarding section/txt in forward all calls menu is not present","FAIL",runManagerInfoObj);
  					blnFlag=false;
  		        	}
  					if(cnf.isElementExist(By.xpath(mbo.FwdAllCallsMenu_CallFwding_ToggleBtn),driver))
  					{
  						repfn.FnUpdateTestStepResHTML("Verify the presence of Call forwarding toggle button in forward all calls menu", "Call forwarding toggle button in forward all calls menu is present","PASS",runManagerInfoObj);
  					WebElement ToggleBtn=driver.findElement(By.xpath(mbo.FwdAllCallsMenu_CallFwding_ToggleBtn));
  						if(ToggleBtn.getAttribute("aria-checked").equalsIgnoreCase("false"))
  						{
      						repfn.FnUpdateTestStepResHTML("Verify the Call forwarding toggle button is OFF in forward all calls menu", "Call forwarding toggle button  is OFF in forward all calls menu","PASS",runManagerInfoObj);
                              WebElement CloseBtn=driver.findElement(By.xpath(mbo.FwdAllCallsMenu_Close));
      						if(cnf.JSClick(CloseBtn,driver))
      						{
	        						repfn.FnUpdateTestStepResHTML("Verify the close button is clicked", "Close button is clicked to close the menu","PASS",runManagerInfoObj);
	        						if(!cnf.FnExplicitWait("XPATH", mbo.FwdAllCallsMenu,driver))
                                  {
		        						repfn.FnUpdateTestStepResHTML("Verify the changes are saved and forward all calls menu is disappeared", "Changes are saved and forward all calls menu is disappeared","PASS",runManagerInfoObj);
                                      if(cnf.FnExplicitWait("XPATH", mbo.VoiceSettingMenu,driver))
                                      {
                                      	repfn.FnUpdateTestStepResHTML("Verify the display of voice settings menu after forward all calls menu is closed", "Voice settings menu is displayed after forward all calls menu is closed", "PASS",runManagerInfoObj);
                                         blnFlag=true;
                                      }
                                      else
                                      {
                                      	repfn.FnUpdateTestStepResHTML("Verify the display of voice settings menu after forward all calls menu is closed", "Voice settings menu is not displayed after forward all calls menu is closed", "FAIL",runManagerInfoObj);
                                           blnFlag=false;
                                      }
                                  }
                                  else
                                  {
		        						repfn.FnUpdateTestStepResHTML("Verify the changes are saved and forward all calls menu is disappeared", "Changes are not saved and forward all calls menu still exists","FAIL",runManagerInfoObj);
                                      blnFlag=false;
                                  }
      						}
      						else
      						{
	        						repfn.FnUpdateTestStepResHTML("Verify the close button is clicked", "Close button is not clicked","FAIL",runManagerInfoObj);
                                  blnFlag=false;
      						}
                         
  						}
  						else
  						{
      						repfn.FnUpdateTestStepResHTML("Verify the Call forwarding toggle button is ON in forward all calls menu", "Call forwarding toggle button  is ON in forward all calls menu","FAIL",runManagerInfoObj);
                              blnFlag=false;
  						}
  			        	}
  					else
  					{
  						repfn.FnUpdateTestStepResHTML("Verify the presence of Call forwarding toggle button in forward all calls menu", "Call forwarding toggle button in forward all calls menu is not present","FAIL",runManagerInfoObj);
  						blnFlag=false;
  					}
  				}
  				
  				else
  				{
  					repfn.FnUpdateTestStepResHTML("Verify the forward all calls menu is displayed ", "Forward All calls menu is not displayed","FAIL",runManagerInfoObj);
  				blnFlag=false;
  				}
              }
              else
              {
  				repfn.FnUpdateTestStepResHTML("Verify the Forward All Calls toggle button is clicked", "Forward All Calls toggle button is not clicked", "FAIL",runManagerInfoObj);
              }
			}
			
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify the presence of Forward All Calls toggle button", "Forward All Calls toggle button is not present", "FAIL",runManagerInfoObj);
          blnFlag=false;
		}
	}
	   else
	   {
			repfn.FnUpdateTestStepResHTML("Verify the presence of Forward All Calls option in voice settings menu", "Forward All Calls option is not present in voice settings menu", "FAIL",runManagerInfoObj);
	   }
	}
	catch (Exception e)

	  {
repfn.FnUpdateTestStepResHTML("Verify User is in Voice Settings menu screen","User is not in Voice settings screen due to some exception ","FAIL",runManagerInfoObj);
	         System.err.println("Message : "+e.getMessage());
	         System.err.println("Cause : "+e.getCause());
	         blnFlag=false;
	  }
	  m1.put("STEPSTATUS", blnFlag);
	  return blnFlag;
}

public synchronized boolean FnUserLogin_WallOfGarden(WebDriver driver,RunManagerInfo runManagerInfoObj){
	
	boolean blnFlag=false;

	try{
		driver.manage().window().maximize();
		String strUserName1=m1.get("AppUser").toString();
		String strPwd1=m1.get("AppPwd").toString();
		System.out.println("user id: "+strUserName1);
		System.out.println("pwd: "+strPwd1);
		String Appurl=driver.getCurrentUrl();
		Thread.sleep(5000);
		System.out.println("Title is: "+driver.getTitle().toString());			
		if(driver.getTitle().toString().contains("Account") ){

			repfn.FnUpdateTestStepResHTML("Launch url: "+Appurl, "Home page is launched","PASS",runManagerInfoObj);		

			if(cnf.FnExplicitWait("XPATH", mbo.Q2Wall_SignInUserNameField,driver)){
				repfn.FnUpdateTestStepResHTML("Verify User Name Input field is displayed", "User Name Input field is displayed", "PASS",runManagerInfoObj);
				WebElement userName=driver.findElement(By.xpath(mbo.Q2Wall_SignInUserNameField));
				userName.sendKeys(strUserName1);
				repfn.FnUpdateTestStepResHTML("Enter User ID" , "User ID: "+strUserName1+" is entered","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify User Name Input field is displayed", "User Name Input field is not displayed", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}


			if(cnf.FnExplicitWait("XPATH", mbo.Q2Wall_SignInPasswordField,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Password Input field is displayed", "Password Input field is displayed", "PASS",runManagerInfoObj);
				WebElement password=driver.findElement(By.xpath(mbo.Q2Wall_SignInPasswordField));
				password.sendKeys(strPwd1);
				repfn.FnUpdateTestStepResHTML("Enter Password", "Password: " +strPwd1+ " is entered","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Password Input field is displayed", "Password Input field is not displayed", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}

			if(cnf.FnExplicitWait("XPATH", mbo.Q2Wall_SignInButton,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Sign In button is displayed", "Sign In button is displayed", "PASS",runManagerInfoObj);
				WebElement Q2Wall_SignInButton=driver.findElement(By.xpath(mbo.Q2Wall_SignInButton));
				if(cnf.JSClick(Q2Wall_SignInButton,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Sign In button is clicked", "Sign In button is clicked", "PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Sign In button is clicked", "Sign In button is not clicked", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}
				
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Sign In button is displayed", "Sign In button is not displayed", "FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			

				Thread.sleep(8000);
				if(cnf.FnExplicitWait("XPATH", mbo.Q2Wall_AccountPastDueText,driver)){
					WebElement Q2Wall_AccountPastDueText=driver.findElement(By.xpath(mbo.Q2Wall_AccountPastDueText));
					if(Q2Wall_AccountPastDueText.getAttribute("textContent").equalsIgnoreCase("Account Past Due")){
						repfn.FnUpdateTestStepResHTML("Verify User: "+strUserName1+" is able to login", "User: "+strUserName1+" is able to login and is navigated to \'Your Account\' page", "PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify User: "+strUserName1+" is able to login", "User: "+strUserName1+" is not able to login and is not navigated to \'Your Account\' page", "FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify User: "+strUserName1+" is able to login", "User: "+strUserName1+" is not able to login and is not navigated to \'Your Account\' page", "FAIL",runManagerInfoObj);
					blnFlag=false;
				}

		}
		else{
			repfn.FnUpdateTestStepResHTML("Launch url: "+Appurl, "Home page is not launched","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
	}
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Login to Charter-Wall of Garden application", "Login to Charter-Wall of Garden not performed","FAIL",runManagerInfoObj);
		blnFlag=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
	}		
	m1.put("STEPSTATUS", blnFlag);
	System.out.println( "launch flag: "+blnFlag);
	return blnFlag;

}

//Jhansi Dec 16,2015
//Verify the credit & debit is selected

public synchronized boolean PastDue_AdminUser(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		if(cnf.FnExplicitWait("XPATH", mbo.pastDueBillAdmin,driver)){
			WebElement pastDueAmount=driver.findElement(By.xpath(mbo.pastDueBillAdmin)); 
			String pastDueAmountText=pastDueAmount.getText();
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if notification panel is present for admin user", "Notification panel is present for admin user","PASS",runManagerInfoObj); 
			if(pastDueAmountText.contains("Past Due Balance - Due Now"))
			{
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Check whether the notication is displayed with past due status in the notification panel for admin user", "Notication is displayed with past due status in the notification panel for admin user" + pastDueAmount,"PASS",runManagerInfoObj); 
				
			}
			else
			{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Check whether the notication is displayed with past due status in the notification panel for admin user", "Notification is not displayed with past due status in the notification panel for admin user","FAIL",runManagerInfoObj);
			}
		} else
		{
			blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if notification panel is present for admin user", "Notification panel is not present for admin user","FAIL",runManagerInfoObj);
		}
	}
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify whether admin user is able to check the account is in past due status","Admin user is not able to check the account is in past due status due to some exception","FAIL",runManagerInfoObj);
		blnFlag=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());

	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;

}


public synchronized boolean FnBilling(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	try{


		if(cnf.FnExplicitWait("XPATH", mbo.Billing,driver)){

			repfn.FnUpdateTestStepResHTML("Verify Billing Link is present","Billing Link is present","PASS",runManagerInfoObj);
			WebElement Billing=driver.findElement(By.xpath(mbo.Billing));

			if(cnf.JSClick(Billing,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Billing Link is clicked","Billing Link is clicked","PASS",runManagerInfoObj);
				blnFlag=false;

				Thread.sleep(10000);
				if(driver.getCurrentUrl().contains("/billing/view-statements")){
					System.out.println("Billing page");
					repfn.FnUpdateTestStepResHTML("Verify User is in Billing page","User is in billing page","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify User in Billing page","User is not in billing page","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Billing Link is clicked","Billing Link is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}


		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Billing Link is present","Billing Link is not present","FAIL",runManagerInfoObj);
			blnFlag=false;
		}

	}

	catch (Exception e)

	{
		repfn.FnUpdateTestStepResHTML("Verify if user is navigated to Billing Page", "User is not navigated to billing page due to some exception", "FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean FnClickOneTime_Checking_SavingsOption(WebDriver driver,RunManagerInfo runManagerInfoObj){
	  try{
		  
		  driver.switchTo().frame("iFrameResizer0");
		  
		  // Checking/Savings Radio button
		  if(cnf.FnExplicitWait("XPATH", mbo.PayBill_Checking_Savings,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button is displayed under Select Payment Type option",
					"Checking/Savings Radio button is displayed under Select Payment Type option","PASS",runManagerInfoObj);
			WebElement PayBill_Checking_Savings=driver.findElement(By.xpath(mbo.PayBill_Checking_Savings));
			if(cnf.JSClick(PayBill_Checking_Savings,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button under Select Payment Type option is clicked ",
   					"Checking/Savings Radio button under Select Payment Type option is clicked ","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button under Select Payment Type option is clicked ",
   					"Checking/Savings Radio button under Select Payment Type option is not clicked ","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			
		  }
		  else{
			repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button is displayed under Select Payment Type option",
					"Checking/Savings Radio button is not displayed under Select Payment Type option","FAIL",runManagerInfoObj);
			blnFlag=false;
		  }
		  
		  // One Time Payment Frequency Radio button
		  if(cnf.FnExplicitWait("XPATH", mbo.PaymentFrequency_OneTime,driver)){
			repfn.FnUpdateTestStepResHTML("Verify One Time Radio button is displayed under Select Payment Frequency option",
					"One Time Radio button is displayed under Select Payment Type option","PASS",runManagerInfoObj);
			WebElement PaymentFrequency_OneTime=driver.findElement(By.xpath(mbo.PaymentFrequency_OneTime));
			
			if(cnf.isElementExistOne("XPATH", mbo.PaymentFrequency_OneTime_Selection,driver)){
				WebElement PaymentFrequency_OneTime_Selection=driver.findElement(By.xpath(mbo.PaymentFrequency_OneTime_Selection));
				String selectionState = PaymentFrequency_OneTime_Selection.getAttribute("aria-checked");

				if(selectionState.equalsIgnoreCase("true")){
					repfn.FnUpdateTestStepResHTML("Verify One-Time radio button is selected by default", 
							"One-Time radio button is selected by default","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
   				if(cnf.JSClick(PaymentFrequency_OneTime,driver)){
   					repfn.FnUpdateTestStepResHTML("Verify One Time Radio button is clicked under Select Payment Frequency option",
           					"One Time Radio button is clicked under Select Payment Type option","PASS",runManagerInfoObj);
   					blnFlag=true;
   				}
   				else{
   					repfn.FnUpdateTestStepResHTML("Verify One Time Radio button is clicked under Select Payment Frequency option",
           					"One Time Radio button is not clicked under Select Payment Type option","FAIL",runManagerInfoObj);
   					blnFlag=false;
   				}
				}
			}
			else{
				blnFlag=false;
			}
		  }
		  else{
			repfn.FnUpdateTestStepResHTML("Verify One Time Radio button is displayed under Select Payment Frequency option",
					"One Time Radio button is not displayed under Select Payment Type option","FAIL",runManagerInfoObj);
			blnFlag=false;
		  }
		  
		driver.switchTo().defaultContent();
		  
		  
	  }
	  
	  catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is able to verify and click One Time Checking/Savings radio button",
					"User is able to verify and click One Time Checking/Savings radio button due to some exception","FAIL",runManagerInfoObj);

	      	 blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	  
 }
public synchronized boolean FnPayBillLinkClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	  
	  try{
		  Thread.sleep(10000);
		  if(cnf.FnExplicitWait("XPATH", mbo.payBill_Link_V2,driver)){
			  repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is displayed","Pay Bill button is displayed","PASS",runManagerInfoObj);
			  WebElement payBill_Link=driver.findElement(By.xpath(mbo.payBill_Link_V2));
			  if(cnf.JSClick(payBill_Link,driver)){
				  repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is clicked","Pay Bill button is clicked","PASS",runManagerInfoObj);
				  Thread.sleep(10000);

				  if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationOne,driver)){
					  WebElement payBill_PageVerification_1=driver.findElement(By.xpath(mbo.PageVerificationOne));
					  if(payBill_PageVerification_1.getAttribute("textContent").equalsIgnoreCase("Billing")){
						  if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationTwo,driver)){
							  WebElement payBill_PageVerification_2=driver.findElement(By.xpath(mbo.PageVerificationTwo));
							  if(payBill_PageVerification_2.getAttribute("textContent").equalsIgnoreCase("Pay Bill")){
								  repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is navigated to Pay Bill page","PASS",runManagerInfoObj);
								  blnFlag=true;
							  }

							  else{
								  repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is not navigated to Pay Bill page","FAIL",runManagerInfoObj);
								  blnFlag=false;
							  }
						  }
					  }
				  }
			  }
			  else{
				  repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is clicked","Pay Bill button is not clicked","FAIL",runManagerInfoObj);
				  blnFlag=false;
			  }

		  }
		  else{
			  repfn.FnUpdateTestStepResHTML("Verify Pay Bill button is displayed","Pay Bill button is not displayed","FAIL",runManagerInfoObj);
			  blnFlag=false;
		  }
	  }
	  
	  catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Bill button on Home page",
					"User is able to verify Pay Bill button on Home page due to some exception","FAIL",runManagerInfoObj);

	      	 blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	  
 }

 
public synchronized boolean fnPayBillTab(WebDriver driver,RunManagerInfo runManagerInfoObj)
 {
	 	try
	 	{
	 	

	 		 if(cnf.FnExplicitlessWait_untilClickable("XPATH", "//div[contains(@ng-class,'Pay Bill')]/div[.='Pay Bill']",driver)){
	 			 WebElement payBill=driver.findElement(By.xpath("//div[contains(@ng-class,'Pay Bill')]/div[.='Pay Bill']"));
	 			 if(cnf.JSClick(payBill,driver))
	 			 {
	 				 System.out.println("Billing page");
	 				 repfn.FnUpdateTestStepResHTML("Verify User is in pay bill page","User is in pay bill page","PASS",runManagerInfoObj);
	 				 blnFlag=true;
	 				 Thread.sleep(5000);
	 				
	 				

	 			 }
	 			 else
	 			 {
	 				 
	 				 repfn.FnUpdateTestStepResHTML("Verify User is in pay bill page","User is not in pay bill page","FAIL",runManagerInfoObj);
	 				 blnFlag=false;
	 			 }

	 	 }

	  }

	  catch (Exception e)


	  {
	 	 repfn.FnUpdateTestStepResHTML("Verify if user is navigated to pay bill Page", "User is not navigated to pay bill page due to some exception", "FAIL",runManagerInfoObj);
	 	 System.err.println("Message : "+e.getMessage());
	 	 System.err.println("Cause : "+e.getCause());

	  }
	  m1.put("STEPSTATUS", blnFlag);
	  return blnFlag;
	 }
public synchronized boolean fnCancelAutoPay(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	try
	{
		driver.switchTo().frame("iFrameResizer0");
		if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.cancelAutoPay,driver))
		{
			 blnFlag=true;
			 repfn.FnUpdateTestStepResHTML("Verify if auto pay is enabled for the user", "Auto pay is enabled for the user", "PASS",runManagerInfoObj);
			 WebElement cancelAutoPay=driver.findElement(By.xpath(mbo.cancelAutoPay));
			 if(cnf.JSClick(cancelAutoPay,driver))
			 {
				 Thread.sleep(5000);
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if user is able to cancel auto pay option", "User is able to cancel auto pay option", "PASS",runManagerInfoObj);
				 WebElement autoPayUnenrollment=driver.findElement(By.xpath(mbo.autoPayUnenrollment));
				 if(cnf.JSClick(autoPayUnenrollment,driver))
				 {
					 Thread.sleep(5000);
					 blnFlag=true;
					 repfn.FnUpdateTestStepResHTML("Verify if user has clicked \"Complete Unenrollment\" button in confirmation pop up", "User has clicked \"Complete Unenrollment\" button in confirmation pop up", "PASS",runManagerInfoObj);
					 driver.switchTo().defaultContent();
					 Thread.sleep(2000);
					if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.overviewClickAutopay,driver))
					{
						 blnFlag=true;
						 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to home page", "User has navigated to home page", "PASS",runManagerInfoObj);
						 WebElement overview=driver.findElement(By.xpath(mbo.overviewClickAutopay));
						 if(cnf.JSClick(overview,driver))
						 {
							 Thread.sleep(5000);
							 repfn.FnUpdateTestStepResHTML("Verify if user has clicked overview button in home page", "User has clicked overview button in home page", "PASS",runManagerInfoObj);
							 blnFlag=FnOverviewPage(driver,runManagerInfoObj);
							 blnFlag=FnBilling(driver,runManagerInfoObj);
							 blnFlag=fnPayBillTab(driver,runManagerInfoObj);
						 }
						 else
						 {
							 blnFlag=false;
							 repfn.FnUpdateTestStepResHTML("Verify if user has clicked overview button in home page", "User has not  clicked overview button in home page", "FAIL",runManagerInfoObj);
						 }
					}
					 else
					 {
						 blnFlag=true;
						 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to home page", "User has not navigated to home page", "FAIL",runManagerInfoObj);
					 }
				 }
				 else
				 {
					 blnFlag=false;
					 repfn.FnUpdateTestStepResHTML("Verify if user has clicked \"Complete Unenrollment\" button in confirmation pop up", "User has not clicked \"Complete Unenrollment\" button in confirmation pop up", "FAIL",runManagerInfoObj);
				 }
			 }
			 else
			 {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Verify if user is able to cancel auto pay option", "User is not able to cancel auto pay option", "FAIL",runManagerInfoObj);
			 }
		}
		else{
			 blnFlag=true;
			 repfn.FnUpdateTestStepResHTML("Verify if auto pay is enabled for the user", "Auto pay is not enabled for the user", "PASS",runManagerInfoObj);
		}
		
		 driver.switchTo().defaultContent();
	}
	catch (Exception e)

	 {		
		 blnFlag=false;
		 repfn.FnUpdateTestStepResHTML("Verify if user has clicked overview button in home page", "User has not clicked overview button in home page due to some exception", "FAIL",runManagerInfoObj);
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());
	 }
	
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}


public synchronized boolean fnCreditOrDebitAutoPayInvalidCardNumber_ErrorMessage(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	try
	{
		  driver.switchTo().frame("iFrameResizer0");
		if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.creditDebitCard,driver))
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if user has navigated to pay bill screen","User has navigated to pay bill screen","PASS",runManagerInfoObj);
			WebElement creditOrDebitCard=driver.findElement(By.id(mbo.creditDebitCard));
			if(cnf.JSClick(creditOrDebitCard,driver))
			{
				Thread.sleep(5000);
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Credit/Debit\" card option","User has selected the \"Credit/Debit\" card option","PASS",runManagerInfoObj);
				if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.autoPayId,driver))
				{
					WebElement autoPayID=driver.findElement(By.id(mbo.autoPayId));
					if(cnf.JSClick(autoPayID,driver)){
						repfn.FnUpdateTestStepResHTML("Verify if user has clicked the \"Auto-Pay\" payment option","User has  clicked the \"Auto-Pay\" payment option","PASS",runManagerInfoObj);
						Thread.sleep(5000);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if user has  clicked the \"Auto-Pay\" payment option","User has  not clicked the \"Auto-Pay\" payment option","FAIL",runManagerInfoObj);
                        blnFlag=false;
					}
					blnFlag=true;
					repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Auto-Pay\" payment option","User has selected the \"Auto-Pay\" payment option","PASS",runManagerInfoObj);
				
				
				if(cnf.FnExplicitWait("XPATH", mbo.billingCardNumber,driver))
				{
					blnFlag=true;
					repfn.FnUpdateTestStepResHTML("Verify if card number field to enter card number is present","Card number field to enter card number is present","PASS",runManagerInfoObj);
					if(blnFlag)
					{
						driver.findElement(By.xpath(mbo.billingCardNumber)).sendKeys("785485725894879012",Keys.TAB);
						blnFlag=true;
						repfn.FnUpdateTestStepResHTML("Verify if user has entered the card number","User has entered the card number: "+"78548572589487901","PASS",runManagerInfoObj);
						if(cnf.FnExplicitWait("XPATH", mbo.errorMessageForInvalidCard,driver))
						{
							blnFlag=true;
							WebElement ErrorMsg=driver.findElement(By.xpath(mbo.errorMessageForInvalidCard));
							repfn.FnUpdateTestStepResHTML("Verify if error message is displayed for card number other than Visa/Master Card/Discover","Error message is displayed for card number other  than Visa/Master Card/Discover"+ErrorMsg.getText(),"PASS",runManagerInfoObj);
							if(cnf.FnExplicitWait("XPATH", mbo.billingDisabledPayNowButton,driver))
							{
								blnFlag=true;
								
								repfn.FnUpdateTestStepResHTML("Verify if \"SAVE AUTO PAY \" button is disabled for incorrect card number","\"SAVE AUTO PAY \" button is disabled for incorrect card number","PASS",runManagerInfoObj);
								 
							}
							else
							{
								blnFlag=false;
								repfn.FnUpdateTestStepResHTML("Verify if \"SAVE AUTO PAY \" button is disabled for incorrect card number","\"SAVE AUTO PAY \" button is not disabled for incorrect card number","FAIL",runManagerInfoObj);
							}
							
							
						}
						else
						{
							blnFlag=false;
							repfn.FnUpdateTestStepResHTML("Verify if error message is displayed for card number with more than 16 digits","Error message is not displayed for card number with more than 16 digits","FAIL",runManagerInfoObj);
						}
						if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.checkingSavingsAccount,driver))
						 {
							 WebElement checkingSavingsAccount=driver.findElement(By.id(mbo.checkingSavingsAccount));
							 cnf.JSClick(checkingSavingsAccount,driver);
							Thread.sleep(5000);
							 
						 }
						 else
						 {
							 System.out.println("Element not found");
						 }	
						 driver.switchTo().defaultContent();
					}
					else
					{
						blnFlag=false;
						repfn.FnUpdateTestStepResHTML("Verify if user has entered the card number","User has not entered the card number: "+"78548572589487901","FAIL",runManagerInfoObj);
					}
				}
				else
				{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Verify if card number field to enter card number is present","Card number field to enter card number is not present","FAIL",runManagerInfoObj);
				}
				}
				else
				{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Auto-Pay\" payment option","User has not selected the \"Auto-Pay\" payment option","FAIL",runManagerInfoObj);
				}
			}
			
			
			else
			{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Credit/Debit\" card option","User has not selected the \"Credit/Debit\" card option","FAIL",runManagerInfoObj);
			}
		}
		else
		{
			blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if user has navigated to pay bill screen","User has not navigated to pay bill screen","FAIL",runManagerInfoObj);
		}
		
		
	}
	 catch (Exception e)

	 {		
		 blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if \"SAVE AUTO PAY \" button is disabled for incorrect card number","\"SAVE AUTO PAY \" button is not disabled for incorrect card number due to some exception","FAIL",runManagerInfoObj);
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());
	 }
	
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}


public synchronized boolean fnCreditOrDebitAutoPayBlankFeild_ErrorMessage(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	try
	{
		  driver.switchTo().frame("iFrameResizer0");
		if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.creditDebitCard,driver))
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if user has navigated to pay bill screen","User has navigated to pay bill screen","PASS",runManagerInfoObj);
			WebElement creditOrDebitCard=driver.findElement(By.id(mbo.creditDebitCard));
			if(cnf.JSClick(creditOrDebitCard,driver))
			{
				Thread.sleep(5000);
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Credit/Debit\" card option","User has selected the \"Credit/Debit\" card option","PASS",runManagerInfoObj);
				if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.autoPayId,driver))
				{
					WebElement autoPayID=driver.findElement(By.id(mbo.autoPayId));
					if(cnf.JSClick(autoPayID,driver)){
						repfn.FnUpdateTestStepResHTML("Verify if user has clicked the \"Auto-Pay\" payment option","User has  clicked the \"Auto-Pay\" payment option","PASS",runManagerInfoObj);
						Thread.sleep(5000);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify if user has  clicked the \"Auto-Pay\" payment option","User has  not clicked the \"Auto-Pay\" payment option","FAIL",runManagerInfoObj);
                        blnFlag=false;
					}
					blnFlag=true;
					repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Auto-Pay\" payment option","User has selected the \"Auto-Pay\" payment option","PASS",runManagerInfoObj);
				
				
				if(cnf.FnExplicitWait("XPATH", mbo.billingCardNumber,driver))
				{
					blnFlag=true;
					repfn.FnUpdateTestStepResHTML("Verify if card number field to enter card number is present","Card number field to enter card number is present","PASS",runManagerInfoObj);
					if(blnFlag)
					{
						WebElement CardNo=driver.findElement(By.xpath(mbo.billingCardNumber));
						CardNo.click();
						CardNo.sendKeys(Keys.TAB);
						blnFlag=true;
						repfn.FnUpdateTestStepResHTML("Verify if user has not  entered the card number","User has not  entered the card number: ","PASS",runManagerInfoObj);
						if(cnf.FnExplicitWait("XPATH", mbo.errorMessageForInvalidCard,driver))
						{
							blnFlag=true;
							WebElement ErrorMsg=driver.findElement(By.xpath(mbo.errorMessageForInvalidCard));
							repfn.FnUpdateTestStepResHTML("Verify if error message is displayed for  Blank card number ","Error message is displayed for Blank card number "+ErrorMsg.getText(),"PASS",runManagerInfoObj);
							
						
							//DateFeild
							
							if(cnf.FnExplicitWait("ID", mbo.billingExpirationDate,driver))
							{
								blnFlag=true;
								repfn.FnUpdateTestStepResHTML("Verify if expiration date field to enter expiration date is present","Expiration date field to enter expiration date is present","PASS",runManagerInfoObj);
								if(blnFlag)
								{
									WebElement Expdate=driver.findElement(By.id(mbo.billingExpirationDate));
									Expdate.sendKeys(Keys.TAB);
									blnFlag=true;
									repfn.FnUpdateTestStepResHTML("Verify if user has not  entered the expiration date","User has not  entered the expiration date: ","PASS",runManagerInfoObj);
									
									if(cnf.FnExplicitWait("XPATH", mbo.errorMessageForExpirationDate,driver))
									{
										blnFlag=true;
										WebElement ExpdateMsg=driver.findElement(By.xpath(mbo.errorMessageForExpirationDate));
										repfn.FnUpdateTestStepResHTML("Verify if error message is displayed for leaving the  expiration date feild blank","Error message is displayed forleaving the  expiration date feild blank"+ExpdateMsg.getText(),"PASS",runManagerInfoObj);
										if(cnf.FnExplicitWait("XPATH", mbo.billingDisabledPayNowButton,driver))
										{
											blnFlag=true;
											
											repfn.FnUpdateTestStepResHTML("Verify if \"SAVE AUTO PAY \" button is disabled for Leaving the card number and Expiry date  feilds blank","\"SAVE AUTO PAY \" button is disabled  for Leaving the card number and Expiry date  feilds blank","PASS",runManagerInfoObj);
											 
										}
										else
										{
											blnFlag=false;
											repfn.FnUpdateTestStepResHTML("Verify if \"SAVE AUTO PAY \" button is disabled for Leaving the card number and Expiry date  feilds blank","\"SAVE AUTO PAY \" button is not disabled for Leaving the card number and Expiry date  feilds blank","FAIL",runManagerInfoObj);
										}
										
										
									}
									else
									{
										blnFlag=false;
										repfn.FnUpdateTestStepResHTML("Verify if error message is displayed for leaving the  expiration date feild blank","Error message is not displayed for leaving the  expiration date feild blank","FAIL",runManagerInfoObj);
									}
									
								}
								else
								{
									blnFlag=false;
									repfn.FnUpdateTestStepResHTML("Verify if user has  not entered the expiration date","User has  entered the expiration date: ","FAIL",runManagerInfoObj);
								}
							}
							else
							{
								blnFlag=true;
								repfn.FnUpdateTestStepResHTML("Verify if expiration date field to enter expiration date is present","Expiration date field to enter expiration date is not present","FAIL",runManagerInfoObj);
							}	
							
						}
						else
						{
							blnFlag=false;
							repfn.FnUpdateTestStepResHTML("Verify if error message is displayed for leaving the card number blank","Error message is not displayed for leaving the card number blank","FAIL",runManagerInfoObj);
						}
						if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.checkingSavingsAccount,driver))
						 {
							 WebElement checkingSavingsAccount=driver.findElement(By.id(mbo.checkingSavingsAccount));
							 cnf.JSClick(checkingSavingsAccount,driver);
							Thread.sleep(5000);
							 
						 }
						 else
						 {
							 System.out.println("Element not found");
						 }	
						 driver.switchTo().defaultContent();
					}
					else
					{
						blnFlag=false;
						repfn.FnUpdateTestStepResHTML("Verify if user has entered the card number","User has  entered the card number: ","FAIL",runManagerInfoObj);
					}
				}
				else
				{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Verify if card number field to enter card number is present","Card number field to enter card number is not present","FAIL",runManagerInfoObj);
				}
				}
				else
				{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Auto-Pay\" payment option","User has not selected the \"Auto-Pay\" payment option","FAIL",runManagerInfoObj);
				}
			}
			
			
			else
			{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Credit/Debit\" card option","User has not selected the \"Credit/Debit\" card option","FAIL",runManagerInfoObj);
			}
		}
		else
		{
			blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if user has navigated to pay bill screen","User has not navigated to pay bill screen","FAIL",runManagerInfoObj);
		}
		
		
	}
	 catch (Exception e)

	 {		
		 blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if \"SAVE AUTO PAY \" button is disabled for Leaving the card number and Expiry date  feilds blank","\"SAVE AUTO PAY \" button is not disabled for Leaving the card number and Expiry date  feilds blank","FAIL",runManagerInfoObj);
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());
	 }
	
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}


public synchronized boolean Autopay_Cancel(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		driver.switchTo().frame("iFrameResizer0");
		if(cnf.FnExplicitWait("XPATH", mbo.AutopayCancelbtn,driver)){
			WebElement Cancel=driver.findElement(By.xpath(mbo.AutopayCancelbtn));
			repfn.FnUpdateTestStepResHTML("Verify if Cancel Autopay link is present","Cancel Autopay link is present","PASS",runManagerInfoObj);
			
			if(cnf.JSClick(Cancel,driver)){
				repfn.FnUpdateTestStepResHTML("Verify if Cancel Autopay link is clicked","Cancel Autopay link is clicked","PASS",runManagerInfoObj);
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify if Cancel Autopay link is clicked","Cancel Autopay link is not clicked","FAIL",runManagerInfoObj);
                blnFlag=false;
			}
			
        if(cnf.FnExplicitWait("Xpath", mbo.AutoPay_Cancel_Confirmationpopup,driver))
        {
			WebElement AutoPay_Confirmationpopup=driver.findElement(By.xpath(mbo.AutoPay_Cancel_Confirmationpopup));
			
			Thread.sleep(3000);
			repfn.FnUpdateTestStepResHTML("Verify if the Confirmation popup is displayed","confirmation popup is displayed","PASS",runManagerInfoObj);
           
			  
			if(cnf.FnExplicitWait("XPATH", mbo.AutoPay_Cancel_Confirmationpopup_Confirm,driver))
			{
				WebElement Confirm=driver.findElement(By.xpath(mbo.AutoPay_Cancel_Confirmationpopup_Confirm));
    			repfn.FnUpdateTestStepResHTML("Verify if Complete Unenrollment option is present","Complete Unenrollment option is present","PASS",runManagerInfoObj);
    			
    			
    			if(cnf.JSClick(Confirm,driver)){
        			repfn.FnUpdateTestStepResHTML("Verify if Complete Unenrollment option is clicked","Complete Unenrollment option is clicked","PASS",runManagerInfoObj);
    			}
    			else{
    				repfn.FnUpdateTestStepResHTML("Verify if Complete Unenrollment option is clicked","Complete Unenrollment option is not  clicked","FAIL",runManagerInfoObj);
                    blnFlag=false;
    			}
    			repfn.FnUpdateTestStepResHTML("Click on the Complete Unenrollment link", "Complete Unenrollment link is clicked", "PASS",runManagerInfoObj);
    			Thread.sleep(1000);
    			blnFlag=true;
            }
            else
            {
    			repfn.FnUpdateTestStepResHTML("Verify if User is able to Cancel Autopay","User is not able to cancel autopay","FAIL",runManagerInfoObj);
    			blnFlag=false;
            }
			driver.switchTo().defaultContent();

        }
        else{
			repfn.FnUpdateTestStepResHTML("Verify AutoPay Icon is present and clicked","AutoPay Icon is not  present and not clicked","FAIL",runManagerInfoObj);
			blnFlag=false;
        }
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify AutoPayON and _NextPayment Text is available","AutoPayON and _NextPayment Text is not  available","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}
	 catch (Exception e)

	 {		
		 repfn.FnUpdateTestStepResHTML("Verify if User is able to Cancel Autopay","User is not able to cancel autopay due to some exception","FAIL",runManagerInfoObj);
			blnFlag=false;
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());
	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}


public synchronized boolean FnEnrollInAutoPayClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
    
    try{
                   
                    if(cnf.FnExplicitWait("XPATH", mbo.EnrollAutoPay,driver)){
                       repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is displayed under Notifications Section",
                                                                  "Enroll Auto Pay link is displayed under Notifications Section","PASS",runManagerInfoObj);
                        WebElement EnrollAutoPay=driver.findElement(By.xpath(mbo.EnrollAutoPay));
                        if(cnf.JSClick(EnrollAutoPay,driver)){
                        repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is clicked", "Enroll Auto Pay link is clicked","PASS",runManagerInfoObj);
                        Thread.sleep(10000);                                                                 
                        if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationOne,driver)){
                        WebElement payBill_PageVerification_1=driver.findElement(By.xpath(mbo.PageVerificationOne));
                        if(payBill_PageVerification_1.getAttribute("textContent").equalsIgnoreCase("Billing")){
                        if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationTwo,driver)){
                              WebElement payBill_PageVerification_2=driver.findElement(By.xpath(mbo.PageVerificationTwo));
                              if(payBill_PageVerification_2.getAttribute("textContent").equalsIgnoreCase("Pay Bill")){
                              	
                               repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is navigated to Pay Bill page","PASS",runManagerInfoObj);
                               blnFlag=true;
                               FnClickAutoPay_Credit_Debit_Option(driver,runManagerInfoObj);
                               
                              }
                              else{
                              repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is not navigated to Pay Bill page","FAIL",runManagerInfoObj);
                              blnFlag=false;
                              }
                              }
                              }
                                }
                                   }
                               else{
                                    repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is clicked", "Enroll Auto Pay link is not clicked","FAIL",runManagerInfoObj);
                                    blnFlag=false;
                                   }
                               }
                               else{
                                   
                                    if(cnf.FnExplicitWait("XPATH", mbo.AutoPayEnabled,driver)){
                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user",
                                                                  "Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user","PASS",runManagerInfoObj);
                                                   WebElement AutoPayEnabled=driver.findElement(By.xpath(mbo.AutoPayEnabled));
                                                   if(cnf.JSClick(AutoPayEnabled,driver)){
                                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is clicked", "Auto Pay Enabled icon is clicked","PASS",runManagerInfoObj);                                                                                
                                                                   blnFlag=true;
                                                                   fnUnenrollAutoPay(driver,runManagerInfoObj);
                                                                   FnEnrollInAutoPayClick(driver,runManagerInfoObj);
                                                                   //FnVerifyClickSupportLink();
                                                                 Thread.sleep(10000);
                                                   }
                                                   else{
                                                                 repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is clicked", "Auto Pay Enabled icon is not clicked","FAIL",runManagerInfoObj);
                                                                 blnFlag=false;
                                                   }
                                                   }
                                                   else{
                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user",
                                                                  "Auto Pay Enabled icon is not displayed under Notifications Section to denote Auto Pay is enabled for the user","FAIL",runManagerInfoObj);
                                                   blnFlag=false;
                                                   }
                                                   }
                                                   }
   
    catch (Exception e)

                  {
                                  repfn.FnUpdateTestStepResHTML("Verify User is able to get the error message on entering invalid routing number",
                                                                  "User is not able to get the error message on entering invalid routing number due to some exception","FAIL",runManagerInfoObj);

                   blnFlag=false;
                                  System.err.println("Message : "+e.getMessage());
                                  System.err.println("Cause : "+e.getCause());
                                  
                  }
                  m1.put("STEPSTATUS", blnFlag);
                  return blnFlag;
}
public synchronized boolean FnEnterCardDetails(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

try{
driver.switchTo().frame("iFrameResizer0");
Thread.sleep(2000);
if(cnf.FnExplicitWait("XPATH", mbo.PayBill_CardNum,driver)){
WebElement PayBill_CardNum=driver.findElement(By.xpath(mbo.PayBill_CardNum));
PayBill_CardNum.sendKeys("4444444444444448");
repfn.FnUpdateTestStepResHTML("Verify Credit Card Number is Entered ","Credit Card Number is Entered","PASS",runManagerInfoObj);
blnFlag=true;
}
else{
repfn.FnUpdateTestStepResHTML("Verify Credit Card Number is Entered ","Credit Card Number is not  Entered","FAIL",runManagerInfoObj);
blnFlag=false;
}

if(cnf.FnExplicitWait("XPATH", mbo.PayBill_ExpiryDate,driver)){
WebElement PayBill_ExpiryDate=driver.findElement(By.xpath(mbo.PayBill_ExpiryDate));
PayBill_ExpiryDate.sendKeys("02/2016");
repfn.FnUpdateTestStepResHTML("Verify Expiration Date is Entered ","Expiration Date is Entered","PASS",runManagerInfoObj);
blnFlag=true;
}
else{
repfn.FnUpdateTestStepResHTML("Verify Expiration Date is Entered ","Expiration Date is not  Entered","FAIL",runManagerInfoObj);
blnFlag=false;
}
driver.switchTo().defaultContent();		
}


catch (Exception e)
{
repfn.FnUpdateTestStepResHTML("Verify if User is able to enter card details on Pay Bill page", "User is not able to enter card details on Pay Bill page on Pay Bill page due to some exception", "FAIL",runManagerInfoObj);
System.err.println("Message : "+e.getMessage());
System.err.println("Cause : "+e.getCause());
blnFlag=false;
}
m1.put("STEPSTATUS", blnFlag);
return blnFlag;
}


public synchronized boolean FnVerifySaveAutoPayButton(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
  
  try{
                  
                  driver.switchTo().frame("iFrameResizer0");
                  Thread.sleep(2000);
					
                  if(cnf.FnExplicitWait("XPATH", mbo.SaveAutoPayButton,driver)){
                                  ((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.SaveAutoPayButton)));   
                                  repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is displayed","PASS",runManagerInfoObj);
                                  WebElement SaveAutoPayButton=driver.findElement(By.xpath(mbo.SaveAutoPayButton));
                                  //cnf.ScrollToView(PayNowButton);
                                  if(SaveAutoPayButton.isEnabled()){
                                                  repfn.FnUpdateTestStepResHTML("Verify Save auto Pay button is enabled","Save auto Pay button is enabled.","PASS",runManagerInfoObj); 
                                                  if(cnf.JSClick(SaveAutoPayButton,driver)){
                                                  	blnFlag=true;
                                                   repfn.FnUpdateTestStepResHTML("Verify Save Auto pay button is clicked", "Save Auto pay button is clicked","PASS",runManagerInfoObj);                                                                
													 
													
														 if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.acceptTermsAndConditions,driver))
														 {
															 blnFlag=true;
															 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to auto pay confirmation page", "User has navigated to auto pay confirmation page", "PASS",runManagerInfoObj);
															 WebElement acceptTermsAndConditions=driver.findElement(By.id(mbo.acceptTermsAndConditions));
															 if(cnf.JSClick(acceptTermsAndConditions,driver))
															 {
																 blnFlag=true;
																 repfn.FnUpdateTestStepResHTML("Verify if user has accepted the terms and conditons check box ", "User has accepted the terms and conditons check box", "PASS",runManagerInfoObj);
																 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.billingSaveautoPayButtonInConfirm,driver))
																 {
																	 blnFlag=true;
																	 repfn.FnUpdateTestStepResHTML("Verify if user is able to see enabled \"Save Auto Pay\" button ", "User is able to see enabled \"Save Auto Pay\" button", "PASS",runManagerInfoObj);
																	 WebElement saveAutoPayConfirm=driver.findElement(By.xpath(mbo.billingSaveautoPayButtonInConfirm));
																	 if(cnf.JSClick(saveAutoPayConfirm,driver))
																	 {
																		 Thread.sleep(5000);
																		 blnFlag=true;
																		 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the \"Save Auto Pay\" button ", "User has clicked the \"Save Auto Pay\" button", "PASS",runManagerInfoObj);
																		 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.billingReturnToOverview,driver))
																		 {
																			 blnFlag=true;
																			 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to payment complete page ", "User has navigated to payment complete page", "PASS",runManagerInfoObj);
																			 WebElement returnToOverview=driver.findElement(By.xpath(mbo.billingReturnToOverview));
																			 if(cnf.JSClick(returnToOverview,driver))
																			 {
																				 Thread.sleep(5000);
																				 blnFlag=true;
																				 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the Return to overview button ", "User has clicked the Return to overview button", "PASS",runManagerInfoObj);
																			 }
																			 else
																			 {
																				 blnFlag=false;
																				 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the Return to overview button ", "User has not clicked the Return to overview button", "FAIL",runManagerInfoObj);
																			 }
																		 } 
																		 else
																		 {
																			 blnFlag=true;
																			 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to payment complete page ", "User has not navigated to payment complete page", "FAIL",runManagerInfoObj);
																		 }
																	 }
																	 else
																	 {
																		 blnFlag=false;
																		 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the \"Save Auto Pay\" button ", "User has not clicked the \"Save Auto Pay\" button", "FAIL",runManagerInfoObj);
																	 }
																 }
																 else
																 {
																	 blnFlag=true;
																	 repfn.FnUpdateTestStepResHTML("Verify if user is able to see enabled \"Save Auto Pay\" button ", "User is not able to see enabled \"Save Auto Pay\" button", "FAIL",runManagerInfoObj);
																 }
															 }
															 else
															 {
																 blnFlag=false;
																 repfn.FnUpdateTestStepResHTML("Verify if user has accepted the terms and conditons check box", "User has not accepted the terms and conditons check box", "FAIL",runManagerInfoObj);
															 }
													
														 }
														 else
														 {
															 blnFlag=false;
															 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to auto pay confirmation page", "User has not navigated to auto pay confirmation page", "FAIL",runManagerInfoObj);
														 }
													 
                                                  }
                                                  else{
                                                   repfn.FnUpdateTestStepResHTML("Verify Save Auto pay button is clicked", "Save Auto pay button is not clicked","PASS",runManagerInfoObj);	
													 blnFlag=false;
                                                  }																 
                                                  blnFlag=false;
                                  }
                                  else{
                                                  repfn.FnUpdateTestStepResHTML("Verify Save auto Pay button is enabled","Save auto Pay button is not enabled","PASS",runManagerInfoObj);
                                                  blnFlag=true;
                                  }
                  }
                  else{
                                  repfn.FnUpdateTestStepResHTML("Verify Save auto Pay button is displayed","Save auto Pay button is not displayed","FAIL",runManagerInfoObj);
                                  blnFlag=false;
                  }
					
					
                  
                  
                  driver.switchTo().defaultContent();
                  
  }
  
  catch (Exception e)

                 {
                                 repfn.FnUpdateTestStepResHTML("Verify User is able to verify Save auto Pay button on Pay Bill page",
                                                                 "User is not able to verify Save auto Pay button on Pay Bill page due to some exception","FAIL",runManagerInfoObj);

                                 blnFlag=false;
                                 System.err.println("Message : "+e.getMessage());
                                 System.err.println("Cause : "+e.getCause());
                                 
                  }
                 m1.put("STEPSTATUS", blnFlag);
                 return blnFlag;
}

public synchronized boolean fnUnenrollAutoPay(WebDriver driver,RunManagerInfo runManagerInfoObj) {
try
{
driver.switchTo().frame("iFrameResizer0");
if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.cancelAutoPay,driver))
{
blnFlag=true;
repfn.FnUpdateTestStepResHTML("Verify if auto pay is enabled for the user", "Auto pay is enabled for the user", "PASS",runManagerInfoObj);
WebElement cancelAutoPay=driver.findElement(By.xpath(mbo.cancelAutoPay));
if(cnf.JSClick(cancelAutoPay,driver))
{
	 Thread.sleep(5000);
	 blnFlag=true;
	 repfn.FnUpdateTestStepResHTML("Verify if user is able to cancel auto pay option", "User is able to cancel auto pay option", "PASS",runManagerInfoObj);
	 WebElement autoPayUnenrollment=driver.findElement(By.xpath(mbo.autoPayUnenrollment));
	 if(cnf.JSClick(autoPayUnenrollment,driver))
	 {
		 Thread.sleep(5000);
		 blnFlag=true;
		 repfn.FnUpdateTestStepResHTML("Verify if user has clicked \"Complete Unenrollment\" button in confirmation pop up", "User has clicked \"Complete Unenrollment\" button in confirmation pop up", "PASS",runManagerInfoObj);
		 driver.switchTo().defaultContent();
		 Thread.sleep(2000);
		if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.overviewClickAutopay,driver))
		{
			 blnFlag=true;
			 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to home page", "User has navigated to home page", "PASS",runManagerInfoObj);
			 WebElement overview=driver.findElement(By.xpath(mbo.overviewClickAutopay));
			 if(cnf.JSClick(overview,driver))
			 {
				 Thread.sleep(5000);
				 repfn.FnUpdateTestStepResHTML("Verify if user has clicked overview button in home page", "User has clicked overview button in home page", "PASS",runManagerInfoObj);
				 
			 }
			 else
			 {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Verify if user has clicked overview button in home page", "User has clicked overview button in home page", "FAIL",runManagerInfoObj);
			 }
		}
		 else
		 {
			 blnFlag=true;
			 repfn.FnUpdateTestStepResHTML("Verify if user has navigated to home page", "User has not navigated to home page", "FAIL",runManagerInfoObj);
		 }
	 }
	 else
	 {
		 blnFlag=false;
		 repfn.FnUpdateTestStepResHTML("Verify if user has clicked \"Complete Unenrollment\" button in confirmation pop up", "User has not clicked \"Complete Unenrollment\" button in confirmation pop up", "FAIL",runManagerInfoObj);
	 }
}
else
{
	 blnFlag=false;
	 repfn.FnUpdateTestStepResHTML("Verify if user is able to cancel auto pay option", "User is not able to cancel auto pay option", "FAIL",runManagerInfoObj);
}
}
else{
blnFlag=true;
repfn.FnUpdateTestStepResHTML("Verify if auto pay is enabled for the user", "Auto pay is not enabled for the user", "PASS",runManagerInfoObj);
driver.switchTo().defaultContent();
}


}
catch (Exception e)

{		
blnFlag=false;
System.err.println("Message : "+e.getMessage());
System.err.println("Cause : "+e.getCause());
}

m1.put("STEPSTATUS", blnFlag);
return blnFlag;
}


public synchronized boolean FnEnrollInCheckingSavingAutoPayClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
    
    try{
                   
                    if(cnf.FnExplicitWait("XPATH", mbo.EnrollAutoPay,driver)){
                       repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is displayed under Notifications Section",
                                                                  "Enroll Auto Pay link is displayed under Notifications Section","PASS",runManagerInfoObj);
                        WebElement EnrollAutoPay=driver.findElement(By.xpath(mbo.EnrollAutoPay));
                        if(cnf.JSClick(EnrollAutoPay,driver)){
                        repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is clicked", "Enroll Auto Pay link is clicked","PASS",runManagerInfoObj);
                        Thread.sleep(10000);                                                                 
                        if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationOne,driver)){
                        WebElement payBill_PageVerification_1=driver.findElement(By.xpath(mbo.PageVerificationOne));
                        if(payBill_PageVerification_1.getAttribute("textContent").equalsIgnoreCase("Billing")){
                        if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationTwo,driver)){
                              WebElement payBill_PageVerification_2=driver.findElement(By.xpath(mbo.PageVerificationTwo));
                              if(payBill_PageVerification_2.getAttribute("textContent").equalsIgnoreCase("Pay Bill")){
                              	
                               repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is navigated to Pay Bill page","PASS",runManagerInfoObj);
                               blnFlag=true;
                               FnClickAutoPay_Checking_Saving_Option(driver,runManagerInfoObj);
                              }
                              else{
                              repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is not navigated to Pay Bill page","FAIL",runManagerInfoObj);
                              blnFlag=false;
                              }
                              }
                              }
                                }
                                   }
                               else{
                                    repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is clicked", "Enroll Auto Pay link is not clicked","FAIL",runManagerInfoObj);
                                    blnFlag=false;
                                   }
                               }
                               else{
                                   
                                    if(cnf.FnExplicitWait("XPATH", mbo.AutoPayEnabled,driver)){
                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user",
                                                                  "Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user","PASS",runManagerInfoObj);
                                                   WebElement AutoPayEnabled=driver.findElement(By.xpath(mbo.AutoPayEnabled));
                                                   if(cnf.JSClick(AutoPayEnabled,driver)){
                                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is clicked", "Auto Pay Enabled icon is clicked","PASS",runManagerInfoObj);                                                                                
                                                                   blnFlag=true;
                                                                   fnUnenrollAutoPay(driver,runManagerInfoObj);
                                                                   FnEnrollInCheckingSavingAutoPayClick(driver,runManagerInfoObj);
                                                                   Thread.sleep(10000);
                                                   }
                                                   else{
                                                                 repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is clicked", "Auto Pay Enabled icon is not clicked","FAIL",runManagerInfoObj);
                                                                 blnFlag=false;
                                                   }
                                                   }
                                                   else{
                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user",
                                                                  "Auto Pay Enabled icon is not displayed under Notifications Section to denote Auto Pay is enabled for the user","FAIL",runManagerInfoObj);
                                                   blnFlag=false;
                                                   }
                                                   }
                                                   }
   
    catch (Exception e)

                  {
                                  repfn.FnUpdateTestStepResHTML("Verify User is able to get the error message on entering invalid routing number",
                                                                  "User is not able to get the error message on entering invalid routing number due to some exception","FAIL",runManagerInfoObj);

                   blnFlag=false;
                                  System.err.println("Message : "+e.getMessage());
                                  System.err.println("Cause : "+e.getCause());
                                  
                  }
                  m1.put("STEPSTATUS", blnFlag);
                  return blnFlag;
}

public synchronized boolean FnClickAutoPay_Checking_Saving_Option(WebDriver driver,RunManagerInfo runManagerInfoObj){
	  try{
		  
		  driver.switchTo().frame("iFrameResizer0");
		  
		  // Checking/Saving Radio button
		  if(cnf.FnExplicitWait("XPATH", mbo.PayBill_Checking_Savings,driver)){
   			repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button is displayed under Select Payment Type option",
   					"Checking/Savings Radio button is displayed under Select Payment Type option","PASS",runManagerInfoObj);
   			WebElement PayBill_Checking_Savings=driver.findElement(By.xpath(mbo.PayBill_Checking_Savings));
   			if(cnf.JSClick(PayBill_Checking_Savings,driver)){
   				repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button under Select Payment Type option is clicked ",
       					"Checking/Savings Radio button under Select Payment Type option is clicked ","PASS",runManagerInfoObj);
   				blnFlag=true;
   			}
   			else{
   				repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button under Select Payment Type option is clicked ",
       					"Checking/Savings Radio button under Select Payment Type option is not clicked ","FAIL",runManagerInfoObj);
   				blnFlag=false;
   			}
   			
   		  }
   		  else{
   			repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button is displayed under Select Payment Type option",
   					"Checking/Savings Radio button is not displayed under Select Payment Type option","FAIL",runManagerInfoObj);
   			blnFlag=false;
   		  }
		  
		  // Auto Pay Payment Frequency Radio button
		  if(cnf.FnExplicitWait("XPATH", mbo.PaymentFrequency_AutoPay,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Auto Pay Radio button is displayed under Select Payment Frequency option",
						"Auto Pay Radio button is displayed under Select Payment Type option","PASS",runManagerInfoObj);
				WebElement PaymentFrequency_AutoPay=driver.findElement(By.xpath(mbo.PaymentFrequency_AutoPay));
				
				if(cnf.isElementExistOne("XPATH", mbo.PaymentFrequency_AutoPay_Selection,driver)){
					WebElement PaymentFrequency_AutoPay_Selection=driver.findElement(By.xpath(mbo.PaymentFrequency_AutoPay_Selection));
					String selectionState = PaymentFrequency_AutoPay_Selection.getAttribute("aria-checked");

					if(selectionState.equalsIgnoreCase("true")){
						repfn.FnUpdateTestStepResHTML("Verify Auto-Pay radio button is selected by default", 
								"Auto-Pay radio button is selected by default","PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
	     				if(cnf.JSClick(PaymentFrequency_AutoPay,driver)){
	     					repfn.FnUpdateTestStepResHTML("Verify Auto-Pay Radio button is clicked under Select Payment Frequency option",
	             					"Auto-Pay Radio button is clicked under Select Payment Type option","PASS",runManagerInfoObj);
	     					blnFlag=true;
	     				}
	     				else{
	     					repfn.FnUpdateTestStepResHTML("Verify Auto-Pay Radio button is clicked under Select Payment Frequency option",
	             					"Auto-Pay Radio button is not clicked under Select Payment Type option","FAIL",runManagerInfoObj);
	     					blnFlag=false;
	     				}
					}
				}
				else{
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Auto Pay Radio button is displayed under Select Payment Frequency option",
						"Auto Pay Radio button is not displayed under Select Payment Type option","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		  
		driver.switchTo().defaultContent();
		  
		  
	  }
	  
	  catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is able to verify and click Auto Pay Checking/Savings radio button",
					"User is not able to verify and click Auto Pay Checking/Savings radio button due to some exception","FAIL",runManagerInfoObj);

	      	 blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	  
}
public synchronized boolean fnAutoPayCheckingOrSavingsHelpIcon(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		driver.switchTo().frame("iFrameResizer0");
		 
		 if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.checkingSavingsAccount,driver))
		 {
			 blnFlag=true;
			 repfn.FnUpdateTestStepResHTML("Verify if there is a option for checking/savings is present", "Checking/Savings option is present", "PASS",runManagerInfoObj);
			 WebElement checkingsOrSavings=driver.findElement(By.id(mbo.checkingSavingsAccount));
			 if(cnf.JSClick(checkingsOrSavings,driver))
			 {
				 Thread.sleep(5000);
				 blnFlag=true;
				 repfn.FnUpdateTestStepResHTML("Verify if user has selected the checking/savings option", "User has selected the checking/savings option", "PASS",runManagerInfoObj);
				// WebElement routingNumber=driver.findElement(By.xpath("//input[@ name='routingNumber']"));
				 
				 if(cnf.FnExplicitWait("XPATH", mbo.routingNumberHelpIcon,driver))
				 {
					 blnFlag=true;
					 repfn.FnUpdateTestStepResHTML("Verify if help icon is displayed next to routing number field", "Help icon is displayed next to routing number field", "PASS",runManagerInfoObj);
					WebElement helpIconRouting=driver.findElement(By.xpath(mbo.routingNumberHelpIcon));
					if(cnf.JSClick(helpIconRouting,driver))
					{
						Thread.sleep(5000);
						 blnFlag=true;
						 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the help icon next to routing number field", "User has clicked the help icon next to routing number field", "PASS",runManagerInfoObj);
						WebElement modalDescripion=driver.findElement(By.id(mbo.modalDescription));
						 if(modalDescripion.getText().equalsIgnoreCase("Please enter your nine digit bank routing number."))
						 {
							 blnFlag=true;
							 repfn.FnUpdateTestStepResHTML("Verify if user is able to see modal pop up with message", "User is able to see modal pop up with message \"Please enter your nine digit bank routing number.\"", "PASS",runManagerInfoObj);
							
							 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.okButtonModal,driver))
							 {
								 blnFlag=true;
								 repfn.FnUpdateTestStepResHTML("Verify if user is able to see \"ok\" button in modal popup", "User is able to see \"ok\" button in modal popup", "PASS",runManagerInfoObj);
								 WebElement okButtonModal=driver.findElement(By.xpath(mbo.okButtonModal));
								 if(cnf.JSClick(okButtonModal,driver))
								 {
									 Thread.sleep(5000);
									 blnFlag=true;
									 repfn.FnUpdateTestStepResHTML("Verify if user has clicked \"ok\" button in modal popup", "User has clicked \"ok\" button in modal popup", "PASS",runManagerInfoObj);
								 }
								 else
								 {
									 blnFlag=true;
									 repfn.FnUpdateTestStepResHTML("Verify if user has clicked \"ok\" button in modal popup", "User has not clicked \"ok\" button in modal popup", "FAIL",runManagerInfoObj);
								 }
							 }
							 else
							 {
								 blnFlag=false;
								 repfn.FnUpdateTestStepResHTML("Verify if user is able to see \"ok\" button in modal popup", "User is not able to see \"ok\" button in modal popup", "FAIL",runManagerInfoObj);
							 }
						 
						 }
						 else
						 {
							 blnFlag=false;
							 repfn.FnUpdateTestStepResHTML("Verify if user is able to see modal pop up with message", "User is not able to see modal pop up with message \"Please enter your nine digit bank routing number.\"", "FAIL",runManagerInfoObj);
						 }
					}
					else
					{
						blnFlag=false;
						 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the help icon next to routing number field", "User has not clicked the help icon next to routing number field", "FAIL",runManagerInfoObj);
					}
				 }
				 else
				 {
					 blnFlag=false;
					 repfn.FnUpdateTestStepResHTML("Verify if help icon is displayed next to routing number field", "Help icon is not displayed next to routing number field", "FAIL",runManagerInfoObj);
				 }
				 if(cnf.FnExplicitWait("XPATH", mbo.accountNumberHelpIcon,driver))
				 {
					 blnFlag=true;
					 repfn.FnUpdateTestStepResHTML("Verify if help icon is displayed next to account number field", "Help icon is displayed next to account number field", "PASS",runManagerInfoObj);
					WebElement helpIconAccount=driver.findElement(By.xpath(mbo.accountNumberHelpIcon));
					if(cnf.JSClick(helpIconAccount,driver))
					{
						Thread.sleep(5000);
						 blnFlag=true;
						 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the help icon next to account number field", "User has clicked the help icon next to account number field", "PASS",runManagerInfoObj);
						WebElement modalDescripion=driver.findElement(By.id(mbo.modalDescription));
						 if(modalDescripion.getText().equalsIgnoreCase("Please enter your bank account number."))
						 {
							 blnFlag=true;
							 repfn.FnUpdateTestStepResHTML("Verify if user is able to see modal pop up with message", "User is able to see modal pop up with message \"Please enter your bank account number.\"", "PASS",runManagerInfoObj);
							
							 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.okButtonModal,driver))
							 {
								 blnFlag=true;
								 repfn.FnUpdateTestStepResHTML("Verify if user is able to see \"ok\" button in modal popup", "User is able to see \"ok\" button in modal popup", "PASS",runManagerInfoObj);
								 WebElement okButtonModal=driver.findElement(By.xpath(mbo.okButtonModal));
								 if(cnf.JSClick(okButtonModal,driver))
								 {
									 Thread.sleep(5000);
									 blnFlag=true;
									 repfn.FnUpdateTestStepResHTML("Verify if user has clicked \"ok\" button in modal popup", "User has clicked \"ok\" button in modal popup", "PASS",runManagerInfoObj);
								 }
								 else
								 {
									 blnFlag=true;
									 repfn.FnUpdateTestStepResHTML("Verify if user has clicked \"ok\" button in modal popup", "User has not clicked \"ok\" button in modal popup", "FAIL",runManagerInfoObj);
								 }
								 driver.switchTo().defaultContent();
							 }
							 else
							 {
								 blnFlag=false;
								 repfn.FnUpdateTestStepResHTML("Verify if user is able to see \"ok\" button in modal popup", "User is not able to see \"ok\" button in modal popup", "FAIL",runManagerInfoObj);
							 }
						 
						 }
						 else
						 {
							 blnFlag=false;
							 repfn.FnUpdateTestStepResHTML("Verify if user is able to see modal pop up with message", "User is not able to see modal pop up with message \"Please enter your bank account number.\"", "FAIL",runManagerInfoObj);
						 }
					}
					else
					{
						blnFlag=false;
						 repfn.FnUpdateTestStepResHTML("Verify if user has clicked the help icon next to account number field", "User has not clicked the help icon next to account number field", "FAIL",runManagerInfoObj);
					}
				 }
				 else
				 {
					 blnFlag=false;
					 repfn.FnUpdateTestStepResHTML("Verify if help icon is displayed next to account number field", "Help icon is not displayed next to account number field", "FAIL",runManagerInfoObj);
				 }
				
					}
					
			 else
			 {
				 blnFlag=false;
				 repfn.FnUpdateTestStepResHTML("Verify if user has selected the checking/savings option", "User has not selected the checking/savings option", "FAIL",runManagerInfoObj);
			 }
		 }
		 else
		 {
			 blnFlag=false;
			 repfn.FnUpdateTestStepResHTML("Verify if there is a option for checking/savings is present", "Checking/Savings option is not present", "FAIL",runManagerInfoObj);
		 }
	}
	catch (Exception e)

	 {		
		 blnFlag=false;
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());
	 }
	
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}
public synchronized boolean FnEnrollAutoPayClick(WebDriver driver,RunManagerInfo runManagerInfoObj){
    
    try{
                   
                    if(cnf.FnExplicitWait("XPATH", mbo.EnrollAutoPay,driver)){
                       repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is displayed under Notifications Section",
                                                                  "Enroll Auto Pay link is displayed under Notifications Section","PASS",runManagerInfoObj);
                        WebElement EnrollAutoPay=driver.findElement(By.xpath(mbo.EnrollAutoPay));
                        if(cnf.JSClick(EnrollAutoPay,driver)){
                        repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is clicked", "Enroll Auto Pay link is clicked","PASS",runManagerInfoObj);
                        Thread.sleep(10000);                                                                 
                        if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationOne,driver)){
                        WebElement payBill_PageVerification_1=driver.findElement(By.xpath(mbo.PageVerificationOne));
                        if(payBill_PageVerification_1.getAttribute("textContent").equalsIgnoreCase("Billing")){
                        if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationTwo,driver)){
                              WebElement payBill_PageVerification_2=driver.findElement(By.xpath(mbo.PageVerificationTwo));
                              if(payBill_PageVerification_2.getAttribute("textContent").equalsIgnoreCase("Pay Bill")){
                              	
                               repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is navigated to Pay Bill page","PASS",runManagerInfoObj);
                               blnFlag=true;
                               FnClickAutoPay_Credit_Debit_Option(driver,runManagerInfoObj);
                               FnEnterCardDetails(driver,runManagerInfoObj);
                               FnVerifyClickSaveAutoPayButton(driver,runManagerInfoObj);
                              }
                              else{
                              repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is not navigated to Pay Bill page","FAIL",runManagerInfoObj);
                              blnFlag=false;
                              }
                              }
                              }
                                }
                                   }
                               else{
                                    repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is clicked", "Enroll Auto Pay link is not clicked","FAIL",runManagerInfoObj);
                                    blnFlag=false;
                                   }
                               }
                               else{
                                   
                                    if(cnf.FnExplicitWait("XPATH", mbo.AutoPayEnabled,driver)){
                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user",
                                                                  "Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user","PASS",runManagerInfoObj);
                                                   WebElement AutoPayEnabled=driver.findElement(By.xpath(mbo.AutoPayEnabled));
                                                   if(cnf.JSClick(AutoPayEnabled,driver)){
                                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is clicked", "Auto Pay Enabled icon is clicked","PASS",runManagerInfoObj);                                                                                
                                                                   blnFlag=true;
                                                                   fnUnenrollAutoPay(driver,runManagerInfoObj);
                                                                   FnEnrollAutoPayClick(driver,runManagerInfoObj);
                                                                   //FnVerifyClickSupportLink();
                                                                 Thread.sleep(10000);
                                                   }
                                                   else{
                                                                 repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is clicked", "Auto Pay Enabled icon is not clicked","FAIL",runManagerInfoObj);
                                                                 blnFlag=false;
                                                   }
                                                   }
                                                   else{
                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user",
                                                                  "Auto Pay Enabled icon is not displayed under Notifications Section to denote Auto Pay is enabled for the user","FAIL",runManagerInfoObj);
                                                   blnFlag=false;
                                                   }
                                                   }
                                                   }
   
    catch (Exception e)

                  {
                                  repfn.FnUpdateTestStepResHTML("Verify User is able to get the error message on entering invalid routing number",
                                                                  "User is not able to get the error message on entering invalid routing number due to some exception","FAIL",runManagerInfoObj);

                   blnFlag=false;
                                  System.err.println("Message : "+e.getMessage());
                                  System.err.println("Cause : "+e.getCause());
                                  
                  }
                  m1.put("STEPSTATUS", blnFlag);
                  return blnFlag;
}

public synchronized boolean FnVerifyClickSaveAutoPayButton(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	  
	  try{
	                  
	                  driver.switchTo().frame("iFrameResizer0");
	                  Thread.sleep(2000);
						
	                  if(cnf.FnExplicitWait("XPATH", mbo.SaveAutoPayButton,driver)){
	                                  ((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.SaveAutoPayButton)));   
	                                  repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is displayed","PASS",runManagerInfoObj);
	                                  WebElement SaveAutoPayButton=driver.findElement(By.xpath(mbo.SaveAutoPayButton));
	                                  //cnf.ScrollToView(PayNowButton);
	                                  if(SaveAutoPayButton.isEnabled()){
	                                                  repfn.FnUpdateTestStepResHTML("Verify Save auto Pay button is enabled","Save auto Pay button is enabled.","PASS",runManagerInfoObj); 
	                                                  if(cnf.JSClick(SaveAutoPayButton,driver)){
	                                                  	 blnFlag=true;
	                                                   repfn.FnUpdateTestStepResHTML("Verify Save Auto pay button is clicked", "Save Auto pay button is clicked","PASS",runManagerInfoObj);                                                                
														 
														
															 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.supportLinkPayBillTC,driver))
										{
											blnFlag=true;
											 repfn.FnUpdateTestStepResHTML("Verify if  Support link is present in payment information page", " Support link is present in payment information page", "PASS",runManagerInfoObj);
											 WebElement supportLink=driver.findElement(By.xpath(mbo.supportLinkPayBillTC));
											 if(cnf.JSClick(supportLink,driver))
											 {
												 Thread.sleep(5000);
												 Alert alert=driver.switchTo().alert();
												 alert.accept();
												 blnFlag=true;
												 repfn.FnUpdateTestStepResHTML("Verify if  Support link is clicked in payment information page", " Support link is clicked in payment information page", "PASS",runManagerInfoObj);
												 if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.SupportPageLinkVerification,driver))
												 {
													 blnFlag=true;
													 repfn.FnUpdateTestStepResHTML("Verify if  user has navigated to support page", " User has navigated to support page", "PASS",runManagerInfoObj);
												 }
												 else
												 {
													 blnFlag=false;
													 repfn.FnUpdateTestStepResHTML("Verify if  user has navigated to support page", " User has not navigated to support page", "FAIL",runManagerInfoObj);
												 }
											 }
											 else
											 {
												 blnFlag=false;
												 repfn.FnUpdateTestStepResHTML("Verify if  Support link is clicked in payment information page", " Support link is not clicked in payment information page", "FAIL",runManagerInfoObj); 
											 }
													
										}
										else
										{
											blnFlag=false;
											 repfn.FnUpdateTestStepResHTML("Verify if  Support link is present in payment information page", " Support link is not present in payment information page", "FAIL",runManagerInfoObj);
										}
									 
														 
	                                                  }
	                                                  else{
	                                                   repfn.FnUpdateTestStepResHTML("Verify Save Auto pay button is clicked", "Save Auto pay button is not clicked","PASS",runManagerInfoObj);	
														 blnFlag=false;
	                                                  }																 
	                                                  blnFlag=false;
	                                  }
	                                  else{
	                                                  repfn.FnUpdateTestStepResHTML("Verify Save auto Pay button is enabled","Save auto Pay button is not enabled","PASS",runManagerInfoObj);
	                                                  blnFlag=true;
	                                  }
	                  }
	                  else{
	                                  repfn.FnUpdateTestStepResHTML("Verify Save auto Pay button is displayed","Save auto Pay button is not displayed","FAIL",runManagerInfoObj);
	                                  blnFlag=false;
	                  }
						
						
	                  
	                  
	                  driver.switchTo().defaultContent();
	                  
	  }
	  
	  catch (Exception e)

      {
                      repfn.FnUpdateTestStepResHTML("Verify User is able to get the error message on clicking support link",
                                                      "User is not able to get the error message on on clicking support link due to some exception","FAIL",runManagerInfoObj);

       blnFlag=false;
                      System.err.println("Message : "+e.getMessage());
                      System.err.println("Cause : "+e.getCause());
                      
      }
      m1.put("STEPSTATUS", blnFlag);
      return blnFlag;
}


public synchronized boolean FnVerifyRequiredFieldsIndicator(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	
	try{
		
		driver.switchTo().frame("iFrameResizer0");
		
		
		
		if(cnf.FnExplicitWait("XPATH", mbo.PayBill_CardNumber_RequiredText,driver)){
			WebElement PayBill_Credit_DebitCard_Text=driver.findElement(By.xpath(mbo.PayBill_Credit_DebitCard_Text));
			if(PayBill_Credit_DebitCard_Text.getAttribute("textContent").contains("Credit/Debit Card")){
				repfn.FnUpdateTestStepResHTML("Verify Card Number title is marked as required field (*) under Credit/Debit Card Option", 
						"Card Number title is marked as required field (*)","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
			repfn.FnUpdateTestStepResHTML("Verify Card Number title is marked as required field (*) under Credit/Debit Card Option", 
					"Card Number title is not marked as required field (*)","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
				
		}
		
		else{
				repfn.FnUpdateTestStepResHTML("Verify Credit/Debit Card title is displayed under Payment Information Header", 
						"Credit/Debit Card title is not displayed under Payment Information Header","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		
		if(cnf.FnExplicitWait("XPATH", mbo.PayBill_ExpirationDate_RequiredText,driver)){
			WebElement PayBill_ExpirationDate_Text=driver.findElement(By.xpath(mbo.PayBill_ExpirationDate_Text));
			if(PayBill_ExpirationDate_Text.getAttribute("textContent").contains("Expiration Date")){
				repfn.FnUpdateTestStepResHTML("Verify Expiration Date title is marked as required field(*) under Credit/Debit Card Option", 
						" Expiration Date title is marked as required field(*)","PASS",runManagerInfoObj);
				
			}
			
			else{
			repfn.FnUpdateTestStepResHTML("Verify Expiration Date title is marked as required field(*) under Credit/Debit Card Option", 
					" Expiration Date title is not marked as required field(*)","FAIL",runManagerInfoObj);
			blnFlag=false;
		}	
		
		}
		else{
				repfn.FnUpdateTestStepResHTML("Verify Expiration Date sub-heading is displayed under Credit/Debit Card Option", 
						"Expiration Date sub-heading is not displayed under Credit/Debit Card Option","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		
		
		
		
		
		driver.switchTo().defaultContent();

	}
	
	catch(Exception e)
	{
		blnFlag=false;
		repfn.FnUpdateTestStepResHTML("Verify User is able to verify UI on Pay Bill page", "User is not able to verify UI on Pay Bill page due to some exception", "FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}

public synchronized boolean FN_AssignPhoneLine(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		if(cnf.FnExplicitWait("XPATH", mbo.Assignee_Saved,driver)){
		List<WebElement> ManageLine_AssignmentList=driver.findElements(By.xpath(mbo.Assignee_Saved));


		if(ManageLine_AssignmentList.size()>0){
			repfn.FnUpdateTestStepResHTML("Verify any phone line listed in 'Manage Lines'section or not ","Phone lines listed in 'Manage Lines'section ","PASS",runManagerInfoObj);
			if(cnf.JSClick(ManageLine_AssignmentList.get(0),driver)){
			repfn.FnUpdateTestStepResHTML("Verify any phone line is clicked or not","Phone line is clicked"+ManageLine_AssignmentList.get(0).getText(),"PASS",runManagerInfoObj);

			if(cnf.FnExplicitWait("XPATH", mbo.UserDetailpopup,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Manage line Detail popup is displayed "," Manage line Detail popup is displayed","PASS",runManagerInfoObj);

				
				if(cnf.FnExplicitWait("XPATH", mbo.ManageLine_Editbutton,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed or not ","Edit button is  displayed","PASS",runManagerInfoObj);
					
					WebElement ManageLine_Editbutton=driver.findElement(By.xpath(mbo.ManageLine_Editbutton));
					if(cnf.ElementClick(ManageLine_Editbutton,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is clicked","PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("Xpath", mbo.RemoveAssignmentBtn,driver)){
					WebElement RemoveAssignmentBtn=driver.findElement(By.xpath(mbo.RemoveAssignmentBtn));				
						if(cnf.JSClick(RemoveAssignmentBtn,driver)){
						repfn.FnUpdateTestStepResHTML("Verify Remove Assignment option is displayed and clicked","Remove Assignment option is displayed and clicked as already assignment done","PASS",runManagerInfoObj);
						
						
						
						
						
						if(cnf.FnExplicitWait("XPATH", mbo.RemovePopup,driver)){
							repfn.FnUpdateTestStepResHTML("Verify RemovePopup is displayed "," RemovePopup is displayed","PASS",runManagerInfoObj);

							
							if(cnf.FnExplicitWait("XPATH", mbo.RemovePopupConfirmbtn,driver)){
								WebElement confirmbtn=driver.findElement(By.xpath(mbo.RemovePopupConfirmbtn));
								if(cnf.ElementClick(confirmbtn,driver)){
								repfn.FnUpdateTestStepResHTML("Verify confirm button is clicked ","confirm button is clicked","PASS",runManagerInfoObj);
								if(cnf.FnExplicitWait("XPATH", mbo.AssignLine,driver)){
									repfn.FnUpdateTestStepResHTML("Verify Assign Line button is displayed or not "," Assign Line button is displayed","PASS",runManagerInfoObj);
									WebElement AssignLine =driver.findElement(By.xpath(mbo.AssignLine));
									Thread.sleep(1000);
									if(cnf.JSClick(AssignLine,driver)){
										repfn.FnUpdateTestStepResHTML("Verify Assign Line button is clicked or not "," Assign Line button is clicked","PASS",runManagerInfoObj);
										Thread.sleep(4000);
										
										
										List<WebElement> AssignLineUsersList=driver.findElements(By.xpath(mbo.NewAssignment_Radiobuttonone));
										if(AssignLineUsersList.size()>0)
										{
											if(cnf.JSClick(AssignLineUsersList.get(0),driver)){
												repfn.FnUpdateTestStepResHTML("Verify Users is selected to assign line "," Users is selected to assign line","PASS",runManagerInfoObj);
												if(cnf.FnExplicitWait("XPATH", mbo.AssignLine_Savebtn,driver)){
													repfn.FnUpdateTestStepResHTML("Verify save button is enabled "," Save button is enabled","PASS",runManagerInfoObj);
													WebElement AssignLine_Savebtn =driver.findElement(By.xpath(mbo.AssignLine_Savebtn));
													if(cnf.JSClick(AssignLine_Savebtn,driver)){
														repfn.FnUpdateTestStepResHTML("Verify save button is clicked "," Save button is  clicked","PASS",runManagerInfoObj);
														WebElement AssignLine_Savebtn2 =driver.findElement(By.xpath(mbo.AssignLine_Savebtn2));
														if(cnf.JSClick(AssignLine_Savebtn2,driver)){
															repfn.FnUpdateTestStepResHTML("Verify Save button is clicked to save the changes for line "," Save button is clicked to save the changes for line","PASS",runManagerInfoObj);
															blnFlag=true;
													}else{
														repfn.FnUpdateTestStepResHTML("Verify save button is clicked to save the changes for line "," Save button is not clicked to save the changes for line","FAIL",runManagerInfoObj);
														blnFlag=false;
													}
													}
													else{
														repfn.FnUpdateTestStepResHTML("Verify save button is clicked "," Save button is not clicked","FAIL",runManagerInfoObj);
														blnFlag=false;
													}
												
												
												
											}else{
												repfn.FnUpdateTestStepResHTML("Verify save button is enabled "," Save button is not enabled","FAIL",runManagerInfoObj);
												blnFlag=false;
											}
										}else{
											repfn.FnUpdateTestStepResHTML("Verify Users is selected to assign line "," Users is not selected to assign line","FAIL",runManagerInfoObj);
											blnFlag=false;
										}
										}
										
										else{
											repfn.FnUpdateTestStepResHTML("Verify Users to Assign Line are present or not "," Users to Assign Line are not present","FAIL",runManagerInfoObj);
											blnFlag=false;
											
											//code in case no user present to assign a line and go back to manage lines section
											WebElement No_User_cancel=driver.findElement(By.xpath(mbo.No_User_cancel));
											cnf.JSClick(No_User_cancel,driver);
											Thread.sleep(1000);
											WebElement No_User_cancel_cancel=driver.findElement(By.xpath(mbo.No_User_cancel_cancel));
											cnf.JSClick(No_User_cancel_cancel,driver);
											
											WebElement Cancel_confirmbtn=driver.findElement(By.xpath(mbo.Cancel_confirmbtn));
											cnf.JSClick(Cancel_confirmbtn,driver);
											driver.navigate().refresh();
											
										}
									}else{
										repfn.FnUpdateTestStepResHTML("Verify Assign Line button is clicked or not "," Assign Line button is not clicked","FAIL",runManagerInfoObj);
										blnFlag=false;
									}
							

							}else{
								repfn.FnUpdateTestStepResHTML("Verify Assign Line button is displayed or not "," Assign Line button is not displayed","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
								}
							}
							else{
								repfn.FnUpdateTestStepResHTML("Verify confirm button is clicked ","confirm button is not clicked","FAIL",runManagerInfoObj);
								blnFlag=false;
							}
						}
						else{
							repfn.FnUpdateTestStepResHTML("Verify  RemovePopup is displayed "," RemovePopup is not displayed","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					

						
					
						}else{
							repfn.FnUpdateTestStepResHTML("Verify Remove Assignment option is clicked or not","Remove Assignment option is not clicked","FAIL",runManagerInfoObj);
							blnFlag=false;
						}
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Remove Assignment option is displayed","Remove Assignment option is not  displayed","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
					
					
					
					blnFlag=true;
					}else{
						repfn.FnUpdateTestStepResHTML("Verify Edit button is clicked ","Edit button is not clicked","FAIL",runManagerInfoObj);
						blnFlag=false;
					}

				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Edit button is displayed or not ","Edit button is not displayed","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify  ManageDetailpopup is displayed "," ManageDetailpopup is not displayed","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			}else{
				repfn.FnUpdateTestStepResHTML("Verify any phone line is clicked or not","Phone line is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify any phone line listed in 'Manage Lines'section or not ","No phone line listed in 'Manage Lines'section ","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		}else{
			repfn.FnUpdateTestStepResHTML("Verify phone line list displayed in 'Manage Lines'section or not ","Phone line list is not getting displayed in 'Manage Lines'section ","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}
	catch(Exception e)
	{
		repfn.FnUpdateTestStepResHTML("Verify ManageLine_AssignmentList is Displayed and clicked","ManageLine_AssignmentList is not  Displayed and clicked due to some exception","FAIL",runManagerInfoObj);


		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	return blnFlag;
}


public synchronized boolean FN_ModifyChanges_CancelClick(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
try
{
if(cnf.FnExplicitWait("XPATH", mbo.Modify_Cancel,driver))
{
	repfn.FnUpdateTestStepResHTML("Verify if Cancel button is present", "Cancel button is present", "PASS",runManagerInfoObj);
	WebElement Close=driver.findElement(By.xpath(mbo.Modify_Cancel));
	if(cnf.JSClick(Close,driver))
	{
		repfn.FnUpdateTestStepResHTML("Click on the Cancel button", "Cancel button is clicked", "PASS",runManagerInfoObj);
		blnFlag=true;
	}
	else
	{
		repfn.FnUpdateTestStepResHTML("Click on the Cancel button", "Cancel button is not clickable", "FAIL",runManagerInfoObj);
		blnFlag=false;	
	}
}
else
{
	repfn.FnUpdateTestStepResHTML("Verify if Cancel button is present", "Cancel button is not present", "FAIL",runManagerInfoObj);
	blnFlag=false;
}
}
catch(Exception e)
{
	
}
m1.put("STEPSTATUS", blnFlag);
return blnFlag;
}
public synchronized boolean FnVerifyNewTabOpenedOnSupportClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

	 try{
		 
		 String url = driver.getCurrentUrl();
		 
		 if(url.contains("dev2")){
			 if(cnf.FnExplicitWait("XPATH", mbo.Support_Link_Dev,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Support link is displayed", "Support link is displayed","PASS",runManagerInfoObj);
				 WebElement Support_Link=driver.findElement(By.xpath(mbo.Support_Link_Dev));
				 //String oldTab = driver.getWindowHandle();
				 ArrayList<String> oldTab = new ArrayList<String>(driver.getWindowHandles());
				 cnf.ScrollToView(Support_Link,driver);
				 if(cnf.JSClick(Support_Link,driver)){
					 repfn.FnUpdateTestStepResHTML("Verify Support Link is clicked", "Support Link is clicked","PASS",runManagerInfoObj);
					 blnFlag=true;
					 
					 Thread.sleep(5000);

					 ArrayList<String> newTab = new ArrayList<String>(driver.getWindowHandles());
					 //System.out.println(newTab.size());

					 if(newTab.size() == oldTab.size()){
						 repfn.FnUpdateTestStepResHTML("Verify Support Page is opened in same tab", "Support Page is opened in same tab","PASS",runManagerInfoObj);
						 blnFlag=true;
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify Support Page is opened in same tab", "Support Page is opened in new tab","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }

					 
					 if(cnf.FnExplicitWait("XPATH", mbo.SupportPageVerification,driver)){
						 repfn.FnUpdateTestStepResHTML("Verify User is on Support Page", "User is on Support Page","PASS",runManagerInfoObj);
						 blnFlag=true;
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify User is on Support Page", "User is not on Support Page","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }

				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Support Link is clicked", "Support Link is not clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }

			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Support link is displayed", "Support link is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }
		 
		 else if(url.contains("engprod")){
			 if(cnf.FnExplicitWait("XPATH", mbo.SupportBtnLink,driver)){
				 repfn.FnUpdateTestStepResHTML("Verify Support link is displayed", "Support link is displayed","PASS",runManagerInfoObj);
				 WebElement Support_Link=driver.findElement(By.xpath(mbo.SupportBtnLink));
				 //String oldTab = driver.getWindowHandle();
				
				// cnf.ScrollToView(Support_Link);
				 if(cnf.JSClick(Support_Link,driver)){
					 ArrayList<String> oldTab = new ArrayList<String>(driver.getWindowHandles());
					 repfn.FnUpdateTestStepResHTML("Verify Support Link is clicked", "Support Link is clicked","PASS",runManagerInfoObj);
					 blnFlag=true;
					 
					 Thread.sleep(5000);

					 ArrayList<String> newTab = new ArrayList<String>(driver.getWindowHandles());
					 //System.out.println(newTab.size());

					 if(newTab.size() == oldTab.size()){
						 repfn.FnUpdateTestStepResHTML("Verify Support Page is opened in same tab", "Support Page is opened in same tab","PASS",runManagerInfoObj);
						 blnFlag=true;
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify Support Page is opened in same tab", "Support Page is opened in new tab","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }

					 
					 if(cnf.FnExplicitWait("XPATH", mbo.SupportPageVerification,driver)){
						 repfn.FnUpdateTestStepResHTML("Verify User is on Support Page", "User is on Support Page","PASS",runManagerInfoObj);
						 blnFlag=true;
					 }
					 else{
						 repfn.FnUpdateTestStepResHTML("Verify User is on Support Page", "User is not on Support Page","FAIL",runManagerInfoObj);
						 blnFlag=false;
					 }

				 }
				 else{
					 repfn.FnUpdateTestStepResHTML("Verify Support Link is clicked", "Support Link is not clicked","FAIL",runManagerInfoObj);
					 blnFlag=false;
				 }

			 }
			 else{
				 repfn.FnUpdateTestStepResHTML("Verify Support link is displayed", "Support link is not displayed","FAIL",runManagerInfoObj);
				 blnFlag=false;
			 }
		 }


	 }

	 catch(Exception e)
	 {
		 repfn.FnUpdateTestStepResHTML("Verify Support Link is opening in same tab or not", "Support Link is opening in new tab due to some exception.","FAIL",runManagerInfoObj);
		 blnFlag=false;
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());

	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}

public synchronized boolean FnClickEnrollInAutoPaylink(WebDriver driver,RunManagerInfo runManagerInfoObj){
    
    try{
                   
                    if(cnf.FnExplicitWait("XPATH", mbo.EnrollAutoPay,driver)){
                       repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is displayed under Notifications Section",
                                                                  "Enroll Auto Pay link is displayed under Notifications Section","PASS",runManagerInfoObj);
                        WebElement EnrollAutoPay=driver.findElement(By.xpath(mbo.EnrollAutoPay));
                        if(cnf.JSClick(EnrollAutoPay,driver)){
                        repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is clicked", "Enroll Auto Pay link is clicked","PASS",runManagerInfoObj);
                        Thread.sleep(10000);                                                                 
                        if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationOne,driver)){
                        WebElement payBill_PageVerification_1=driver.findElement(By.xpath(mbo.PageVerificationOne));
                        if(payBill_PageVerification_1.getAttribute("textContent").equalsIgnoreCase("Billing")){
                        if(cnf.FnExplicitWait("XPATH", mbo.PageVerificationTwo,driver)){
                              WebElement payBill_PageVerification_2=driver.findElement(By.xpath(mbo.PageVerificationTwo));
                              if(payBill_PageVerification_2.getAttribute("textContent").equalsIgnoreCase("Pay Bill")){
                              	
                               repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is navigated to Pay Bill page","PASS",runManagerInfoObj);
                               blnFlag=true;
                               FnClickAutoPay_Credit_Debit_Option(driver,runManagerInfoObj);
                               FnEnterCardDetails(driver,runManagerInfoObj);
                               FnVerifySaveAutoPayButton(driver,runManagerInfoObj);
                               FnClickEnrollInAutoPaylink(driver,runManagerInfoObj);
                              
                              }
                              else{
                              repfn.FnUpdateTestStepResHTML("Verify User is navigated to Pay Bill page","User is not navigated to Pay Bill page","FAIL",runManagerInfoObj);
                              blnFlag=false;
                              }
                              }
                              }
                                }
                                   }
                               else{
                                    repfn.FnUpdateTestStepResHTML("Verify Enroll Auto Pay link is clicked", "Enroll Auto Pay link is not clicked","FAIL",runManagerInfoObj);
                                    blnFlag=false;
                                   }
                               }
                               else{
                                   if(cnf.FnExplicitWait("XPATH", mbo.AutoPayOn_NextPayment_Text,driver)){
			                        WebElement AutoPayOn_NextPayment_Text=driver.findElement(By.xpath(mbo.AutoPayOn_NextPayment_Text));
			                        repfn.FnUpdateTestStepResHTML("Verify AutoPayON and _NextPayment Text is available","AutoPayON and _NextPayment Text is available"+ AutoPayOn_NextPayment_Text.getText(),"PASS",runManagerInfoObj);
                                          if(cnf.FnExplicitWait("XPATH", mbo.AutoPayEnabled,driver)){
                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user",
                                                                  "Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user","PASS",runManagerInfoObj);
                                                   WebElement AutoPayEnabled=driver.findElement(By.xpath(mbo.AutoPayEnabled));
                                                   if(cnf.JSClick(AutoPayEnabled,driver)){
                                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is clicked", "Auto Pay Enabled icon is clicked","PASS",runManagerInfoObj);                                                                                
                                                                   blnFlag=true;
																 
                                                                   Thread.sleep(10000);
                                                   }
                                                   else{
                                                                 repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is clicked", "Auto Pay Enabled icon is not clicked","FAIL",runManagerInfoObj);
                                                                 blnFlag=false;
                                                   }
                                                   }
                                                   else{
                                                   repfn.FnUpdateTestStepResHTML("Verify Auto Pay Enabled icon is displayed under Notifications Section to denote Auto Pay is enabled for the user",
                                                                  "Auto Pay Enabled icon is not displayed under Notifications Section to denote Auto Pay is enabled for the user","FAIL",runManagerInfoObj);
                                                   blnFlag=false;
                                                   }
                                                   }
												   
												   else{
			                                       repfn.FnUpdateTestStepResHTML("Verify AutoPayON and _NextPayment Text is available","AutoPayON and _NextPayment Text is not  available","FAIL",runManagerInfoObj);
			                                       blnFlag=false;
		                                           }
                                                   }
												   }
   
                         catch (Exception e)

                  {
                                  repfn.FnUpdateTestStepResHTML("Verify User is able to get the error message on entering invalid routing number",
                                                                  "User is not able to get the error message on entering invalid routing number due to some exception","FAIL",runManagerInfoObj);

                   blnFlag=false;
                                  System.err.println("Message : "+e.getMessage());
                                  System.err.println("Cause : "+e.getCause());
                                  
                  }
                  m1.put("STEPSTATUS", blnFlag);
                  return blnFlag;
}

public synchronized boolean VerifyAutoPayBillScreen(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		driver.switchTo().frame("iFrameResizer0");
		if(cnf.FnExplicitWait("XPATH",mbo.CurrentBillSection,driver))
		{
			repfn.FnUpdateTestStepResHTML("Verify the presence of current bill section in pay bill screen", "Current bill section is present in pay bill screen", "PASS",runManagerInfoObj);
			
         if(cnf.FnExplicitWait("XPATH",mbo.PayBillOption,driver)){
		 WebElement PayBillOption=driver.findElement(By.xpath(mbo.PayBillOption));
			if(PayBillOption.getAttribute("textContent").contains("Pay Bill Options")){
				repfn.FnUpdateTestStepResHTML("Verify the presence of pay Bill Options title in pay bill screen", "pay Bill Options title is present in pay bill screen","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify the presence of pay Bill Options title in pay bill screen", "pay Bill Options title is not present in pay bill screen","FAIL",runManagerInfoObj);
				blnFlag=false;
			}	
		}			
		else{
			repfn.FnUpdateTestStepResHTML("Verify the presence of pay Bill Options title in pay bill screen", "pay Bill Options title is not present in pay bill screen","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
		 if(cnf.FnExplicitWait("XPATH",mbo.PayBill_CurrentBillAmt,driver))
		  {
		       WebElement PayBill_CurrentBillAmt=driver.findElement(By.xpath(mbo.PayBill_CurrentBillAmt));
               String amount=PayBill_CurrentBillAmt.getText();
			   repfn.FnUpdateTestStepResHTML("Verify Current bill amount is displayed or not","Current bill amount is displayed as: "+amount,"PASS",runManagerInfoObj);
			   if(cnf.verifyAmountFormat(amount)){
				repfn.FnUpdateTestStepResHTML("Verify Current bill amount is displayed in format $X,XXX.XX","Current bill Amount is displayed as per format:"+amount,"PASS",runManagerInfoObj);
              blnFlag=true;
			  }
			  else{
					repfn.FnUpdateTestStepResHTML("Verify Current bill amount is displayed in format $X,XXX.XX","Current bill Amount is not displayed as:"+amount,"FAIL",runManagerInfoObj);
					blnFlag=false;
				}
		  }
		  else
		  {
			  repfn.FnUpdateTestStepResHTML("Verify the presence of current bill amount in pay bill screen", "Current Bill amount is not present in pay bill screen", "FAIL",runManagerInfoObj);
            blnFlag=false;
		  }
		  
		  if(cnf.FnExplicitWait("XPATH",mbo.PayBill_StatementTitle,driver)){
		 WebElement PayBill_StatementTitle=driver.findElement(By.xpath(mbo.PayBill_StatementTitle));
			if(PayBill_StatementTitle.getAttribute("textContent").contains("Statement:")){
				repfn.FnUpdateTestStepResHTML("Verify the presence of Statement title in pay bill screen", "Statement title is present in pay bill screen","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify the presence of Statement title in pay bill screen", "Statement title is not present in pay bill screen","FAIL",runManagerInfoObj);
				blnFlag=false;
			}	
		}			
		else{
			repfn.FnUpdateTestStepResHTML("Verify the presence of Statement title in pay bill screen", "Statement title is not present in pay bill screen","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
		if(cnf.FnExplicitWait("XPATH",mbo.PayBill_StatementDate,driver))
		  {
		      repfn.FnUpdateTestStepResHTML("Verify statement date is displayed in pay bill screen","Statement date is displayed in pay bill screen","PASS",runManagerInfoObj);
				WebElement PayBill_StatementDate=driver.findElement(By.xpath(mbo.PayBill_StatementDate));
				String date=PayBill_StatementDate.getText();
				String date5[]=date.split("-");
				String date1=date5[0];
				if(cnf.isValidFormat("mm/dd/yy",date1)){
				repfn.FnUpdateTestStepResHTML("Verify the presence of statement date in pay bill screen in format mm/dd/yy", "Statement date is present as per the format in pay bill screen", "PASS",runManagerInfoObj);
              blnFlag=true;
			  }
			  else{
				repfn.FnUpdateTestStepResHTML("Verify the presence of statement date in pay bill screen in format mm/dd/yy","Statement date is not displayed as per the format in pay bill screen","FAIL",runManagerInfoObj);
				blnFlag=false;
			}			
		  }
		  else
		  {
			  repfn.FnUpdateTestStepResHTML("erify statement date is displayed in pay bill screen","Statement date is not present in pay bill screen", "FAIL",runManagerInfoObj);
            blnFlag=false;
		  }
		
		if(cnf.FnExplicitWait("XPATH",mbo.PayBill_DueByTitle,driver)){
		 WebElement PayBill_DueByTitle=driver.findElement(By.xpath(mbo.PayBill_DueByTitle));
			if(PayBill_DueByTitle.getAttribute("textContent").contains("Due By")){
				repfn.FnUpdateTestStepResHTML("Verify the presence of Due By title in pay bill screen", "Due By title is present in pay bill screen","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify the presence of Due By title in pay bill screen", "Due By title is not present in pay bill screen","FAIL",runManagerInfoObj);
				blnFlag=false;
			}	
		}			
		else{
			repfn.FnUpdateTestStepResHTML("Verify the presence of Due By title in pay bill screen", "Due By title is not present in pay bill screen","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
		if(cnf.FnExplicitWait("XPATH",mbo.PayBill_DueByDateValue,driver))		  
		  {
		       repfn.FnUpdateTestStepResHTML("Verify Due by date is displayed in pay bill screen","Due by date is present in pay bill screen","PASS",runManagerInfoObj);
		      WebElement PayBill_DueByDateValue=driver.findElement(By.xpath(mbo.PayBill_DueByDateValue));
				String date2=PayBill_DueByDateValue.getText();
				//String date4[]=date2.split("-");
				//String date3=date4[0];
				if(cnf.isValidFormat("mm/dd/yy",date2)){
				repfn.FnUpdateTestStepResHTML("Verify the presence of Due by date in the format mm/dd/yy in pay bill screen", "Due by date is present in pay bill screen as per the format:"+date2, "PASS",runManagerInfoObj);
              blnFlag=true;
			  }
			  else
		  {
			  repfn.FnUpdateTestStepResHTML("Verify the presence of Due by date in the format mm/dd/yy in pay bill screen", "Due by date is not present in pay bill screen as per the format", "FAIL",runManagerInfoObj);
            blnFlag=false;
		  } 
		  }
		  else
		  {
			  repfn.FnUpdateTestStepResHTML("Verify Due by date is displayed in pay bill screen","Due by date is not present in pay bill screen", "FAIL",runManagerInfoObj);
            blnFlag=false;
		  }
		  
		  if(cnf.FnExplicitWait("XPATH",mbo.PayBill_AccNumTitle,driver)){
		 WebElement PayBill_AccNumTitle=driver.findElement(By.xpath(mbo.PayBill_AccNumTitle));
			if(PayBill_AccNumTitle.getAttribute("textContent").contains("Account Number:")){
				repfn.FnUpdateTestStepResHTML("Verify the presence of  Account Number title in pay bill screen", "Account Number title is present in pay bill screen","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify the presence of Account Number title in pay bill screen", "Account Number title is not present in pay bill screen","FAIL",runManagerInfoObj);
				blnFlag=false;
			}	
		}			
		else{
			repfn.FnUpdateTestStepResHTML("Verify the presence of Account Number title in pay bill screen", "Account Number title is not present in pay bill screen","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
		
		 if(cnf.FnExplicitWait("XPATH",mbo.PayBill_AccNum,driver))
		  {
				repfn.FnUpdateTestStepResHTML("Verify the presence of Account number in pay bill screen", "Account number is present in pay bill screen", "PASS",runManagerInfoObj);
              blnFlag=true;
		  }
		  else
		  {
				repfn.FnUpdateTestStepResHTML("Verify the presence of Account number in pay bill screen", "Account number is not present in pay bill screen", "FAIL",runManagerInfoObj);
             blnFlag=false;
		  }
		  
		 if(cnf.FnExplicitlessWait_untilClickable("XPATH", "//a[@ng-click='navigate(URL.currentBill)']",driver))
			{
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to see details link in pay bill screen", "User is able to see details link in pay bill screen", "PASS",runManagerInfoObj);
			}				
			else
			{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Verify if user is able to see details link in pay bill screen", "User is not able to see details link in pay bill screen", "FAIL",runManagerInfoObj);
			}
            
			
		if(cnf.FnExplicitlessWait_untilClickable("XPATH", mbo.AutoPayEnabledIcon,driver))
			{
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify if auto pay icon is present for the user in the Pay bill screen", "Auto pay icon is present for the user in the Pay bill screen", "PASS",runManagerInfoObj);
			}
            else{
                blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Verify if auto pay icon is present for the user in the Pay bill screen", "Auto pay icon is not present for the user in the Pay bill screen", "FAIL",runManagerInfoObj);	
             }

			 
		if(cnf.FnExplicitWait("XPATH", mbo.AutoPayOn,driver))
			{
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify if verbiage \"Auto-Pay On\" is present along with auto pay icon", "Verbiage \"Auto-Pay On\" is present along with auto pay icon", "PASS",runManagerInfoObj);
			}
			else
			{
			blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if verbiage \"Auto-Pay On\" is present along with auto pay icon", "Verbiage \"Auto-Pay On\" is not present along with auto pay icon", "FAIL",runManagerInfoObj);	
			}	
										
							
		if(cnf.FnExplicitWait("XPATH", mbo.NextPaymentScheduled,driver))
			{
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify if verbiage \"Next Payment Scheduled\" is present along with auto pay icon", "Verbiage \"Next Payment Scheduled\" is present along with auto pay icon", "PASS",runManagerInfoObj);	
			}
			else
			{
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify if verbiage \"Next Payment Scheduled\" is present along with auto pay icon", "Verbiage \"Next Payment Scheduled\" is present along with auto pay icon", "PASS",runManagerInfoObj);
			}	
		if(cnf.FnExplicitWait("XPATH", mbo.AutoPaySettings,driver))
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if Auto Pay settings Title is present in the pay bill screen", "Auto Pay settings Title is present in the pay bill screen", "PASS",runManagerInfoObj);	
		}
		else
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if Auto Pay settings Title is present in the pay bill screen", "Auto Pay settings Title is not present in the pay bill screen", "FAIL",runManagerInfoObj);
		}	
		if(cnf.FnExplicitWait("XPATH",mbo.PayBill_PaymentTypeTitle,driver)){
			 WebElement PayBill_PaymentTypeTitle=driver.findElement(By.xpath(mbo.PayBill_PaymentTypeTitle));
				if(PayBill_PaymentTypeTitle.getAttribute("textContent").contains("Payment Type")){
					repfn.FnUpdateTestStepResHTML("Verify the presence of  Payment Type title in pay bill screen", "Payment Type title is present in pay bill screen","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify the presence of Payment Type title in pay bill screen", "Payment Type title is not present in pay bill screen","FAIL",runManagerInfoObj);
					blnFlag=false;
				}	
			}			
			else{
				repfn.FnUpdateTestStepResHTML("Verify the presence of Payment Type title in pay bill screen", "Payment Type title is not present in pay bill screen","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			
			 if(cnf.FnExplicitWait("XPATH",mbo.PayBill_PaymentType,driver))
			  {
					repfn.FnUpdateTestStepResHTML("Verify the presence of PaymentType in pay bill screen", "PaymentType is present in pay bill screen", "PASS",runManagerInfoObj);
	              blnFlag=true;
				 WebElement PayBill_PaymentType=driver.findElement(By.xpath(mbo.PayBill_PaymentType));
				 if(PayBill_PaymentType.getAttribute("textContent").contains("Visa")){
				 repfn.FnUpdateTestStepResHTML("Verify the Payment type is Visa in Verify payment info screen","Payment type is Visa in Verify payment info screen","PASS",runManagerInfoObj);
		       blnFlag=true;
		       
			  }
			  else{
			  repfn.FnUpdateTestStepResHTML("Verify the Payment type is Visa in Verify payment info screen","Payment type is not Visa in Verify payment info screen","PASS",runManagerInfoObj);
		       blnFlag=true;
			  }
			  }
			  else
			  {
					repfn.FnUpdateTestStepResHTML("Verify the presence of PaymentType in pay bill screen", "PaymentType is not present in pay bill screen", "FAIL",runManagerInfoObj);
	             blnFlag=false;
			  }
			  
			  if(cnf.FnExplicitWait("XPATH",mbo.PayBill_AccountNumberTitle,driver)){
			 WebElement PayBill_AccountNumberTitle=driver.findElement(By.xpath(mbo.PayBill_AccountNumberTitle));
			 				if(PayBill_AccountNumberTitle.getAttribute("textContent").contains("Account Number")){
					repfn.FnUpdateTestStepResHTML("Verify the presence of  Account Number title in pay bill screen", "Account Number title is present in pay bill screen","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify the presence of Account Number title in pay bill screen", "Account Number title is not present in pay bill screen","FAIL",runManagerInfoObj);
					blnFlag=false;
				}	
			}			
			else{
				repfn.FnUpdateTestStepResHTML("Verify the presence of Account Number title in pay bill screen", "Account Number title is not present in pay bill screen","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			
			if(cnf.FnExplicitWait("XPATH",mbo.PayBill_AccountNumber,driver))
			  {
					repfn.FnUpdateTestStepResHTML("Verify the presence of Account Number in pay bill screen", "Account Number is present in pay bill screen", "PASS",runManagerInfoObj);
	              blnFlag=true;
				  WebElement PayBill_AccountNumber=driver.findElement(By.xpath(mbo.PayBill_AccountNumber));
				 if(Pattern.matches("\\*{12}([0-9]{4})",PayBill_AccountNumber.getText())){
				 //if(PayBill_AccountNumber.getAttribute("textContent").contains("************")){
					repfn.FnUpdateTestStepResHTML("Verify if Account number is masked and only 4 characters are displayed","Account number is masked and only 4 characters are displayed as:"+PayBill_AccountNumber.getText(),"PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify if Account number is masked and only 4 characters are displayed","Account number is not masked and not only 4 characters are displayed:"+PayBill_AccountNumber.getText(),"FAIL",runManagerInfoObj);
					blnFlag=false;
				}	
			  }
			  else
			  {
					repfn.FnUpdateTestStepResHTML("Verify the presence of Account Number in pay bill screen", "Account Number is not present in pay bill screen", "FAIL",runManagerInfoObj);
	             blnFlag=false;
			  }
			  
			  if(cnf.FnExplicitWait("XPATH",mbo.PayBill_ExpirationDateTitle,driver)){
			 WebElement PayBill_ExpirationDateTitle=driver.findElement(By.xpath(mbo.PayBill_ExpirationDateTitle));
				if(PayBill_ExpirationDateTitle.getAttribute("textContent").contains("Expiration Date")){
					repfn.FnUpdateTestStepResHTML("Verify the presence of  Expiration Date title in pay bill screen", "Expiration Date title is present in pay bill screen","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify the presence of Expiration Date title in pay bill screen", "Expiration Date title is not present in pay bill screen","FAIL",runManagerInfoObj);
					blnFlag=false;
				}	
			}			
			else{
				repfn.FnUpdateTestStepResHTML("Verify the presence of Expiration Date title in pay bill screen", "Expiration Date title is not present in pay bill screen","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			
			if(cnf.FnExplicitWait("XPATH",mbo.PayBill_ExpirationDate,driver))
			  {
					repfn.FnUpdateTestStepResHTML("Verify the presence of Expiration Date in pay bill screen", "Expiration Date is present in pay bill screen", "PASS",runManagerInfoObj);
	              blnFlag=true;
	              WebElement PayBill_ExpirationDate=driver.findElement(By.xpath(mbo.PayBill_ExpirationDate));
					String date2=PayBill_ExpirationDate.getText();
					if(cnf.isValidFormat("mm/yy",date2)){
					repfn.FnUpdateTestStepResHTML("Verify the presence of Expiration Date in the format MM/YY in pay bill screen", "Expiration Date is present in pay bill screen as per the format:"+date2, "PASS",runManagerInfoObj);
	              blnFlag=true;
				  }
				  else
			  {
				  repfn.FnUpdateTestStepResHTML("Verify the presence of Expiration Date date in the format MM/YY in pay bill screen", "Expiration Date is not present in pay bill screen as per the format", "FAIL",runManagerInfoObj);
	            blnFlag=false;
			  } 
			  }
			  else
			  {
					repfn.FnUpdateTestStepResHTML("Verify the presence of Expiration Date in pay bill screen", "Expiration Date is not present in pay bill screen", "FAIL",runManagerInfoObj);
	             blnFlag=false;
			  }
	 
		}
		else
		{
			repfn.FnUpdateTestStepResHTML("Verify the presence of current bill section in pay bill screen", "Current bill section is not present in pay bill screen", "FAIL",runManagerInfoObj);
          blnFlag=false;
		}
		driver.switchTo().defaultContent();
		

	}
	  catch (Exception e)

	    {
	           repfn.FnUpdateTestStepResHTML("Verify User is in current bill section","User is not in current bill section due to some exception ","FAIL",runManagerInfoObj);


	           System.err.println("Message : "+e.getMessage());
	           System.err.println("Cause : "+e.getCause());
	           blnFlag=false;
	    }
	    m1.put("STEPSTATUS", blnFlag);
	    return blnFlag;
}




public synchronized boolean FN_BackClick(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	try{

		if(cnf.FnExplicitWait("XPATH", mbo.UserDetail_Backbtn,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Back link is displayed in User Details pop-up","Back link is displayed in User Details pop-up","PASS",runManagerInfoObj);
			WebElement Backbtn=driver.findElement(By.xpath(mbo.UserDetail_Backbtn));
			if(cnf.JSClick(Backbtn,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Back link is clicked","Back link is clicked","PASS",runManagerInfoObj);
				//Need To remove once appln is stable
				driver.navigate().refresh();
				Thread.sleep(5000);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Back link is clicked","Back link is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Back link is displayed in User Details pop-up","Back link is not displayed in User Details pop-up","FAIL",runManagerInfoObj);
			blnFlag=false;
		}

	
	}

	catch (Exception e)

	{
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		repfn.FnUpdateTestStepResHTML("Verifying if the user is able to go back to the Manage Lines list after selecting a phone line ","The user is not able to go back to the Manage Lines list after selecting a phone line due to some exception","FAIL",runManagerInfoObj);
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}



public synchronized boolean TypeOfCreditCardUsed(WebDriver driver,RunManagerInfo runManagerInfoObj)
{

	try
	{
		driver.switchTo().frame("iFrameResizer0");
		if(cnf.FnExplicitWait("XPATH",mbo.PayBill_PaymentInfo,driver))
	    {
	   // cnf.ScrollToView(driver.findElement(By.xpath(mbo.PayBill_PaymentInfo)));
		repfn.FnUpdateTestStepResHTML("Verify the presence of Payment info section for AutoPay CreditDebit", "Payment info section for OTP-CreditDebit is present", "PASS",runManagerInfoObj);
	    VisaCreditCardType(driver,runManagerInfoObj);
	    MasterCreditCardType(driver,runManagerInfoObj);
	    DiscoverCreditCardType(driver,runManagerInfoObj);
		AmexCreditCardType(driver,runManagerInfoObj);
	    if(cnf.isAlertPresent())
	    {
	      AlertAccept(driver,runManagerInfoObj);    
	    }
	    else
	    {
	    	System.out.println("No alert is present");
	    }
		blnFlag=true;
	    }		

		else
		{
		    repfn.FnUpdateTestStepResHTML("Verify the presence of Payment info section for AutoPay CreditDebit", "Payment info section for OTP-CreditDebit is not present", "FAIL",runManagerInfoObj);
          blnFlag=false;
		}
		driver.switchTo().defaultContent();
	}
	catch (Exception e)

	  {
	         repfn.FnUpdateTestStepResHTML("Verify User is in Payment info section","User is not in payment info section due to some exception ","FAIL",runManagerInfoObj);


	         System.err.println("Message : "+e.getMessage());
	         System.err.println("Cause : "+e.getCause());
	         blnFlag=false;
	  }
	  m1.put("STEPSTATUS", blnFlag);
	  return blnFlag;
}

public synchronized boolean VisaCreditCardType(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	String Visa="4444444444444448";
	try
	{
	  if(cnf.FnExplicitWait("XPATH",mbo.PayBill_CardNum,driver))
	     {
		  	 repfn.FnUpdateTestStepResHTML("Verify the presence of Credit card text box in payment info section", "Credit card text box is present in Payment info section", "PASS",runManagerInfoObj);
			 WebElement CardNum=driver.findElement(By.xpath(mbo.PayBill_CardNum));
		     CardNum.sendKeys(Visa);
		    if(CardNum!=null)
		      {
		  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card text box is filled with Visa card number", "Credit card text box is filled with Visa card number"+" "+CardNum.getText(), "PASS",runManagerInfoObj);
		  	    if(cnf.FnExplicitWait("XPATH", mbo.CardTypeICon,driver))
		  	    {
			  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon is present for the card number filled", "Credit card icon is present for the card number filled", "PASS",runManagerInfoObj);
		  	        WebElement cardType=driver.findElement(By.xpath(mbo.CardTypeICon));
			  	    if(cardType.getAttribute("title").toString().equalsIgnoreCase("Visa"))
			  	    {
				  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon displayed is Visa", "Credit card icon displayed is Visa ", "PASS",runManagerInfoObj);
                   blnFlag=true;
			  	    }
			  	    else
			  	    {
				  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon displayed is Visa", "Credit card icon displayed is Visa ", "PASS",runManagerInfoObj);
                   blnFlag=false;
			  	    }
		  	    }
		  	    else
		  	    {
			  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon is present for the card number filled", "Credit card icon is not present for the card number filled", "FAIL",runManagerInfoObj);
               blnFlag=false;
		  	    }

		    }
		    else
		    {
	  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card text box is filled with Visa card number", "Credit card text box is not filled with Visa card number", "FAIL",runManagerInfoObj);
	  	    blnFlag=false;
		    }
	        }
	      else
	      {
		  	    repfn.FnUpdateTestStepResHTML("Verify the presence of Credit card text box in payment info section", "Credit card text box is not present in Payment info section", "FAIL",runManagerInfoObj);
           blnFlag=false;
	      }
	}
	catch (Exception e)

	  {
	         repfn.FnUpdateTestStepResHTML("Verify User is in Payment info section","User is not in payment info section due to some exception ","FAIL",runManagerInfoObj);


	         System.err.println("Message : "+e.getMessage());
	         System.err.println("Cause : "+e.getCause());
	         blnFlag=false;
	  }
	  m1.put("STEPSTATUS", blnFlag);
	  return blnFlag;
}

public synchronized boolean MasterCreditCardType(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	String MasterCard="5555555555555557";
	try
	{
	  if(cnf.FnExplicitWait("XPATH",mbo.PayBill_CardNum,driver))
	     {
		  	 repfn.FnUpdateTestStepResHTML("Verify the presence of Credit card text box in payment info section", "Credit card text box is present in Payment info section", "PASS",runManagerInfoObj);
			 WebElement CardNum=driver.findElement(By.xpath(mbo.PayBill_CardNum));
			 CardNum.clear();
		     CardNum.sendKeys(MasterCard);
		    if(CardNum!=null)
		      {
		  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card text box is filled with MasterCard card number", "Credit card text box is filled with MasterCard card number"+" "+CardNum.getText(), "PASS",runManagerInfoObj);
		  	    if(cnf.FnExplicitWait("XPATH", mbo.CardTypeICon,driver))
		  	    {
			  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon is present for the card number filled", "Credit card icon is present for the card number filled", "PASS",runManagerInfoObj);
		  	        WebElement cardType=driver.findElement(By.xpath(mbo.CardTypeICon));
			  	    if(cardType.getAttribute("title").toString().equalsIgnoreCase("mastercard"))
			  	    {
				  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon displayed is Mastercard", "Credit card icon displayed is Mastercard", "PASS",runManagerInfoObj);
                 blnFlag=true;
			  	    }
			  	    else
			  	    {
				  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon displayed is Mastercard", "Credit card icon displayed is Mastercard", "PASS",runManagerInfoObj);
                 blnFlag=false;
			  	    }
		  	    }
		  	    else
		  	    {
			  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon is present for the card number filled", "Credit card icon is not present for the card number filled", "FAIL",runManagerInfoObj);
             blnFlag=false;
		  	    }

		    }
		    else
		    {
	  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card text box is filled with Mastercard card number", "Credit card text box is not filled with Mastercard card number", "FAIL",runManagerInfoObj);
	  	    blnFlag=false;
		    }
	        }
	      else
	      {
		  	    repfn.FnUpdateTestStepResHTML("Verify the presence of Credit card text box in payment info section", "Credit card text box is not present in Payment info section", "FAIL",runManagerInfoObj);
         blnFlag=false;
	      }
	}
	catch (Exception e)

	  {
	         repfn.FnUpdateTestStepResHTML("Verify User is in Payment info section","User is not in payment info section due to some exception ","FAIL",runManagerInfoObj);


	         System.err.println("Message : "+e.getMessage());
	         System.err.println("Cause : "+e.getCause());
	         blnFlag=false;
	  }
	  m1.put("STEPSTATUS", blnFlag);
	  return blnFlag;
}
public synchronized boolean DiscoverCreditCardType(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	String Discover="6500000000000002";
	try
	{
	  if(cnf.FnExplicitWait("XPATH",mbo.PayBill_CardNum,driver))
	     {
		  	 repfn.FnUpdateTestStepResHTML("Verify the presence of Credit card text box in payment info section", "Credit card text box is present in Payment info section", "PASS",runManagerInfoObj);
			 WebElement CardNum=driver.findElement(By.xpath(mbo.PayBill_CardNum));
			 CardNum.clear();
		     CardNum.sendKeys(Discover);
		    if(CardNum!=null)
		      {
		  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card text box is filled with Discover card number", "Credit card text box is filled with Discover card number"+" "+CardNum.getText(), "PASS",runManagerInfoObj);
		  	    if(cnf.FnExplicitWait("XPATH", mbo.CardTypeICon,driver))
		  	    {
			  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon is present for the card number filled", "Credit card icon is present for the card number filled", "PASS",runManagerInfoObj);
		  	        WebElement cardType=driver.findElement(By.xpath(mbo.CardTypeICon));
			  	    if(cardType.getAttribute("title").toString().equalsIgnoreCase("discover"))
			  	    {
				  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon displayed is Discover", "Credit card icon displayed is Discover", "PASS",runManagerInfoObj);
               blnFlag=true;
			  	    }
			  	    else
			  	    {
				  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon displayed is Discover", "Credit card icon displayed is Discover", "PASS",runManagerInfoObj);
               blnFlag=false;
			  	    }
		  	    }
		  	    else
		  	    {
			  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon is present for the card number filled", "Credit card icon is not present for the card number filled", "FAIL",runManagerInfoObj);
           blnFlag=false;
		  	    }

		    }
		    else
		    {
	  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card text box is filled with Discover card number", "Credit card text box is not filled with Discover card number", "FAIL",runManagerInfoObj);
	  	    blnFlag=false;
		    }
	        }
	      else
	      {
		  	    repfn.FnUpdateTestStepResHTML("Verify the presence of Credit card text box in payment info section", "Credit card text box is not present in Payment info section", "FAIL",runManagerInfoObj);
       blnFlag=false;
	      }
	}
	catch (Exception e)

	  {
	         repfn.FnUpdateTestStepResHTML("Verify User is in Payment info section","User is not in payment info section due to some exception ","FAIL",runManagerInfoObj);


	         System.err.println("Message : "+e.getMessage());
	         System.err.println("Cause : "+e.getCause());
	         blnFlag=false;
	  }
	  m1.put("STEPSTATUS", blnFlag);
	  return blnFlag;
}
public synchronized boolean AmexCreditCardType(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	String Amex="343434343434343";
	try
	{
	  if(cnf.FnExplicitWait("XPATH",mbo.PayBill_CardNum,driver))
	     {
		  	 repfn.FnUpdateTestStepResHTML("Verify the presence of Credit card text box in payment info section", "Credit card text box is present in Payment info section", "PASS",runManagerInfoObj);
			 WebElement CardNum=driver.findElement(By.xpath(mbo.PayBill_CardNum));
			 CardNum.clear();
		     CardNum.sendKeys(Amex);
		    if(CardNum!=null)
		      {
		  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card text box is filled with Amex card number", "Credit card text box is filled with Amex card number"+" "+CardNum.getText(), "PASS",runManagerInfoObj);
		  	    if(cnf.FnExplicitWait("XPATH", mbo.CardTypeICon,driver))
		  	    {
			  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon is present for the card number filled", "Credit card icon is present for the card number filled", "PASS",runManagerInfoObj);
		  	        WebElement cardType=driver.findElement(By.xpath(mbo.CardTypeICon));
			  	    if(cardType.getAttribute("title").toString().equalsIgnoreCase("Amex"))
			  	    {
				  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon displayed is Amex", "Credit card icon displayed is Amex", "PASS",runManagerInfoObj);
               blnFlag=true;
			  	    }
			  	    else
			  	    {
				  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon displayed is Amex", "Credit card icon displayed is Amex", "PASS",runManagerInfoObj);
               blnFlag=false;
			  	    }
		  	    }
		  	    else
		  	    {
			  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card icon is present for the card number filled", "Credit card icon is not present for the card number filled", "FAIL",runManagerInfoObj);
           blnFlag=false;
		  	    }

		    }
		    else
		    {
	  	    repfn.FnUpdateTestStepResHTML("Verify the Credit card text box is filled with Discover card number", "Credit card text box is not filled with Discover card number", "FAIL",runManagerInfoObj);
	  	    blnFlag=false;
		    }
	        }
	      else
	      {
		  	    repfn.FnUpdateTestStepResHTML("Verify the presence of Credit card text box in payment info section", "Credit card text box is not present in Payment info section", "FAIL",runManagerInfoObj);
       blnFlag=false;
	      }
	}
	catch (Exception e)

	  {
	         repfn.FnUpdateTestStepResHTML("Verify User is in Payment info section","User is not in payment info section due to some exception ","FAIL",runManagerInfoObj);


	         System.err.println("Message : "+e.getMessage());
	         System.err.println("Cause : "+e.getCause());
	         blnFlag=false;
	  }
	  m1.put("STEPSTATUS", blnFlag);
	  return blnFlag;
}


public synchronized boolean FnClickPayBillButtonCreditDebit(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
{
	 
	 String cardNumberOne = "";
	 String paymentDateOne = "";
	 String cardNumber = "";
	 String expirationDate = "";
	 String paymentAmount = "";
	 String paymentDate = "";
	 String month = "";
	 String day = "";
	 String year = "";

	 try{
	        
	        driver.switchTo().frame("iFrameResizer0");
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.CardNumber,driver)){
	               WebElement CardNumber=driver.findElement(By.xpath(mbo.CardNumber));
	               cardNumberOne = CardNumber.getAttribute("value");       
	               int length = cardNumberOne.length();
	               cardNumber = cardNumberOne.substring((length-4));
	               System.out.println(cardNumber);
	               blnFlag=true;
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Card Number field is displayed under Payment Information option",
	                            "Card Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.ExpirationDate,driver)){
	               WebElement ExpirationDate=driver.findElement(By.xpath(mbo.ExpirationDate));
	               expirationDate = ExpirationDate.getAttribute("value");
	               blnFlag=true;
	        } 
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Expiration Date field is displayed under Payment Information option",
	                            "Expiration Date field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.PaymentAmount,driver)){
	               WebElement PaymentAmount=driver.findElement(By.xpath(mbo.PaymentAmount));
	               paymentAmount = PaymentAmount.getAttribute("value");
	               blnFlag=true;
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Payment Amount field is displayed under Payment Information option",
	                            "Payment Amount Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.PaymentDate,driver)){
	               WebElement PaymentDate=driver.findElement(By.xpath(mbo.PaymentDate));
	               paymentDateOne = PaymentDate.getAttribute("value");
	               String Browser=m1.get("BROWSER").toString();
	               System.out.println("Browser is:   "+Browser);
	               if(Browser.equalsIgnoreCase("chrome"))
	               {
	            	   String[] one = paymentDateOne.split("-");
	                   month = one[1];
	                   day = one[2];
	                   String yearOne = one[0];
	                   year = yearOne.substring((2));
	                   paymentDate = month+"/"+day+"/"+year;
	                   System.out.println(paymentDate);
	                   blnFlag=true;
	               }
	               else
	               {
	            	   String[] one = paymentDateOne.split("/");
	                   month = one[0];
	                   day = one[1];
	                   String yearOne = one[2];
	                   year = yearOne.substring((2));
	                   paymentDate = month+"/"+day+"/"+year;
	                   System.out.println(paymentDate);
	                   blnFlag=true;
	               }
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Payment Date field is displayed under Payment Information option",
	                            "Payment Date field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        Thread.sleep(2000);
	        if(cnf.FnExplicitWait("XPATH", mbo.PayNowButton,driver)){
	               ((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.PayNowButton)));   
	               repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is displayed","PASS",runManagerInfoObj);
	               WebElement PayNowButton=driver.findElement(By.xpath(mbo.PayNowButton));
	               //cnf.ScrollToView(PayNowButton);
	               if(PayNowButton.isEnabled()){
	                     repfn.FnUpdateTestStepResHTML("Verify Pay Now button is enabled","Pay Now button is enabled.","PASS",runManagerInfoObj);
	                     if(cnf.JSClick(PayNowButton,driver)){
	                            repfn.FnUpdateTestStepResHTML("Verify Pay Now button is clicked","Pay Now button is clicked.","PASS",runManagerInfoObj);
	                            
	                            Thread.sleep(5000);
	                            
	                            if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne,driver)){
	                                   WebElement VerifyPaymentPageOne=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne));
	                                   if(VerifyPaymentPageOne.getText().contains("Verify Payment Information")){
	                                          repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is navigated to Verify Payment page","PASS",runManagerInfoObj);
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPage_CardNumber,driver)){
	                                                 WebElement VerifyPaymentPage_CardNumber=driver.findElement(By.xpath(mbo.VerifyPaymentPage_CardNumber));
	                                                 if(VerifyPaymentPage_CardNumber.getAttribute("textContent").contains(cardNumber)){
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Card Number is displayed","Correct Card Number is displayed","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Card Number is displayed","Correct Card Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Card Number is displayed","Card Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_ExpirationDate,driver)){
	                                        	  
	                                                 WebElement VerifyPaymentPageOne_ExpirationDate=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_ExpirationDate));
	                                                
	                                                 
	                                                 
	                                                 if(Pattern.matches("([0-9]{2}\\/[0-9]{4})", VerifyPaymentPageOne_ExpirationDate.getAttribute("textContent")))	{
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Expiration Date in the format MM/YYYY is correct","Expiration Date in the format MM/YYYY is correct: "+VerifyPaymentPageOne_ExpirationDate.getAttribute("textContent"),"PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                	 repfn.FnUpdateTestStepResHTML("Verify if Expiration Date in the format MM/YYYY is correct","Expiration Date in the format MM/YYYY is not correct","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Expiration Date is displayed","Correct Expiration Date is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentAmount,driver)){
	                                                 WebElement VerifyPaymentPageOne_PaymentAmount=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentAmount));
	                                                 if(Pattern.matches("(\\$([0-9]{1}||[0-9]{2}||[0-9]{3})\\.[0-9]{2})", VerifyPaymentPageOne_PaymentAmount.getAttribute("textContent"))){
	                                                        repfn.FnUpdateTestStepResHTML("Verify if payment amount in the format $XXX.XX is correct","Payment amount in the format $XXX.XX is correct: "+VerifyPaymentPageOne_PaymentAmount.getAttribute("textContent"),"PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                	 repfn.FnUpdateTestStepResHTML("Verify if payment amount in the format $XXX.XX is correct","Payment amount in the format $XXX.XX is not  correct ","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Payment Amount is displayed","Payment Amount is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentDate,driver)){
	                                                 WebElement VerifyPaymentPageOne_PaymentDate=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentDate));
	                                                 System.out.println(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent"));
	                                                 if(Pattern.matches("([0-9]{2}\\/[0-9]{2}\\/[0-9]{2})", VerifyPaymentPageOne_PaymentDate.getAttribute("textContent")))	{
	                                                        repfn.FnUpdateTestStepResHTML("Verify if  Payment Date is in the format MM/DD/YY is correct","Payment Date in the format MM/DD/YY is correct: "+VerifyPaymentPageOne_PaymentDate.getAttribute("textContent"),"PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                	 repfn.FnUpdateTestStepResHTML("Verify if  Payment Date is in the format MM/DD/YY is correct","Payment Date in the format MM/DD/YY is not correct","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Payment Date is displayed","Payment Date is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          if(cnf.FnExplicitWait("XPATH", mbo.EditPaymentDetailsLink,driver)){
	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Edit Payment Details\" link is displayed","\"Edit Payment Details\" link is displayed","PASS",runManagerInfoObj);
                                                  blnFlag=true;
                                                  if(cnf.FnExplicitWait("XPATH", mbo.billingCompletePayment,driver)){
    	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Complete Payment\" button is displayed","\"Complete Payment\" button is displayed","PASS",runManagerInfoObj);
                                                      blnFlag=true;
                                                      if(cnf.FnExplicitWait("XPATH", mbo.supportLinkInBilling,driver)){
        	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Support\" link is displayed","\"Support\" link is displayed","PASS",runManagerInfoObj);
                                                          blnFlag=true;
                                                               }
        	                                          else
        	                                          {
        	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Support\" link is displayed","\"Support\" link is not displayed","FAIL",runManagerInfoObj);
                                                          blnFlag=false;
        	                                          }
                                                           }
    	                                          else
    	                                          {
    	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Complete Payment\" button is displayed","\"Complete Payment\" button is not displayed","FAIL",runManagerInfoObj);
                                                      blnFlag=false;
    	                                          }
                                                       }
	                                          else
	                                          {
	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Edit Payment Details\" link is displayed","\"Edit Payment Details\" link is not displayed","FAIL",runManagerInfoObj);
                                                  blnFlag=false;
	                                          }
	                                          
	                                         if(cnf.FnExplicitWait("XPATH", "//a[@ ng-click='cancelPayment()']",driver))
	                                         {
	                                        	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is displayed","Cancel link is displayed","PASS",runManagerInfoObj);
                                                 blnFlag=true;
                                                 WebElement cancelLink=driver.findElement(By.xpath("//a[@ ng-click='cancelPayment()']"));
                                                 if(cnf.JSClick(cancelLink,driver))
                                                 {
                                                	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is clicked","Cancel link is clicked","PASS",runManagerInfoObj);
                                                     blnFlag=true;
                                                     if(cnf.FnExplicitWait("XPATH", "//button[@class='sb-btn sb-btn--primary pull-right ng-binding ng-scope']",driver))
                                                     {
                                                    	 repfn.FnUpdateTestStepResHTML("Verify if ok button is present in popup","OK button is present in popup","PASS",runManagerInfoObj);
                                                         blnFlag=true;
                                                         WebElement OKButton=driver.findElement(By.xpath("//button[@class='sb-btn sb-btn--primary pull-right ng-binding ng-scope']"));
                                                         if(cnf.JSClick(OKButton,driver))
                                                         {
                                                        	 repfn.FnUpdateTestStepResHTML("Verify if ok button is clicked in popup","OK button is clicked in popup","PASS",runManagerInfoObj);
                                                             blnFlag=true;
                                                         }
                                                         else
                                                         {
                                                        	 repfn.FnUpdateTestStepResHTML("Verify if ok button is clicked in popup","OK button is not clicked in popup","FAIL",runManagerInfoObj);
                                                             blnFlag=false;
                                                         }
                                                     }
                                                     else
                                                     {
                                                    	 repfn.FnUpdateTestStepResHTML("Verify if ok button is present in popup","OK button is present in popup","FAIL",runManagerInfoObj);
                                                         blnFlag=false;
                                                     }
                                                 }
                                                 else
                                                 {
                                                	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is clicked","Cancel link is not clicked","FAIL",runManagerInfoObj);
                                                     blnFlag=false;
                                                 }
	                                         }
	                                         else
	                                         {
	                                        	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is displayed","Cancel link is not displayed","FAIL",runManagerInfoObj);
                                                 blnFlag=false;
	                                         }
	                                          
	                                   }
	                                   else{
	                                          repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is not navigated to Verify Payment page","FAIL",runManagerInfoObj);
	                                          blnFlag=false;
	                                   }
	                            }
	                     }
	                     else{
	                            repfn.FnUpdateTestStepResHTML("Verify Pay Now button is clicked","Pay Now button is not clicked.","FAIL",runManagerInfoObj);
	                            blnFlag=false;
	                     }
	               }
	               else{
	                     repfn.FnUpdateTestStepResHTML("Verify Pay Now button is enabled","Pay Now button is not enabled","FAIL",runManagerInfoObj);
	                     blnFlag=false;
	               }
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is not displayed","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        driver.switchTo().defaultContent();
	        
	 }
	 
	 catch (Exception e)

	 {
	        repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Bill information",
	                     "User is able to verify Pay Bill information due to some exception","FAIL",runManagerInfoObj);

	 blnFlag=false;
	        System.err.println("Message : "+e.getMessage());
	        System.err.println("Cause : "+e.getCause());
	        
	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
	 
}
public synchronized boolean FnClickAutoPay_Checking_SavingsOption(WebDriver driver,RunManagerInfo runManagerInfoObj){
	  try{
		  
		  driver.switchTo().frame("iFrameResizer0");
		  
		  // Checking/Savings Radio button
		  if(cnf.FnExplicitWait("XPATH", mbo.PayBill_Checking_Savings,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button is displayed under Select Payment Type option",
					"Checking/Savings Radio button is displayed under Select Payment Type option","PASS",runManagerInfoObj);
			WebElement PayBill_Checking_Savings=driver.findElement(By.xpath(mbo.PayBill_Checking_Savings));
			if(cnf.JSClick(PayBill_Checking_Savings,driver)){
				repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button under Select Payment Type option is clicked ",
 					"Checking/Savings Radio button under Select Payment Type option is clicked ","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button under Select Payment Type option is clicked ",
 					"Checking/Savings Radio button under Select Payment Type option is not clicked ","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
			
		  }
		  else{
			repfn.FnUpdateTestStepResHTML("Verify Checking/Savings Radio button is displayed under Select Payment Type option",
					"Checking/Savings Radio button is not displayed under Select Payment Type option","FAIL",runManagerInfoObj);
			blnFlag=false;
		  }
		  
		  // One Time Payment Frequency Radio button
		  if(cnf.FnExplicitWait("XPATH", mbo.PaymentFrequency_AutoPay,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Auto pay Radio button is displayed under Select Payment Frequency option",
					"Auto pay Radio button is displayed under Select Payment Type option","PASS",runManagerInfoObj);
			WebElement PaymentFrequency_AutoPay=driver.findElement(By.xpath(mbo.PaymentFrequency_AutoPay));
			if(PaymentFrequency_AutoPay.getAttribute("aria-checked")!=null && PaymentFrequency_AutoPay.getAttribute("aria-checked").equalsIgnoreCase("true")){
				repfn.FnUpdateTestStepResHTML("Verify Auto pay Radio button is already selected under Select Payment Frequency option",
 					"Auto pay Radio button is already selected under Select Payment Type option","PASS",runManagerInfoObj);
				blnFlag=true;
			}
			else{
				if(cnf.JSClick(PaymentFrequency_AutoPay,driver)){
					repfn.FnUpdateTestStepResHTML("Verify Auto pay Radio button is clicked under Select Payment Frequency option",
     					"Auto pay Radio button is clicked under Select Payment Type option","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					repfn.FnUpdateTestStepResHTML("Verify Auto pay Radio button is clicked under Select Payment Frequency option",
     					"Auto pay Radio button is not clicked under Select Payment Type option","FAIL",runManagerInfoObj);
					blnFlag=false;
				}
			}
		  }
		  else{
			repfn.FnUpdateTestStepResHTML("Verify Auto pay Radio button is displayed under Select Payment Frequency option",
					"Auto pay Radio button is not displayed under Select Payment Type option","FAIL",runManagerInfoObj);
			blnFlag=false;
		  }
		  
		driver.switchTo().defaultContent();
		  
		  
	  }
	  
	  catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is able to verify and click One Time Checking/Savings radio button",
					"User is able to verify and click One Time Checking/Savings radio button due to some exception","FAIL",runManagerInfoObj);

	      	 blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
	  
}
public synchronized boolean FnValidateEditPaymentOptionAutoPay(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	  
  String routingNumber = "122000247";
  String accountNumber = "0888271156";
  String paymentAmount = "1";
  Calendar date = Calendar.getInstance();



  
 try{

      driver.switchTo().frame("iFrameResizer0");
      
      if(cnf.FnExplicitWait("XPATH", mbo.RoutingNumber,driver)){
             repfn.FnUpdateTestStepResHTML("Verify Routing Number field is displayed under Payment Information option",
                          "Routing Number field is displayed under Payment Information option","PASS",runManagerInfoObj);
             WebElement RoutingNumber=driver.findElement(By.xpath(mbo.RoutingNumber));
             RoutingNumber.sendKeys(routingNumber);
             repfn.FnUpdateTestStepResHTML("Verify Routing Number is entered","Routing Number: " +routingNumber + "is entered","PASS",runManagerInfoObj);
             blnFlag=true;
      }
      else{
             repfn.FnUpdateTestStepResHTML("Verify Routing Number field is displayed under Payment Information option",
                          "Routing Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
             blnFlag=false;
      }
      
      
      if(cnf.FnExplicitWait("XPATH", mbo.BankAccountNumber,driver)){
             repfn.FnUpdateTestStepResHTML("Verify Bank Account Number field is displayed under Payment Information option",
                         "Bank Account Number field is displayed under Payment Information option","PASS",runManagerInfoObj);
             WebElement BankAccountNumber=driver.findElement(By.xpath(mbo.BankAccountNumber));
             BankAccountNumber.sendKeys(accountNumber);
             repfn.FnUpdateTestStepResHTML("Verify Bank Account Number is entered","Bank Account Number:  " +accountNumber + " is entered","PASS",runManagerInfoObj);
             blnFlag=true;
      } 
      else{
             repfn.FnUpdateTestStepResHTML("Verify Bank Account Number field is displayed under Payment Information option",
                          "Bank Account Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
             blnFlag=false;
      }
      
      
      
      driver.switchTo().defaultContent();
      
 }
 
 catch (Exception e)

      {
             repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Bill button on Home page",
                          "User is able to verify Pay Bill button on Home page due to some exception","FAIL",runManagerInfoObj);

      blnFlag=false;
             System.err.println("Message : "+e.getMessage());
             System.err.println("Cause : "+e.getCause());
             
      }
      m1.put("STEPSTATUS", blnFlag);
      return blnFlag;
 
}
public synchronized boolean FnClickPayBillButtonAndVerifyAutoPay(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	 
	 String routingNumberOne = "";
	 String accountNumberOne = "";
	 String paymentDateOne = "";
	 String routingNumber = "";
	 String accountNumber = "";
	 String paymentAmount = "";
	 String paymentDate = "";
	 String month = "";
	 String day = "";
	 String year = "";

	 try{
	        
	        driver.switchTo().frame("iFrameResizer0");
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.RoutingNumber,driver)){
	               WebElement RoutingNumber=driver.findElement(By.xpath(mbo.RoutingNumber));
	               routingNumberOne = RoutingNumber.getAttribute("value");       
	               int length = routingNumberOne.length();
	               routingNumber = routingNumberOne.substring((length-4));
	               System.out.println(routingNumber);
	               blnFlag=true;
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Routing Number field is displayed under Payment Information option",
	                            "Routing Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.BankAccountNumber,driver)){
	               WebElement BankAccountNumber=driver.findElement(By.xpath(mbo.BankAccountNumber));
	               accountNumberOne = BankAccountNumber.getAttribute("value");
	               int length = accountNumberOne.length();
	               accountNumber = accountNumberOne.substring((length-4));
	               System.out.println(accountNumber);
	               blnFlag=true;
	        } 
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Bank Account Number field is displayed under Payment Information option",
	                            "Bank Account Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	       
	        
	        Thread.sleep(2000);
	        if(cnf.FnExplicitWait("XPATH", mbo.saveAutoPay,driver)){
	               ((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.saveAutoPay)));   
	               repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is displayed","PASS",runManagerInfoObj);
	               WebElement PayNowButton=driver.findElement(By.xpath(mbo.saveAutoPay));
	               //cnf.ScrollToView(PayNowButton);
	               if(PayNowButton.isEnabled()){
	                     repfn.FnUpdateTestStepResHTML("Verify Pay Now button is enabled","Pay Now button is enabled.","PASS",runManagerInfoObj);
	                     if(cnf.JSClick(PayNowButton,driver)){
	                            repfn.FnUpdateTestStepResHTML("Verify Pay Now button is clicked","Pay Now button is clicked.","PASS",runManagerInfoObj);
	                            
	                            Thread.sleep(5000);
	                            
	                            if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne,driver)){
	                                   WebElement VerifyPaymentPageOne=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne));
	                                   if(VerifyPaymentPageOne.getText().contains("Verify Payment Information")){
	                                          repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is navigated to Verify Payment page","PASS",runManagerInfoObj);
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPage_RoutingNumber,driver)){
	                                                 WebElement VerifyPaymentPage_RoutingNumber=driver.findElement(By.xpath(mbo.VerifyPaymentPage_RoutingNumber));
	                                                 if(VerifyPaymentPage_RoutingNumber.getAttribute("textContent").contains(routingNumber)){
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Routing Number is displayed","Correct Routing Number is displayed","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Routing Number is displayed","Correct Routing Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Routing Number is displayed","Correct Routing Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_AccountNumber,driver)){
	                                                 WebElement VerifyPaymentPageOne_AccountNumber=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_AccountNumber));
	                                                 if(VerifyPaymentPageOne_AccountNumber.getAttribute("textContent").contains(accountNumber)){
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Account Number is displayed","Correct Account Number is displayed","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Account Number is displayed","Correct Account Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Account Number is displayed","Correct Account Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentAmount,driver)){
	                                                 WebElement VerifyPaymentPageOne_PaymentAmount=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentAmount));
	                                                 if(VerifyPaymentPageOne_PaymentAmount.getAttribute("textContent").equalsIgnoreCase("Statement Balance Due")){
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","Payment Amount is not displayed as \"Statement Balance Due\" for auto pay account","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Payment Amount is displayed","Correct Payment Amount is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentDate,driver)){
	                                                 WebElement VerifyPaymentPageOne_PaymentDate=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentDate));
	                                                 System.out.println(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent"));
	                                                 if(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent").equalsIgnoreCase("Statement Due Date")){
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment date is displayed as \"Statement Due Date\" for auto pay account","Payment date is displayed as \"Statement Due Date\" for auto pay account","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                	 repfn.FnUpdateTestStepResHTML("Verify if Payment date is displayed as \"Statement Due Date\" for auto pay account","Payment date is not displayed as \"Statement Due Date\" for auto pay account","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Payment Date is displayed","Correct Payment Date is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          if(cnf.FnExplicitWait("XPATH", mbo.EditPaymentDetailsLinkAutoPay,driver)){
	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Edit Payment Details\" link is displayed","\"Edit Payment Details\" link is displayed","PASS",runManagerInfoObj);
                                                blnFlag=true;
                                                
                                                    if(cnf.FnExplicitWait("XPATH", mbo.supportLinkInBilling,driver)){
      	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Support\" link is displayed","\"Support\" link is displayed","PASS",runManagerInfoObj);
                                                        blnFlag=true;
                                                        if(cnf.FnExplicitWait("XPATH", "//button[@disabled='disabled']",driver)){
          	                                        	  repfn.FnUpdateTestStepResHTML("Verify if disabled \"Save\" button is displayed","Disabled \"Save\" button is displayed","PASS",runManagerInfoObj);
                                                            blnFlag=true;
                                                            if(cnf.FnExplicitWait("ID", "acceptTermsAndConditions",driver)){
              	                                        	  repfn.FnUpdateTestStepResHTML("Verify if Auto-Pay terms and conditions check box is present","Auto-pay terms and conditions checkbox is present","PASS",runManagerInfoObj);
                                                                blnFlag=true;
                                                                if(cnf.FnExplicitWait("XPATH", "//a[@class='sb-print-tc-link sm semi-bold'][contains(.,'Print Auto-Pay Terms & Conditions')]",driver)){
                  	                                        	  repfn.FnUpdateTestStepResHTML("Verify if there is an option to print Auto-Pay terms and conditions  is present","Auto-pay terms and conditions print option is present","PASS",runManagerInfoObj);
                                                                    blnFlag=true;
                                                                         }
                  	                                          else
                  	                                          {
                  	                                        	  repfn.FnUpdateTestStepResHTML("Verify if there is an option to print Auto-Pay terms and conditions  is present","Auto-pay terms and conditions print option is not present","FAIL",runManagerInfoObj);
                                                                    blnFlag=false;
                  	                                          }
                                                                     }
              	                                          else
              	                                          {
              	                                        	  repfn.FnUpdateTestStepResHTML("Verify if Auto-Pay terms and conditions check box is present","Auto-pay terms and conditions checkbox is not present","FAIL",runManagerInfoObj);
                                                                blnFlag=false;
              	                                          }
                                                                 }
          	                                          else
          	                                          {
          	                                        	  repfn.FnUpdateTestStepResHTML("Verify if disabled \"Save\" button is displayed","Disabled \"Save\" button is not displayed","FAIL",runManagerInfoObj);
                                                            blnFlag=false;
          	                                          }
                                                             }
      	                                          else
      	                                          {
      	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Support\" link is displayed","\"Support\" link is not displayed","FAIL",runManagerInfoObj);
                                                        blnFlag=false;
      	                                          }
                                                        
                                                     }
	                                          else
	                                          {
	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Edit Payment Details\" link is displayed","\"Edit Payment Details\" link is not displayed","FAIL",runManagerInfoObj);
                                                blnFlag=false;
	                                          }
	                                          
	                                         if(cnf.FnExplicitWait("XPATH", "//a[@ ng-click='cancelPayment()']",driver))
	                                         {
	                                        	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is displayed","Cancel link is displayed","PASS",runManagerInfoObj);
                                               blnFlag=true;
                                               WebElement cancelLink=driver.findElement(By.xpath("//a[@ ng-click='cancelPayment()']"));
                                               if(cnf.JSClick(cancelLink,driver))
                                               {
                                              	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is clicked","Cancel link is clicked","PASS",runManagerInfoObj);
                                                   blnFlag=true;
                                                   if(cnf.FnExplicitWait("XPATH", "//button[@class='sb-btn sb-btn--primary pull-right ng-binding ng-scope']",driver))
                                                   {
                                                  	 repfn.FnUpdateTestStepResHTML("Verify if ok button is present in popup","OK button is present in popup","PASS",runManagerInfoObj);
                                                       blnFlag=true;
                                                       WebElement OKButton=driver.findElement(By.xpath("//button[@class='sb-btn sb-btn--primary pull-right ng-binding ng-scope']"));
                                                       if(cnf.JSClick(OKButton,driver))
                                                       {
                                                      	 repfn.FnUpdateTestStepResHTML("Verify if ok button is clicked in popup","OK button is clicked in popup","PASS",runManagerInfoObj);
                                                           blnFlag=true;
                                                       }
                                                       else
                                                       {
                                                      	 repfn.FnUpdateTestStepResHTML("Verify if ok button is clicked in popup","OK button is not clicked in popup","FAIL",runManagerInfoObj);
                                                           blnFlag=false;
                                                       }
                                                   }
                                                   else
                                                   {
                                                  	 repfn.FnUpdateTestStepResHTML("Verify if ok button is present in popup","OK button is present in popup","FAIL",runManagerInfoObj);
                                                       blnFlag=false;
                                                   }
                                               }
                                               else
                                               {
                                              	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is clicked","Cancel link is not clicked","FAIL",runManagerInfoObj);
                                                   blnFlag=false;
                                               }
	                                         }
	                                         else
	                                         {
	                                        	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is displayed","Cancel link is not displayed","FAIL",runManagerInfoObj);
                                               blnFlag=false;
	                                         }
	                                                            
	                                                               
	                                                               
	                                                       
	                                         
	                                          
	                                   }
	                                   else{
	                                          repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is not navigated to Verify Payment page","FAIL",runManagerInfoObj);
	                                          blnFlag=false;
	                                   }
	                            }
	                     }
	                     else{
	                            repfn.FnUpdateTestStepResHTML("Verify Pay Now button is clicked","Pay Now button is not clicked.","FAIL",runManagerInfoObj);
	                            blnFlag=false;
	                     }
	               }
	               else{
	                     repfn.FnUpdateTestStepResHTML("Verify Pay Now button is enabled","Pay Now button is not enabled","FAIL",runManagerInfoObj);
	                     blnFlag=false;
	               }
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is not displayed","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        driver.switchTo().defaultContent();
	        
	        Thread.sleep(5000);
        
	 }
	 
	 catch (Exception e)

	 {
	        repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Bill informatio",
	                     "User is able to verify Pay Bill information due to some exception","FAIL",runManagerInfoObj);

	 blnFlag=false;
	        System.err.println("Message : "+e.getMessage());
	        System.err.println("Cause : "+e.getCause());
	        
	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
	 
	}
public synchronized boolean fnManageVoiceBeforeCancel(WebDriver driver,RunManagerInfo runManagerInfoObj) {
	try {

		if (cnf.FnExplicitWait("XPATH", mbo.manageVoiceLineButton,driver)) {
			blnFlag = true;
			repfn.FnUpdateTestStepResHTML(
					"Verify if \"Add voice line\" button is present",
					"\"Add voice line\" button is present", "PASS",runManagerInfoObj);
			if (cnf.FnExplicitWait("XPATH", mbo.manageCancel,driver)) {
				blnFlag = true;
				repfn.FnUpdateTestStepResHTML(
						"Verify if \"Cancel\" link is present",
						"\"Cancel\" link is present", "PASS",runManagerInfoObj);
				WebElement cancelLink = driver
						.findElement(By
								.xpath(mbo.manageCancel));
				if (cnf.JSClick(cancelLink,driver)) {
					Thread.sleep(5000);
				
					repfn.FnUpdateTestStepResHTML(
							"Verify if \"Cancel\" link is clicked ",
							"\"Cancel\" link is clicked ",
							"PASS",runManagerInfoObj);
					WebElement confirmPopUp = driver
							.findElement(By
									.xpath(mbo.manageConfirmPopUp));
					if (cnf.JSClick(confirmPopUp,driver)) {
						Thread.sleep(5000);
						
						repfn.FnUpdateTestStepResHTML(
								"Verify if \"Confirm\" link is clicked in popup",
								"\"Confirm\" link is clicked in popup",
								"PASS",runManagerInfoObj);
						WebElement verifyManageUsers = driver
								.findElement(By
										.xpath("//button[@class='sb-btn sb-btn--icon']"));
						if (cnf.FnExplicitWait("XPATH",
								"//button[@class='sb-btn sb-btn--icon']",driver)) {
							blnFlag = true;
							repfn.FnUpdateTestStepResHTML(
									"Verify if user has navigated to manage users list",
									"User has navigated to manage users list",
									"PASS",runManagerInfoObj);
						} else {
							blnFlag = false;
							repfn.FnUpdateTestStepResHTML(
									"Verify if user has navigated to manage users list",
									"User has not navigated to manage users list",
									"FAIL",runManagerInfoObj);
						}

					} else {
						blnFlag = false;
						repfn.FnUpdateTestStepResHTML(
								"Verify if \"Confirm\" link is clicked in popup",
								"\"Confirm\" link is not clicked in popup",
								"FAIL",runManagerInfoObj);
					}
				} else {
					blnFlag = false;
					repfn.FnUpdateTestStepResHTML(
							"Verify if \"Cancel\" link is clicked ",
							"\"Cancel\" link is not clicked ",
							"FAIL",runManagerInfoObj);
				}
			}
		else {
			blnFlag = false;
			repfn.FnUpdateTestStepResHTML(
					"Verify if \"Cancel\" link is present",
					"\"Cancel\" link is present", "FAIL",runManagerInfoObj);
		
		}
		}
	else {
	blnFlag = false;
	repfn.FnUpdateTestStepResHTML(
			"Verify if \"Add voice line\" button is present",
			"\"Add voice line\" button is not present", "FAIL",runManagerInfoObj);
}
		
	} catch (Exception e) {
		blnFlag = false;
		repfn.FnUpdateTestStepResHTML(
				"Verify that the Account Owner/ Administrator user is able to create a New User",
				"Account Owner/ Administrator user is not able to create a New User due to some exception",
				"FAIL",runManagerInfoObj);
		System.err.println("Message : " + e.getMessage());
		System.err.println("Cause : " + e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean fnTypeOFCardUsed(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
{
	try
	{
		  driver.switchTo().frame("iFrameResizer0");
		  if(cnf.FnExplicitWait("XPATH", mbo.CardNumber,driver))
		  {
			  blnFlag = true;
				repfn.FnUpdateTestStepResHTML("Verify if there is an option to enter card number is displayed",
						"Card Number field is displayed","PASS",runManagerInfoObj);
				if(blnFlag)
				{
					WebElement cardNumber=driver.findElement(By.xpath(mbo.CardNumber));
					cardNumber.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"4444444444444448");
					blnFlag = true;
					repfn.FnUpdateTestStepResHTML("Verify if user is able to enter card number",
							"User is able to enter card number: "+"4444444444444448","PASS",runManagerInfoObj);
					if(cnf.FnExplicitWait("XPATH", "//span[@class='credit-card-icon credit-card-icon-visa ng-scope' and @title='Visa']",driver))
					{
						blnFlag = true;
						repfn.FnUpdateTestStepResHTML("Verify if type of the card is displayed near the text box depending on the card number",
								"Type of the card is displayed near the text box depending on the card number: "+"VISA","PASS",runManagerInfoObj);
						if(blnFlag)
						{
							WebElement cardNumber1=driver.findElement(By.xpath(mbo.CardNumber));
							cardNumber1.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"5555555555555557");
							blnFlag = true;
							repfn.FnUpdateTestStepResHTML("Verify if user is able to enter card number",
									"User is able to enter card number: "+"5555555555555557","PASS",runManagerInfoObj);
							if(cnf.FnExplicitWait("XPATH", "//span[@class='credit-card-icon credit-card-icon-mastercard ng-scope' and @title='Mastercard']",driver))
							{
								blnFlag = true;
								repfn.FnUpdateTestStepResHTML("Verify if type of the card is displayed near the text box depending on the card number",
										"Type of the card is displayed near the text box depending on the card number: "+"Mastercard","PASS",runManagerInfoObj);
								if(blnFlag)
								{
									WebElement cardNumber2=driver.findElement(By.xpath(mbo.CardNumber));
									cardNumber2.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"343434343434343");
									blnFlag = true;
									repfn.FnUpdateTestStepResHTML("Verify if user is able to enter card number",
											"User is able to enter card number: "+"343434343434343","PASS",runManagerInfoObj);
									if(cnf.FnExplicitWait("XPATH", "//span[@class='credit-card-icon credit-card-icon-amex ng-scope' and @title='American Express']",driver))
									{
										blnFlag = true;
										repfn.FnUpdateTestStepResHTML("Verify if type of the card is displayed near the text box depending on the card number",
												"Type of the card is displayed near the text box depending on the card number: "+"Amex","PASS",runManagerInfoObj);
										if(blnFlag)
										{
											WebElement cardNumber3=driver.findElement(By.xpath(mbo.CardNumber));
											cardNumber3.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),"6500000000000002");
											blnFlag = true;
											repfn.FnUpdateTestStepResHTML("Verify if user is able to enter card number",
													"User is able to enter card number: "+"6500000000000002","PASS",runManagerInfoObj);
											if(cnf.FnExplicitWait("XPATH", "//span[@class='credit-card-icon credit-card-icon-discover ng-scope' and @title='Discover']",driver))
											{
												blnFlag = true;
												repfn.FnUpdateTestStepResHTML("Verify if type of the card is displayed near the text box depending on the card number",
														"Type of the card is displayed near the text box depending on the card number: "+"Discover","PASS",runManagerInfoObj);
											}
											else
											{
												blnFlag = false;
												repfn.FnUpdateTestStepResHTML("Verify if type of the card is displayed near the text box depending on the card number",
														"Type of the card is not displayed near the text box depending on the card number ","FAIL",runManagerInfoObj);
											}
										}
										else
										{
											blnFlag = false;
											repfn.FnUpdateTestStepResHTML("Verify if user is able to enter card number",
													"User is not able to enter card number","FAIL",runManagerInfoObj);
										}
									}
									else
									{
										blnFlag = false;
										repfn.FnUpdateTestStepResHTML("Verify if type of the card is displayed near the text box depending on the card number",
												"Type of the card is not displayed near the text box depending on the card number ","FAIL",runManagerInfoObj);
									}
								}
								else
								{
									blnFlag = false;
									repfn.FnUpdateTestStepResHTML("Verify if user is able to enter card number",
											"User is not able to enter card number","FAIL",runManagerInfoObj);
								}
							}
							else
							{
								blnFlag = false;
								repfn.FnUpdateTestStepResHTML("Verify if type of the card is displayed near the text box depending on the card number",
										"Type of the card is not displayed near the text box depending on the card number ","FAIL",runManagerInfoObj);
							}
						}
						else
						{
							blnFlag = false;
							repfn.FnUpdateTestStepResHTML("Verify if user is able to enter card number",
									"User is not able to enter card number","FAIL",runManagerInfoObj);
						}
					}
					else
					{
						blnFlag = false;
						repfn.FnUpdateTestStepResHTML("Verify if type of the card is displayed near the text box depending on the card number",
								"Type of the card is not displayed near the text box depending on the card number ","FAIL",runManagerInfoObj);
					}
				}
				else
				{
					blnFlag = false;
					repfn.FnUpdateTestStepResHTML("Verify if user is able to enter card number",
							"User is not able to enter card number","FAIL",runManagerInfoObj);
				}
		  }
		  else
		  {
			  blnFlag = false;
				repfn.FnUpdateTestStepResHTML("Verify if there is an option to enter card number is displayed",
						"Card Number field is not  displayed","FAIL",runManagerInfoObj);
		  }
		  driver.switchTo().defaultContent();
		  Thread.sleep(5000);
	        if(cnf.FnExplicitWait("XPATH", mbo.ViewStatementsLink,driver)){
	               repfn.FnUpdateTestStepResHTML("Verify View Statements Link is displayed","View Statements Link is displayed","PASS",runManagerInfoObj);
	               WebElement ViewStatementsLink=driver.findElement(By.xpath(mbo.ViewStatementsLink));
	               if(cnf.JSClick(ViewStatementsLink,driver)){
	                     repfn.FnUpdateTestStepResHTML("Verify View Statements Link is clicked","View Statements Link is clicked","PASS",runManagerInfoObj);
	                     WebElement ConfirmCancel=driver.findElement(By.xpath(mbo.ConfirmCancel));
	                            if(cnf.FnExplicitWait("XPATH", mbo.ConfirmCancel,driver)){
	                                   repfn.FnUpdateTestStepResHTML("Verify Confirm Navigation pop-up is displayed", "Confirm Navigation pop-up is displayed","PASS",runManagerInfoObj);
	                                   cnf.JSClick(ConfirmCancel,driver);
	                                   repfn.FnUpdateTestStepResHTML("Verify Navigation to View Statements page", "Navigation to View Statements page is done","PASS",runManagerInfoObj);
	                                   Thread.sleep(5000);
	                                   blnFlag=true;
	                            }
	                            else{
	                                   repfn.FnUpdateTestStepResHTML("Verify Confirm Navigation pop-up is displayed", "Confirm Navigation pop-up is not displayed","FAIL",runManagerInfoObj);
	                                   blnFlag=false;
	                            }
	                     
	               }
	               else{
	                     repfn.FnUpdateTestStepResHTML("Verify View Statements Link is clicked","View Statements Link is not clicked","FAIL",runManagerInfoObj);
	                     blnFlag=false;
	               }
	               
	               
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify View Statements Link is displayed","View Statements Link is not displayed","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	}
	catch (Exception e) {
		blnFlag = false;
		repfn.FnUpdateTestStepResHTML("Verify if type of card gets displayed near the text box depending on card number ","Type of card doesn't displayed near the text box depending on card number due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : " + e.getMessage());
		System.err.println("Cause : " + e.getCause());
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}


public synchronized boolean FnClickPayBillButtonAndEditAutoPay(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	 
	 String routingNumberOne = "";
	 String accountNumberOne = "";
	 String paymentDateOne = "";
	 String routingNumber = "";
	 String accountNumber = "";
	 String paymentAmount = "";
	 String paymentDate = "";
	 String month = "";
	 String day = "";
	 String year = "";

	 try{
	        
	        driver.switchTo().frame("iFrameResizer0");
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.RoutingNumber,driver)){
	               WebElement RoutingNumber=driver.findElement(By.xpath(mbo.RoutingNumber));
	               routingNumberOne = RoutingNumber.getAttribute("value");       
	               int length = routingNumberOne.length();
	               routingNumber = routingNumberOne.substring((length-4));
	               System.out.println(routingNumber);
	               blnFlag=true;
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Routing Number field is displayed under Payment Information option",
	                            "Routing Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.BankAccountNumber,driver)){
	               WebElement BankAccountNumber=driver.findElement(By.xpath(mbo.BankAccountNumber));
	               accountNumberOne = BankAccountNumber.getAttribute("value");
	               int length = accountNumberOne.length();
	               accountNumber = accountNumberOne.substring((length-4));
	               System.out.println(accountNumber);
	               blnFlag=true;
	        } 
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Bank Account Number field is displayed under Payment Information option",
	                            "Bank Account Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	       
	        
	        Thread.sleep(2000);
	        if(cnf.FnExplicitWait("XPATH", mbo.saveAutoPay,driver)){
	               ((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.saveAutoPay)));   
	               repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is displayed","PASS",runManagerInfoObj);
	               WebElement PayNowButton=driver.findElement(By.xpath(mbo.saveAutoPay));
	               //cnf.ScrollToView(PayNowButton);
	               if(PayNowButton.isEnabled()){
	                     repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is enabled","Save Auto-Pay button is enabled.","PASS",runManagerInfoObj);
	                     if(cnf.JSClick(PayNowButton,driver)){
	                            repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is clicked","Save Auto-Pay button is clicked.","PASS",runManagerInfoObj);
	                            
	                            Thread.sleep(5000);
	                            
	                            if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne,driver)){
	                                   WebElement VerifyPaymentPageOne=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne));
	                                   if(VerifyPaymentPageOne.getText().contains("Verify Payment Information")){
	                                          repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is navigated to Verify Payment page","PASS",runManagerInfoObj);
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPage_RoutingNumber,driver)){
	                                                 WebElement VerifyPaymentPage_RoutingNumber=driver.findElement(By.xpath(mbo.VerifyPaymentPage_RoutingNumber));
	                                                 if(VerifyPaymentPage_RoutingNumber.getAttribute("textContent").contains(routingNumber)){
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Routing Number is displayed","Correct Routing Number is displayed","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Routing Number is displayed","Correct Routing Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Routing Number is displayed","Correct Routing Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_AccountNumber,driver)){
	                                                 WebElement VerifyPaymentPageOne_AccountNumber=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_AccountNumber));
	                                                 if(VerifyPaymentPageOne_AccountNumber.getAttribute("textContent").contains(accountNumber)){
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Account Number is displayed","Correct Account Number is displayed","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Account Number is displayed","Correct Account Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Account Number is displayed","Correct Account Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentAmount,driver)){
	                                                 WebElement VerifyPaymentPageOne_PaymentAmount=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentAmount));
	                                                 if(VerifyPaymentPageOne_PaymentAmount.getAttribute("textContent").equalsIgnoreCase("Statement Balance Due")){
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","Payment Amount is not displayed as \"Statement Balance Due\" for auto pay account","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Payment Amount is displayed","Correct Payment Amount is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentDate,driver)){
	                                                 WebElement VerifyPaymentPageOne_PaymentDate=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentDate));
	                                                 System.out.println(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent"));
	                                                 if(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent").equalsIgnoreCase("Statement Due Date")){
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment date is displayed as \"Statement Due Date\" for auto pay account","Payment date is displayed as \"Statement Due Date\" for auto pay account","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                        Thread.sleep(5000);
	                                                 }
	                                                 else{
	                                                	 repfn.FnUpdateTestStepResHTML("Verify if Payment date is displayed as \"Statement Due Date\" for auto pay account","Payment date is not displayed as \"Statement Due Date\" for auto pay account","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Payment Date is displayed","Correct Payment Date is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          if(cnf.FnExplicitWait("XPATH", mbo.EditPaymentDetailsLinkAutoPay,driver)){
	                                                 repfn.FnUpdateTestStepResHTML("Verify Edit Payment Details link is displayed","Edit Payment Details link is displayed","PASS",runManagerInfoObj);
	                                                 WebElement EditPaymentDetailsLink=driver.findElement(By.xpath(mbo.EditPaymentDetailsLinkAutoPay));
	                                                System.out
															.println("======Check======= "+cnf.JSClick(EditPaymentDetailsLink,driver));
	                                                 if(cnf.JSClick(EditPaymentDetailsLink,driver)){
	                                                        repfn.FnUpdateTestStepResHTML("Verify Edit Payment Details link is clicked","Edit Payment Details link is clicked","PASS",runManagerInfoObj);
	                                                        
	                                                        Thread.sleep(5000);
	                                                        
	                                                        if(cnf.FnExplicitWait("XPATH", mbo.PaymentInformationHeader,driver)){
	                                                               repfn.FnUpdateTestStepResHTML("Verify User is navigated back to Pay Bill page","User is navigated back to Pay Bill page","PASS",runManagerInfoObj);
	                                                               
	                                                               if(cnf.FnExplicitWait("XPATH", mbo.RoutingNumber,driver)){
	                                                                     WebElement RoutingNumber=driver.findElement(By.xpath(mbo.RoutingNumber));
	                                                                      if(RoutingNumber.getAttribute("value").equalsIgnoreCase(routingNumberOne)){
	                                                                            repfn.FnUpdateTestStepResHTML("Verify Previously entered Routing Number is pre-populated in Routing Number field",
	                                                                                          "Previously entered Routing Number is pre-populated in Routing Number field","PASS",runManagerInfoObj);
	                                                                            blnFlag=true;
	                                                                     }
	                                                                     else{
	                                                                            repfn.FnUpdateTestStepResHTML("Verify Previously entered Routing Number is pre-populated in Routing Number field",
	                                                                                          "Previously entered Routing Number is not pre-populated in Routing Number field","FAIL",runManagerInfoObj);
	                                                                            blnFlag=false;
	                                                                     }
	                                                               }
	                                                               else{
	                                                                      repfn.FnUpdateTestStepResHTML("Verify Routing Number field is displayed","Routing Number field is not displayed","FAIL",runManagerInfoObj);
	                                                                     blnFlag=false;
	                                                               }
	                                                               
	                                                               if(cnf.FnExplicitWait("XPATH", mbo.BankAccountNumber,driver)){
	                                                                     WebElement BankAccountNumber=driver.findElement(By.xpath(mbo.BankAccountNumber));
	                                                                      if(BankAccountNumber.getAttribute("value").equalsIgnoreCase(accountNumberOne)){
	                                                                            repfn.FnUpdateTestStepResHTML("Verify Previously entered Account Number is pre-populated in Account Number field",
	                                                                                          "Previously entered Account Number is pre-populated in Account Number field","PASS",runManagerInfoObj);
	                                                                            blnFlag=true;
	                                                                     }
	                                                                     else{
	                                                                            repfn.FnUpdateTestStepResHTML("Verify Previously entered Account Number is pre-populated in Account Number field",
	                                                                                          "Previously entered Account Number is not pre-populated in Account Number field","FAIL",runManagerInfoObj);
	                                                                            blnFlag=false;
	                                                                     }
	                                                               }
	                                                               else{
	                                                                      repfn.FnUpdateTestStepResHTML("Verify Account Number field is displayed","Account Number field is not displayed","FAIL",runManagerInfoObj);
	                                                                     blnFlag=false;
	                                                               }
	                                                               
	                                                              
	                                                               
	                                                               
	                                                        }
	                                                        else{
	                                                               repfn.FnUpdateTestStepResHTML("Verify User is navigated back to Pay Bill page","User is not navigated back to Pay Bill page","FAIL",runManagerInfoObj);
	                                                               blnFlag=false;
	                                                        }
	                                                        
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify Edit Payment Details link is clicked","Edit Payment Details link is not clicked","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Edit Payment Details link is displayed","Edit Payment Details link is not displayed","FAIL",runManagerInfoObj);
	                                                 blnFlag=false;
	                                          }

	                                          
	                                   }
	                                   else{
	                                          repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is not navigated to Verify Payment page","FAIL",runManagerInfoObj);
	                                          blnFlag=false;
	                                   }
	                            }
	                     }
	                     else{
	                            repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is clicked","Save Auto-Pay button is not clicked.","FAIL",runManagerInfoObj);
	                            blnFlag=false;
	                     }
	               }
	               else{
	                     repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is enabled","Save Auto-Pay button is not enabled","FAIL",runManagerInfoObj);
	                     blnFlag=false;
	               }
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is not displayed","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        driver.switchTo().defaultContent();
	        
	        Thread.sleep(5000);
	        if(cnf.FnExplicitWait("XPATH", mbo.ViewStatementsLink,driver)){
	               repfn.FnUpdateTestStepResHTML("Verify View Statements Link is displayed","View Statements Link is displayed","PASS",runManagerInfoObj);
	               WebElement ViewStatementsLink=driver.findElement(By.xpath(mbo.ViewStatementsLink));
	               if(cnf.JSClick(ViewStatementsLink,driver)){
	                     repfn.FnUpdateTestStepResHTML("Verify View Statements Link is clicked","View Statements Link is clicked","PASS",runManagerInfoObj);
	                     WebElement ConfirmCancel=driver.findElement(By.xpath(mbo.ConfirmCancel));
	                            if(cnf.FnExplicitWait("XPATH", mbo.ConfirmCancel,driver)){
	                                   repfn.FnUpdateTestStepResHTML("Verify Confirm Navigation pop-up is displayed", "Confirm Navigation pop-up is displayed","PASS",runManagerInfoObj);
	                                   cnf.JSClick(ConfirmCancel,driver);
	                                   repfn.FnUpdateTestStepResHTML("Verify Navigation to View Statements page", "Navigation to View Statements page is done","PASS",runManagerInfoObj);
	                                   Thread.sleep(5000);
	                                   blnFlag=true;
	                            }
	                            else{
	                                   repfn.FnUpdateTestStepResHTML("Verify Confirm Navigation pop-up is displayed", "Confirm Navigation pop-up is not displayed","FAIL",runManagerInfoObj);
	                                   blnFlag=false;
	                            }
	                     
	               }
	               else{
	                     repfn.FnUpdateTestStepResHTML("Verify View Statements Link is clicked","View Statements Link is not clicked","FAIL",runManagerInfoObj);
	                     blnFlag=false;
	               }
	               
	               
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify View Statements Link is displayed","View Statements Link is not displayed","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	 }
	 
	 catch (Exception e)

	 {
	        repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Bill informatio",
	                     "User is able to verify Pay Bill information due to some exception","FAIL",runManagerInfoObj);

	 blnFlag=false;
	        System.err.println("Message : "+e.getMessage());
	        System.err.println("Cause : "+e.getCause());
	        
	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
	 
	}
public synchronized boolean FnVerify_PayBillButton_Disabled(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{

	   try{

		   driver.switchTo().frame("iFrameResizer0");
		   Thread.sleep(2000);
		   if(cnf.FnExplicitWait("XPATH", mbo.PayNowButton,driver)){
			   ((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.PayNowButton)));   
			   repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is displayed","PASS",runManagerInfoObj);
			   WebElement PayNowButton=driver.findElement(By.xpath(mbo.PayNowButton));
			   //cnf.ScrollToView(PayNowButton);
			   if(PayNowButton.isEnabled()){
				   repfn.FnUpdateTestStepResHTML("Verify Pay Now button is not enabled","Pay Now button is enabled.","FAIL",runManagerInfoObj);
				   blnFlag=false;
			   }
			   else{
				   repfn.FnUpdateTestStepResHTML("Verify Pay Now button is not enabled","Pay Now button is not enabled","PASS",runManagerInfoObj);
				   blnFlag=true;
			   }
		   }
		   else{
			   repfn.FnUpdateTestStepResHTML("Verify Pay Now button is displayed","Pay Now button is not displayed","FAIL",runManagerInfoObj);
			   blnFlag=false;
		   }


		   driver.switchTo().defaultContent();
	   }

	   catch (Exception e)

	   {
		   repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Now button on Pay Bill page",
				   "User is able to verify Pay Now button on Pay Bill page due to some exception","FAIL",runManagerInfoObj);

		   blnFlag=false;
		   System.err.println("Message : "+e.getMessage());
		   System.err.println("Cause : "+e.getCause());

	   }
	   m1.put("STEPSTATUS", blnFlag);
	   return blnFlag;
   }
   
public synchronized boolean fnAutoPayCreditOrDebitErrorMessageinvalidExpirationDate(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{

		driver.switchTo().frame("iFrameResizer0");
		if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.creditDebitCard,driver))
		{
			blnFlag=true;
			repfn.FnUpdateTestStepResHTML("Verify if user has navigated to pay bill screen","User has navigated to pay bill screen","PASS",runManagerInfoObj);
			WebElement creditOrDebitCard=driver.findElement(By.id(mbo.creditDebitCard));
			if(cnf.JSClick(creditOrDebitCard,driver))
			{
				Thread.sleep(5000);
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Credit/Debit\" card option","User has selected the \"Credit/Debit\" card option","PASS",runManagerInfoObj);
				if(cnf.FnExplicitlessWait_untilClickable("ID", mbo.autoPayId,driver))
				{
					WebElement autoPayPayment=driver.findElement(By.id(mbo.autoPayId));
					cnf.JSClick(autoPayPayment,driver);
					Thread.sleep(5000);
					blnFlag=true;
					repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Auto-Pay\" payment option","User has selected the \"Auto-Pay\" payment option","PASS",runManagerInfoObj);
				if(cnf.FnExplicitWait("XPATH", mbo.billingCardNumber,driver))
				{
					blnFlag=true;
					repfn.FnUpdateTestStepResHTML("Verify if card number field to enter card number is present","Card number field to enter card number is present","PASS",runManagerInfoObj);
					if(blnFlag)
					{
						driver.findElement(By.xpath(mbo.billingCardNumber)).sendKeys("4444444444444448",Keys.TAB);
						blnFlag=true;
						repfn.FnUpdateTestStepResHTML("Verify if user has entered the card number","User has entered the card number: "+"4444444444444448","PASS",runManagerInfoObj);
						if(cnf.FnExplicitWait("XPATH", "//span[@ng-switch-when='Visa']",driver))
						{
							
							blnFlag=true;
							repfn.FnUpdateTestStepResHTML("Verify if type of the card near the text box is displayed depending on card number","Type of the card near the text box is displayed depending on card number: "+"Visa","PASS",runManagerInfoObj);
						}
						else
						{
							blnFlag=false;
							repfn.FnUpdateTestStepResHTML("Verify if type of the card near the text box is displayed depending on card number","Type of the card near the text box is not displayed depending on card number: "+"Visa","FAIL",runManagerInfoObj);
						}
						if(cnf.FnExplicitWait("ID", mbo.billingExpirationDate,driver))
						{
							blnFlag=true;
							repfn.FnUpdateTestStepResHTML("Verify if expiration date field to enter expiration date is present","Expiration date field to enter expiration date is present","PASS",runManagerInfoObj);
							if(blnFlag)
							{
								driver.findElement(By.id(mbo.billingExpirationDate)).sendKeys("11/2010",Keys.TAB);
								blnFlag=true;
								repfn.FnUpdateTestStepResHTML("Verify if user has entered the expiration date","User has entered the expiration date: "+"11/2010","PASS",runManagerInfoObj);
								
								if(cnf.FnExplicitWait("XPATH", mbo.errorMessageForExpirationDate,driver))
								{
									blnFlag=true;
									repfn.FnUpdateTestStepResHTML("Verify if error message is displayed for invalid expiration date","Error message is displayed for invalid expiration date","PASS",runManagerInfoObj);
									if(cnf.FnExplicitWait("XPATH", "//button[@disabled='disabled'][contains(.,'Save Auto-Pay')]",driver))
									{
										blnFlag=true;
										
										repfn.FnUpdateTestStepResHTML("Verify if \"Save Auto-Pay\" button is disabled for incorrect card number","\"Save Auto-Pay\" button is disabled for incorrect card number","PASS",runManagerInfoObj);
										 
									}
									else
									{
										blnFlag=false;
										repfn.FnUpdateTestStepResHTML("Verify if \"Save Auto-Pay\" button is disabled for incorrect card number","\"Save Auto-Pay\" button is not disabled for incorrect card number","PASS",runManagerInfoObj);
									}
									
									
								}
								else
								{
									blnFlag=false;
									repfn.FnUpdateTestStepResHTML("Verify if error message is displayed for invalid expiration date","Error message is not displayed for invalid expiration date","FAIL",runManagerInfoObj);
								}
						
							}
							else
							{
								blnFlag=false;
								repfn.FnUpdateTestStepResHTML("Verify if user has entered the expiration date","User has not entered the expiration date: "+"11/2010","FAIL",runManagerInfoObj);
							}
						}
						else
						{
							blnFlag=true;
							repfn.FnUpdateTestStepResHTML("Verify if expiration date field to enter expiration date is present","Expiration date field to enter expiration date is not present","FAIL",runManagerInfoObj);
						}		
						
					}
					else
					{
						blnFlag=false;
						repfn.FnUpdateTestStepResHTML("Verify if user has entered the card number","User has not entered the card number: "+"4444444444444448","FAIL",runManagerInfoObj);
					}
				}
				else
				{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Verify if card number field to enter card number is present","Card number field to enter card number is not present","FAIL",runManagerInfoObj);
				}
				}
				else
				{
					blnFlag=false;
					repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Auto-Pay\" payment option","User has not selected the \"Auto-Pay\" payment option","FAIL",runManagerInfoObj);
				}
			}
			else
			{
				blnFlag=false;
				repfn.FnUpdateTestStepResHTML("Verify if user has selected the \"Credit/Debit\" card option","User has not selected the \"Credit/Debit\" card option","FAIL",runManagerInfoObj);
			}
		}
		else
		{
			blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if user has navigated to pay bill screen","User has not navigated to pay bill screen","FAIL",runManagerInfoObj);
		}
		 driver.switchTo().defaultContent();
	}
	catch (Exception e)

	 {		
		 blnFlag=false;
			repfn.FnUpdateTestStepResHTML("Verify if user is displayed with error message for incorrect expiration date","User is not displayed with error message for incorrect expiration date due to some exception","FAIL",runManagerInfoObj);
		 System.err.println("Message : "+e.getMessage());
		 System.err.println("Cause : "+e.getCause());
	 }
	
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
}
public synchronized boolean FnVerify_saveAutoPayButtonDisabledBlankField(WebDriver driver,RunManagerInfo runManagerInfoObj){
  	
  	try{
  		
  		driver.switchTo().frame("iFrameResizer0");
  		Thread.sleep(2000);
  		if(cnf.FnExplicitWait("XPATH", "//button[@disabled='disabled'][contains(.,'Save Auto-Pay')]",driver)){
  			((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath("//button[@disabled='disabled'][contains(.,'Save Auto-Pay')]")));   
  			repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is displayed","PASS",runManagerInfoObj);
  			WebElement disabledAutoPay=driver.findElement(By.xpath("//button[@disabled='disabled'][contains(.,'Save Auto-Pay')]"));
  			//cnf.ScrollToView(PayNowButton);
  			if(disabledAutoPay.isEnabled()){
  				repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is not enabled","Save Auto-Pay button is  enabled.","FAIL",runManagerInfoObj);
  				
  				blnFlag=false;
  			}
  			else{
  				repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is not enabled","Save Auto-Pay button is not enabled","PASS",runManagerInfoObj);
  				blnFlag=true;
  			}
  		}
  		else{
  			repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is not displayed","FAIL",runManagerInfoObj);
  			blnFlag=false;
  		}
  		
  		
  		driver.switchTo().defaultContent();

  		
  		
  	}
  	
  	catch (Exception e)

		{
			repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Now button on Pay Bill page",
					"User is able to verify Pay Now button on Pay Bill page due to some exception","FAIL",runManagerInfoObj);

	      	 blnFlag=false;
			System.err.println("Message : "+e.getMessage());
			System.err.println("Cause : "+e.getCause());
			
		}
		m1.put("STEPSTATUS", blnFlag);
		return blnFlag;
  }
public synchronized boolean FnValidateEditPaymentOption_Credit_DebitAutoPay(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception{
	  
	String CardNumber = "4444444444444448";
	String ExpirationDate = "12/2016";
   try{

        driver.switchTo().frame("iFrameResizer0");
        
        if(cnf.FnExplicitWait("XPATH", mbo.CardNumber,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Card Number field is displayed","Card Number field is displayed","PASS",runManagerInfoObj);
			WebElement cardNumber=driver.findElement(By.xpath(mbo.CardNumber));
			cardNumber.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),CardNumber);
			repfn.FnUpdateTestStepResHTML("Verify Card Number is entered","Card Number is entered: "+CardNumber,"PASS",runManagerInfoObj);
			blnFlag=true;
	
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Card Number field is displayed","Card Number field is not displayed","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
        
        if(cnf.FnExplicitWait("XPATH", mbo.ExpirationDate,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Expiration Date field is displayed","Expiration Date field is displayed","PASS",runManagerInfoObj);
			WebElement expirationDate=driver.findElement(By.xpath(mbo.ExpirationDate));
			expirationDate.sendKeys(Keys.HOME,Keys.chord(Keys.SHIFT,Keys.END),ExpirationDate);
			repfn.FnUpdateTestStepResHTML("Verify Expiration Date is entered","Expiration Date is entered: "+ExpirationDate,"PASS",runManagerInfoObj);
			blnFlag=true;
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Expiration Date field is displayed","Expiration Date field is not displayed","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
        
        driver.switchTo().defaultContent();
        
   }
   
   catch (Exception e)

        {
               repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Bill button on Home page",
                            "User is able to verify Pay Bill button on Home page due to some exception","FAIL",runManagerInfoObj);

        blnFlag=false;
               System.err.println("Message : "+e.getMessage());
               System.err.println("Cause : "+e.getCause());
               
        }
        m1.put("STEPSTATUS", blnFlag);
        return blnFlag;
   
}
public synchronized boolean FnClickPayBillButtonCreditDebitAutoPay(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
{
	 
	 String cardNumberOne = "";
	 String paymentDateOne = "";
	 String cardNumber = "";
	 String expirationDate = "";
	 String paymentAmount = "";
	 String paymentDate = "";
	 String month = "";
	 String day = "";
	 String year = "";

	 try{
	        
	        driver.switchTo().frame("iFrameResizer0");
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.CardNumber,driver)){
	               WebElement CardNumber=driver.findElement(By.xpath(mbo.CardNumber));
	               cardNumberOne = CardNumber.getAttribute("value");       
	               int length = cardNumberOne.length();
	               cardNumber = cardNumberOne.substring((length-4));
	               System.out.println(cardNumber);
	               blnFlag=true;
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Card Number field is displayed under Payment Information option",
	                            "Card Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.ExpirationDate,driver)){
	               WebElement ExpirationDate=driver.findElement(By.xpath(mbo.ExpirationDate));
	               expirationDate = ExpirationDate.getAttribute("value");
	               blnFlag=true;
	        } 
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Expiration Date field is displayed under Payment Information option",
	                            "Expiration Date field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	       
	        
	        Thread.sleep(2000);
	        if(cnf.FnExplicitWait("XPATH", mbo.saveAutoPay,driver)){
	               ((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.saveAutoPay)));   
	               repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is displayed","PASS",runManagerInfoObj);
	               WebElement saveAutoPay=driver.findElement(By.xpath(mbo.saveAutoPay));
	               //cnf.ScrollToView(PayNowButton);
	               if(saveAutoPay.isEnabled()){
	                     repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is enabled","Save Auto-Pay button is enabled.","PASS",runManagerInfoObj);
	                     if(cnf.JSClick(saveAutoPay,driver)){
	                            repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is clicked","Save Auto-Pay button is clicked.","PASS",runManagerInfoObj);
	                            
	                            Thread.sleep(5000);
	                            
	                            if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne,driver)){
	                                   WebElement VerifyPaymentPageOne=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne));
	                                   if(VerifyPaymentPageOne.getText().contains("Verify Payment Information")){
	                                          repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is navigated to Verify Payment page","PASS",runManagerInfoObj);
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPage_CardNumber,driver)){
	                                                 WebElement VerifyPaymentPage_CardNumber=driver.findElement(By.xpath(mbo.VerifyPaymentPage_CardNumber));
	                                                 if(VerifyPaymentPage_CardNumber.getAttribute("textContent").contains(cardNumber)){
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Card Number is displayed","Correct Card Number is displayed","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Card Number is displayed","Correct Card Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Card Number is displayed","Card Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_ExpirationDate,driver)){
	                                        	  
	                                                 WebElement VerifyPaymentPageOne_ExpirationDate=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_ExpirationDate));
	                                                
	                                                 
	                                                 
	                                                 
	                                                 
	                                                 
	                                                 
	                                                 
	                                                 
	                                                 if(Pattern.matches("([0-9]{2}\\/[0-9]{4})", VerifyPaymentPageOne_ExpirationDate.getAttribute("textContent")))	{
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Expiration Date in the format MM/YYYY is correct","Expiration Date in the format MM/YYYY is correct: "+VerifyPaymentPageOne_ExpirationDate.getAttribute("textContent"),"PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                	 repfn.FnUpdateTestStepResHTML("Verify if Expiration Date in the format MM/YYYY is correct","Expiration Date in the format MM/YYYY is not correct","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Expiration Date is displayed","Correct Expiration Date is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentAmount,driver)){
	                                                 WebElement VerifyPaymentPageOne_PaymentAmount=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentAmount));
	                                                 if(VerifyPaymentPageOne_PaymentAmount.getAttribute("textContent").equalsIgnoreCase("Statement Balance Due")){
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","Payment Amount is not displayed as \"Statement Balance Due\" for auto pay account","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Payment Amount is displayed","Correct Payment Amount is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentDate,driver)){
	                                                 WebElement VerifyPaymentPageOne_PaymentDate=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentDate));
	                                                 System.out.println(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent"));
	                                                 if(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent").equalsIgnoreCase("Statement Due Date")){
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment date is displayed as \"Statement Due Date\" for auto pay account","Payment date is displayed as \"Statement Due Date\" for auto pay account","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                	 repfn.FnUpdateTestStepResHTML("Verify if Payment date is displayed as \"Statement Due Date\" for auto pay account","Payment date is not displayed as \"Statement Due Date\" for auto pay account","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Payment Date is displayed","Correct Payment Date is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          if(cnf.FnExplicitWait("XPATH", mbo.EditPaymentDetailsLinkAutoPay,driver)){
	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Edit Payment Details\" link is displayed","\"Edit Payment Details\" link is displayed","PASS",runManagerInfoObj);
                                                blnFlag=true;
                                                
                                                    if(cnf.FnExplicitWait("XPATH", mbo.supportLinkInBilling,driver)){
      	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Support\" link is displayed","\"Support\" link is displayed","PASS",runManagerInfoObj);
                                                        blnFlag=true;
                                                        if(cnf.FnExplicitWait("XPATH", "//button[@disabled='disabled']",driver)){
          	                                        	  repfn.FnUpdateTestStepResHTML("Verify if disabled \"Save\" button is displayed","Disabled \"Save\" button is displayed","PASS",runManagerInfoObj);
                                                            blnFlag=true;
                                                            if(cnf.FnExplicitWait("ID", "acceptTermsAndConditions",driver)){
              	                                        	  repfn.FnUpdateTestStepResHTML("Verify if Auto-Pay terms and conditions check box is present","Auto-pay terms and conditions checkbox is present","PASS",runManagerInfoObj);
                                                                blnFlag=true;
                                                                if(cnf.FnExplicitWait("XPATH", "//a[@class='sb-print-tc-link sm semi-bold'][contains(.,'Print Auto-Pay Terms & Conditions')]",driver)){
                  	                                        	  repfn.FnUpdateTestStepResHTML("Verify if there is an option to print Auto-Pay terms and conditions  is present","Auto-pay terms and conditions print option is present","PASS",runManagerInfoObj);
                                                                    blnFlag=true;
                                                                         }
                  	                                          else
                  	                                          {
                  	                                        	  repfn.FnUpdateTestStepResHTML("Verify if there is an option to print Auto-Pay terms and conditions  is present","Auto-pay terms and conditions print option is not present","FAIL",runManagerInfoObj);
                                                                    blnFlag=false;
                  	                                          }
                                                                     }
              	                                          else
              	                                          {
              	                                        	  repfn.FnUpdateTestStepResHTML("Verify if Auto-Pay terms and conditions check box is present","Auto-pay terms and conditions checkbox is not present","FAIL",runManagerInfoObj);
                                                                blnFlag=false;
              	                                          }
                                                                 }
          	                                          else
          	                                          {
          	                                        	  repfn.FnUpdateTestStepResHTML("Verify if disabled \"Save\" button is displayed","Disabled \"Save\" button is not displayed","FAIL",runManagerInfoObj);
                                                            blnFlag=false;
          	                                          }
                                                             }
      	                                          else
      	                                          {
      	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Support\" link is displayed","\"Support\" link is not displayed","FAIL",runManagerInfoObj);
                                                        blnFlag=false;
      	                                          }
                                                        
                                                     }
	                                          else
	                                          {
	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Edit Payment Details\" link is displayed","\"Edit Payment Details\" link is not displayed","FAIL",runManagerInfoObj);
                                                blnFlag=false;
	                                          }
	                                          
	                                         if(cnf.FnExplicitWait("XPATH", "//a[@ ng-click='cancelPayment()']",driver))
	                                         {
	                                        	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is displayed","Cancel link is displayed","PASS",runManagerInfoObj);
                                               blnFlag=true;
                                               WebElement cancelLink=driver.findElement(By.xpath("//a[@ ng-click='cancelPayment()']"));
                                               if(cnf.JSClick(cancelLink,driver))
                                               {
                                              	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is clicked","Cancel link is clicked","PASS",runManagerInfoObj);
                                                   blnFlag=true;
                                                   if(cnf.FnExplicitWait("XPATH", "//button[@class='sb-btn sb-btn--primary pull-right ng-binding ng-scope']",driver))
                                                   {
                                                  	 repfn.FnUpdateTestStepResHTML("Verify if ok button is present in popup","OK button is present in popup","PASS",runManagerInfoObj);
                                                       blnFlag=true;
                                                       WebElement OKButton=driver.findElement(By.xpath("//button[@class='sb-btn sb-btn--primary pull-right ng-binding ng-scope']"));
                                                       if(cnf.JSClick(OKButton,driver))
                                                       {
                                                      	 repfn.FnUpdateTestStepResHTML("Verify if ok button is clicked in popup","OK button is clicked in popup","PASS",runManagerInfoObj);
                                                           blnFlag=true;
                                                       }
                                                       else
                                                       {
                                                      	 repfn.FnUpdateTestStepResHTML("Verify if ok button is clicked in popup","OK button is not clicked in popup","FAIL",runManagerInfoObj);
                                                           blnFlag=false;
                                                       }
                                                   }
                                                   else
                                                   {
                                                  	 repfn.FnUpdateTestStepResHTML("Verify if ok button is present in popup","OK button is present in popup","FAIL",runManagerInfoObj);
                                                       blnFlag=false;
                                                   }
                                               }
                                               else
                                               {
                                              	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is clicked","Cancel link is not clicked","FAIL",runManagerInfoObj);
                                                   blnFlag=false;
                                               }
	                                         }
	                                         else
	                                         {
	                                        	 repfn.FnUpdateTestStepResHTML("Verify if cancel link is displayed","Cancel link is not displayed","FAIL",runManagerInfoObj);
                                               blnFlag=false;
	                                         }
	                                          
	                                   }
	                                   else{
	                                          repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is not navigated to Verify Payment page","FAIL",runManagerInfoObj);
	                                          blnFlag=false;
	                                   }
	                            }
	                     }
	                     else{
	                            repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is clicked","Save Auto-Pay button is not clicked.","FAIL",runManagerInfoObj);
	                            blnFlag=false;
	                     }
	               }
	               else{
	                     repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is enabled","Save Auto-Pay button is not enabled","FAIL",runManagerInfoObj);
	                     blnFlag=false;
	               }
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is not displayed","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        driver.switchTo().defaultContent();
	        
	 }
	 
	 catch (Exception e)

	 {
	        repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Bill information",
	                     "User is not able to verify Pay Bill information due to some exception","FAIL",runManagerInfoObj);

	 blnFlag=false;
	        System.err.println("Message : "+e.getMessage());
	        System.err.println("Cause : "+e.getCause());
	        
	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
	 
}
public synchronized boolean FnClickPayBillButtonCreditDebitAutoPayOverview(WebDriver driver,RunManagerInfo runManagerInfoObj) throws Exception
{
	 
	 String cardNumberOne = "";
	 String paymentDateOne = "";
	 String cardNumber = "";
	 String expirationDate = "";
	 String paymentAmount = "";
	 String paymentDate = "";
	 String month = "";
	 String day = "";
	 String year = "";

	 try{
	        
	        driver.switchTo().frame("iFrameResizer0");
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.CardNumber,driver)){
	               WebElement CardNumber=driver.findElement(By.xpath(mbo.CardNumber));
	               cardNumberOne = CardNumber.getAttribute("value");       
	               int length = cardNumberOne.length();
	               cardNumber = cardNumberOne.substring((length-4));
	               System.out.println(cardNumber);
	               blnFlag=true;
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Card Number field is displayed under Payment Information option",
	                            "Card Number field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        if(cnf.FnExplicitWait("XPATH", mbo.ExpirationDate,driver)){
	               WebElement ExpirationDate=driver.findElement(By.xpath(mbo.ExpirationDate));
	               expirationDate = ExpirationDate.getAttribute("value");
	               blnFlag=true;
	        } 
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Expiration Date field is displayed under Payment Information option",
	                            "Expiration Date field is not displayed under Payment Information option","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        Thread.sleep(2000);
	        if(cnf.FnExplicitWait("XPATH", mbo.saveAutoPay,driver)){
	               ((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.saveAutoPay)));   
	               repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is displayed","PASS",runManagerInfoObj);
	               WebElement saveAutoPay=driver.findElement(By.xpath(mbo.saveAutoPay));
	               //cnf.ScrollToView(PayNowButton);
	               if(saveAutoPay.isEnabled()){
	                     repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is enabled","Save Auto-Pay button is enabled.","PASS",runManagerInfoObj);
	                     if(cnf.JSClick(saveAutoPay,driver)){
	                            repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is clicked","Save Auto-Pay button is clicked.","PASS",runManagerInfoObj);
	                            
	                            Thread.sleep(5000);
	                            
	                            if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne,driver)){
	                                   WebElement VerifyPaymentPageOne=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne));
	                                   if(VerifyPaymentPageOne.getText().contains("Verify Payment Information")){
	                                          repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is navigated to Verify Payment page","PASS",runManagerInfoObj);
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPage_CardNumber,driver)){
	                                                 WebElement VerifyPaymentPage_CardNumber=driver.findElement(By.xpath(mbo.VerifyPaymentPage_CardNumber));
	                                                 if(VerifyPaymentPage_CardNumber.getAttribute("textContent").contains(cardNumber)){
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Card Number is displayed","Correct Card Number is displayed","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify Correct Card Number is displayed","Correct Card Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Card Number is displayed","Card Number is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_ExpirationDate,driver)){
	                                        	  
	                                                 WebElement VerifyPaymentPageOne_ExpirationDate=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_ExpirationDate));
	                                                
	                                                 
	                                                 if(Pattern.matches("([0-9]{2}\\/[0-9]{4})", VerifyPaymentPageOne_ExpirationDate.getAttribute("textContent")))	{
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Expiration Date in the format MM/YYYY is correct","Expiration Date in the format MM/YYYY is correct: "+VerifyPaymentPageOne_ExpirationDate.getAttribute("textContent"),"PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                	 repfn.FnUpdateTestStepResHTML("Verify if Expiration Date in the format MM/YYYY is correct","Expiration Date in the format MM/YYYY is not correct","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Expiration Date is displayed","Correct Expiration Date is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentAmount,driver)){
	                                                 WebElement VerifyPaymentPageOne_PaymentAmount=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentAmount));
	                                                 if(VerifyPaymentPageOne_PaymentAmount.getAttribute("textContent").equalsIgnoreCase("Statement Balance Due")){
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment Amount is displayed as \"Statement Balance Due\" for auto pay account","Payment Amount is not displayed as \"Statement Balance Due\" for auto pay account","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Payment Amount is displayed","Correct Payment Amount is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          
	                                          if(cnf.FnExplicitWait("XPATH", mbo.VerifyPaymentPageOne_PaymentDate,driver)){
	                                                 WebElement VerifyPaymentPageOne_PaymentDate=driver.findElement(By.xpath(mbo.VerifyPaymentPageOne_PaymentDate));
	                                                 System.out.println(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent"));
	                                                 if(VerifyPaymentPageOne_PaymentDate.getAttribute("textContent").equalsIgnoreCase("Statement Due Date")){
	                                                        repfn.FnUpdateTestStepResHTML("Verify if Payment date is displayed as \"Statement Due Date\" for auto pay account","Payment date is displayed as \"Statement Due Date\" for auto pay account","PASS",runManagerInfoObj);
	                                                        blnFlag=true;
	                                                 }
	                                                 else{
	                                                	 repfn.FnUpdateTestStepResHTML("Verify if Payment date is displayed as \"Statement Due Date\" for auto pay account","Payment date is not displayed as \"Statement Due Date\" for auto pay account","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                                        
	                                                 }
	                                          }
	                                          else{
	                                                 repfn.FnUpdateTestStepResHTML("Verify Correct Payment Date is displayed","Correct Payment Date is not displayed","FAIL",runManagerInfoObj);
	                                                        blnFlag=false;
	                                          }
	                                          if(cnf.FnExplicitWait("XPATH", mbo.EditPaymentDetailsLinkAutoPay,driver)){
	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Edit Payment Details\" link is displayed","\"Edit Payment Details\" link is displayed","PASS",runManagerInfoObj);
                                                blnFlag=true;
                                                
                                                    if(cnf.FnExplicitWait("XPATH", mbo.supportLinkInBilling,driver)){
      	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Support\" link is displayed","\"Support\" link is displayed","PASS",runManagerInfoObj);
                                                        blnFlag=true;
                                                        if(cnf.FnExplicitWait("XPATH", "//button[@disabled='disabled']",driver)){
          	                                        	  repfn.FnUpdateTestStepResHTML("Verify if disabled \"Save\" button is displayed","Disabled \"Save\" button is displayed","PASS",runManagerInfoObj);
                                                            blnFlag=true;
                                                            if(cnf.FnExplicitWait("ID", "acceptTermsAndConditions",driver)){
                                                            	WebElement acceptTC=driver.findElement(By.id("acceptTermsAndConditions"));
                                                            	
              	                                        	  repfn.FnUpdateTestStepResHTML("Verify if Auto-Pay terms and conditions check box is present","Auto-pay terms and conditions checkbox is present","PASS",runManagerInfoObj);
                                                                blnFlag=true;
                                                                if(cnf.JSClick(acceptTC,driver))
                                                                {
                                                                	 repfn.FnUpdateTestStepResHTML("Verify if Auto-Pay terms and conditions check box is checked","Auto-pay terms and conditions checkbox is checked","PASS",runManagerInfoObj);
                                                                     blnFlag=true;
                                                                
                                                                if(cnf.FnExplicitWait("XPATH", "//a[@class='sb-print-tc-link sm semi-bold'][contains(.,'Print Auto-Pay Terms & Conditions')]",driver)){
                  	                                        	  repfn.FnUpdateTestStepResHTML("Verify if there is an option to print Auto-Pay terms and conditions  is present","Auto-pay terms and conditions print option is present","PASS",runManagerInfoObj);
                                                                    blnFlag=true;
                                                                    if(cnf.FnExplicitWait("XPATH", mbo.saveAutoPayInfo,driver)){
                                                     	               ((JavascriptExecutor)driver).executeScript("arguments[0].scrollIntoView();", driver.findElement(By.xpath(mbo.saveAutoPayInfo)));   
                                                     	               repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is displayed","PASS",runManagerInfoObj);
                                                     	               WebElement saveAutoPayInfo=driver.findElement(By.xpath(mbo.saveAutoPayInfo));
                                                     	               //cnf.ScrollToView(PayNowButton);
                                                     	               if(saveAutoPayInfo.isEnabled()){
                                                     	                     repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is enabled","Save Auto-Pay button is enabled.","PASS",runManagerInfoObj);
                                                     	                     if(cnf.JSClick(saveAutoPayInfo,driver)){
                                                     	                            repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is clicked","Save Auto-Pay button is clicked.","PASS",runManagerInfoObj);
                                                     	                            
                                                     	                            Thread.sleep(5000);
                                                     	                           if(cnf.FnExplicitlessWait("XPATH", mbo.payementIssue, driver))
                                                   								{
                                                   									WebElement paymentIssue=driver.findElement(By.xpath(mbo.payementIssue));
                                                   									repfn.FnUpdateTestStepResHTML("Verify AutoPay option get confirmed sucessfully or not", "AutoPay option did not get confirm due to some payement issue as messgae displayed: "+paymentIssue.getText(), "FAIL",runManagerInfoObj);
                                                   									blnFlag=false;
                                                   								}
                                                   								else{
                                                     	                           if(cnf.FnExplicitWait("XPATH", mbo.autopay_ReturntoOverview,driver))
                                                     	 						 {
                                                     	 							
                                                     	 							 repfn.FnUpdateTestStepResHTML("Verify if  Return to overview Link  is present", " Return to overview Link is present", "PASS",runManagerInfoObj);
                                                     	 							 WebElement autopay_ReturntoOverview=driver.findElement(By.xpath(mbo.autopay_ReturntoOverview));
                                                     	 							 if(cnf.ElementClick(autopay_ReturntoOverview,driver))
                                                     	 							 {
                                                     	 								
                                                     	 								 repfn.FnUpdateTestStepResHTML("Verify if  Return to overview Link  is  clicked", " Return to overview Link is  clicked", "PASS",runManagerInfoObj);
                                                     	 								 Thread.sleep(5000);
                                                     	 								 driver.switchTo().defaultContent();
                                                     	 								 if(cnf.FnExplicitWait("Xpath", mbo.autopay_ManageLink,driver)){
                                                     	 									 repfn.FnUpdateTestStepResHTML("Verify User has reached overview page", " User has reached overview page", "PASS",runManagerInfoObj);
                                                     	 									 blnFlag=true;
                                                     	 								 }
                                                     	 								 else{
                                                     	 									 repfn.FnUpdateTestStepResHTML("Verify User has reached overview page", " User has not  reached overview page", "FAIL",runManagerInfoObj);
                                                     	 									 blnFlag=false;
                                                     	 								 }
                                                     	 								
                                                     	 							 }
                                                     	 							 else
                                                     	 							 {
                                                     	 								 blnFlag=false;
                                                     	 								 repfn.FnUpdateTestStepResHTML("Verify if  Return to overview Link  is  clicked", " Return to overview Link is   not clicked", "FAIL",runManagerInfoObj);
                                                     	 							 }
                                                     	 						 }
                                                     	 						 else
                                                     	 						 {
                                                     	 							 blnFlag=false;
                                                     	 							 repfn.FnUpdateTestStepResHTML("Verify if  Return to overview Link  is present", " Return to overview Link is  not present", "FAIL",runManagerInfoObj);
                                                     	 						 }
                                                   								}
                                                     	                    }
                                                    	                     else{
                                                    	                            repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is clicked","Save Auto-Pay button is not clicked.","FAIL",runManagerInfoObj);
                                                    	                            blnFlag=false;
                                                    	                     }
                                                    	               }
                                                    	               else{
                                                    	                     repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is enabled","Save Auto-Pay button is not enabled","FAIL",runManagerInfoObj);
                                                    	                     blnFlag=false;
                                                    	               }
                                                    	        }
                                                    	        else{
                                                    	               repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is not displayed","FAIL",runManagerInfoObj);
                                                    	               blnFlag=false;
                                                    	        }
                                                                         }
                  	                                          else
                  	                                          {
                  	                                        	  repfn.FnUpdateTestStepResHTML("Verify if there is an option to print Auto-Pay terms and conditions  is present","Auto-pay terms and conditions print option is not present","FAIL",runManagerInfoObj);
                                                                    blnFlag=false;
                  	                                          }
                                                                }
                                                                else
                                                                {
                                                                	repfn.FnUpdateTestStepResHTML("Verify if Auto-Pay terms and conditions check box is checked","Auto-pay terms and conditions checkbox is not checked","FAIL",runManagerInfoObj);
                                                                    blnFlag=false;
                                                                }
                                                                     }
                                                                
              	                                          else
              	                                          {
              	                                        	  repfn.FnUpdateTestStepResHTML("Verify if Auto-Pay terms and conditions check box is present","Auto-pay terms and conditions checkbox is not present","FAIL",runManagerInfoObj);
                                                                blnFlag=false;
              	                                          }
                                                                 }
          	                                          else
          	                                          {
          	                                        	  repfn.FnUpdateTestStepResHTML("Verify if disabled \"Save\" button is displayed","Disabled \"Save\" button is not displayed","FAIL",runManagerInfoObj);
                                                            blnFlag=false;
          	                                          }
                                                             }
      	                                          else
      	                                          {
      	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Support\" link is displayed","\"Support\" link is not displayed","FAIL",runManagerInfoObj);
                                                        blnFlag=false;
      	                                          }
                                                        
                                                     }
	                                          else
	                                          {
	                                        	  repfn.FnUpdateTestStepResHTML("Verify if \"Edit Payment Details\" link is displayed","\"Edit Payment Details\" link is not displayed","FAIL",runManagerInfoObj);
                                                blnFlag=false;
	                                          }
	                                          
	                                         
	                                          
	                                   }
	                                   else{
	                                          repfn.FnUpdateTestStepResHTML("Verify User is navigated to Verify Payment page","User is not navigated to Verify Payment page","FAIL",runManagerInfoObj);
	                                          blnFlag=false;
	                                   }
	                            }
	                     }
	                     else{
	                            repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is clicked","Save Auto-Pay button is not clicked.","FAIL",runManagerInfoObj);
	                            blnFlag=false;
	                     }
	               }
	               else{
	                     repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is enabled","Save Auto-Pay button is not enabled","FAIL",runManagerInfoObj);
	                     blnFlag=false;
	               }
	        }
	        else{
	               repfn.FnUpdateTestStepResHTML("Verify Save Auto-Pay button is displayed","Save Auto-Pay button is not displayed","FAIL",runManagerInfoObj);
	               blnFlag=false;
	        }
	        
	        driver.switchTo().defaultContent();
	        

	        
	 }
	 
	 catch (Exception e)

	 {
	        repfn.FnUpdateTestStepResHTML("Verify User is able to verify Pay Bill information",
	                     "User is not able to verify Pay Bill information due to some exception","FAIL",runManagerInfoObj);

	 blnFlag=false;
	        System.err.println("Message : "+e.getMessage());
	        System.err.println("Cause : "+e.getCause());
	        
	 }
	 m1.put("STEPSTATUS", blnFlag);
	 return blnFlag;
	 
}


public synchronized boolean FnClickAutoPay_Credit_Debit_Option(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{

		driver.switchTo().frame("iFrameResizer0");

		// Credit/Debit Radio button
		if(cnf.FnExplicitWait("XPATH", mbo.PayBill_Credit_Debit,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Credit/Debit Card Radio button is displayed under Select Payment Type option",
					"Credit/Debit Card Radio button is displayed under Select Payment Type option","PASS",runManagerInfoObj);
			WebElement PayBill_Credit_Debit=driver.findElement(By.xpath(mbo.PayBill_Credit_Debit));

			if(cnf.isElementExistOne("XPATH", mbo.PayBill_Credit_Debit_Selection,driver)){
				WebElement PayBill_Credit_Debit_Selection=driver.findElement(By.xpath(mbo.PayBill_Credit_Debit_Selection));
				String selectionState = PayBill_Credit_Debit_Selection.getAttribute("aria-checked");

				if(selectionState.equalsIgnoreCase("true")){
					repfn.FnUpdateTestStepResHTML("Verify Credit/Debit radio button is selected by default", 
							"Credit/Debit radio button is selected by default","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
					if(cnf.JSClick(PayBill_Credit_Debit,driver)){
						repfn.FnUpdateTestStepResHTML("Verify Credit/Debit Radio button is clicked under Select Payment Frequency option",
								"Credit/Debit Radio button is clicked under Select Payment Type option","PASS",runManagerInfoObj);
						blnFlag=true;
					}
					else{
						repfn.FnUpdateTestStepResHTML("Verify Credit/Debit Radio button is clicked under Select Payment Frequency option",
								"Credit/Debit Radio button is not clicked under Select Payment Type option","FAIL",runManagerInfoObj);
						blnFlag=false;
					}
				}
			}
			else{
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Credit/Debit Card Radio button is displayed under Select Payment Type option",
					"Credit/Debit Card Radio button is not displayed under Select Payment Type option","FAIL",runManagerInfoObj);
			blnFlag=false;
		}

		// Auto Pay Payment Frequency Radio button
		if(cnf.FnExplicitWait("XPATH", mbo.PaymentFrequency_AutoPay,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Auto Pay Radio button is displayed under Select Payment Frequency option",
					"Auto Pay Radio button is displayed under Select Payment Type option","PASS",runManagerInfoObj);
			WebElement PaymentFrequency_AutoPay=driver.findElement(By.xpath(mbo.PaymentFrequency_AutoPay));
			
			if(cnf.isElementExistOne("XPATH", mbo.PaymentFrequency_AutoPay_Selection,driver)){
				WebElement PaymentFrequency_AutoPay_Selection=driver.findElement(By.xpath(mbo.PaymentFrequency_AutoPay_Selection));
				String selectionState = PaymentFrequency_AutoPay_Selection.getAttribute("aria-checked");

				if(selectionState.equalsIgnoreCase("true")){
					repfn.FnUpdateTestStepResHTML("Verify Auto-Pay radio button is selected by default", 
							"Auto-Pay radio button is selected by default","PASS",runManagerInfoObj);
					blnFlag=true;
				}
				else{
     				if(cnf.JSClick(PaymentFrequency_AutoPay,driver)){
     					repfn.FnUpdateTestStepResHTML("Verify Auto-Pay Radio button is clicked under Select Payment Frequency option",
             					"Auto-Pay Radio button is clicked under Select Payment Type option","PASS",runManagerInfoObj);
     					blnFlag=true;
     				}
     				else{
     					repfn.FnUpdateTestStepResHTML("Verify Auto-Pay Radio button is clicked under Select Payment Frequency option",
             					"Auto-Pay Radio button is not clicked under Select Payment Type option","FAIL",runManagerInfoObj);
     					blnFlag=false;
     				}
				}
			}
			else{
				blnFlag=false;
			}
		}
		else{
			repfn.FnUpdateTestStepResHTML("Verify Auto Pay Radio button is displayed under Select Payment Frequency option",
					"Auto Pay Radio button is not displayed under Select Payment Type option","FAIL",runManagerInfoObj);
			blnFlag=false;
		}

		driver.switchTo().defaultContent();


	}

	catch (Exception e)

	{
		repfn.FnUpdateTestStepResHTML("Verify User is able to verify and click Auto Pay Credit_Debit Card radio button",
				"User is not able to verify and click Auto Pay Credit_Debit Card radio button due to some exception","FAIL",runManagerInfoObj);

		blnFlag=false;
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());

	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;

}
public synchronized boolean Fn_closeDetails(WebDriver driver,RunManagerInfo runManagerInfoObj){
	try{
		if(cnf.FnExplicitWait("XPATH", mbo.UserDetail_Backbtn,driver)){
			repfn.FnUpdateTestStepResHTML("Verify Close link is Displayed ","Close link is Displayed","PASS",runManagerInfoObj);
			WebElement close=driver.findElement(By.xpath(mbo.UserDetail_Backbtn));
			if(cnf.JSClick(close,driver)){
				blnFlag=true;
				repfn.FnUpdateTestStepResHTML("Verify Close link is  clicked ","Close link is clicked","PASS",runManagerInfoObj);
				Thread.sleep(1000);
			}else{
				repfn.FnUpdateTestStepResHTML("Verify Close link is clicked ","Close link is not clicked","FAIL",runManagerInfoObj);
				blnFlag=false;
			}
		}else{
			repfn.FnUpdateTestStepResHTML("Verify Close link is Displayed","Close link is not Displayed ","FAIL",runManagerInfoObj);
			blnFlag=false;
		}
	}
	catch(Exception e){
		repfn.FnUpdateTestStepResHTML("Verify Close link is Displayed and clicked ","Close link is not  Displayed and  not clicked due to some exception","FAIL",runManagerInfoObj);
		System.err.println("Message : "+e.getMessage());
		System.err.println("Cause : "+e.getCause());
		blnFlag=false;
	}
	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}
public synchronized boolean VoiceSettings(WebDriver driver,RunManagerInfo runManagerInfoObj)
{
	try
	{
		if (cnf.FnExplicitWait("XPATH", mbo.VoiceSettingsBtn,driver)) {
			WebElement VoiceSettings = driver.findElement(By.xpath(mbo.VoiceSettingsBtn));

			System.out.println("Voice Settings is displayed");
			repfn.FnUpdateTestStepResHTML("Verify if Voice Settings is displayed","Voice Settings is displayed", "PASS",runManagerInfoObj);
			if (cnf.JSClick(VoiceSettings,driver)) {
				repfn.FnUpdateTestStepResHTML("Verify if Voice Settings is clicked","Voice Settings is clicked", "PASS",runManagerInfoObj);
				if (cnf.FnExplicitWait("XPATH", mbo.VoiceSettingsMenu,driver)) {
					repfn.FnUpdateTestStepResHTML("Verify if Voice Settings Menu is displayed","Voice Settings Menu is displayed", "PASS",runManagerInfoObj);
					blnFlag = true;
				} 
				else {
					repfn.FnUpdateTestStepResHTML("Verify if Voice Settings Menu is displayed","Voice Settings Menu is not displayed", "FAIL",runManagerInfoObj);
					blnFlag = false;
				}
			} 
			else {
				repfn.FnUpdateTestStepResHTML("Verify if Voice Settings is clicked","Voice Settings is not clicked", "FAIL",runManagerInfoObj);
				blnFlag = false;
			}

		} 
		else {
			repfn.FnUpdateTestStepResHTML("Verify if Voice Settings is displayed","Voice Settings is not displayed", "FAIL",runManagerInfoObj);
			blnFlag = false;
		}

	} catch (Exception e) {

		repfn.FnUpdateTestStepResHTML("Verify if Voice Settings is diplayed and clicked or not ","Voice Settings is not  diplayed and not  clicked due to some exception","PASS",runManagerInfoObj);
		System.err.println("Message : " + e.getMessage());
		System.err.println("Cause : " + e.getCause());
		blnFlag = false;
	}

	m1.put("STEPSTATUS", blnFlag);
	return blnFlag;
}


}

